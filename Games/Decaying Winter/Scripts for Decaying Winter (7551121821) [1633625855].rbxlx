<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4"><Item class="StarterPlayer" referent="RBX1"><Properties><string name="Name">StarterPlayer</string></Properties><Item class="StarterPlayerScripts" referent="RBX4"><Properties><string name="Name">StarterPlayerScripts</string></Properties><Item class="LocalScript" referent="RBX7"><Properties><string name="Name">BubbleChat</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local l__ReplicatedStorage__2 = game:GetService("ReplicatedStorage");
local l__Chat__3 = game:GetService("Chat");
local l__TextService__4 = game:GetService("TextService");
local v5 = l__Players__1.LocalPlayer;
while v5 == nil do
	l__Players__1.ChildAdded:wait();
	v5 = l__Players__1.LocalPlayer;
end;
local l__PlayerGui__6 = v5:WaitForChild("PlayerGui");
local v7, v8 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserShouldLocalizeGameChatBubble");
end);
local v9, v10 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserFixBubbleChatText");
end);
local v11, v12 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserRoactBubbleChatBeta");
end);
local v13, v14 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserPreventOldBubbleChatOverlap");
end);
local function v15(p1)
	return utf8.len(utf8.nfcnormalize(p1));
end;
local v16 = 128 - v15("...") - 1;
local v17 = Instance.new("ScreenGui");
v17.Name = "BubbleChat";
v17.ResetOnSpawn = false;
v17.Parent = l__PlayerGui__6;
local function u1()
	local v18 = {
		data = {}
	};
	local v19 = Instance.new("BindableEvent");
	v18.Emptied = v19.Event;
	function v18.Size(p2)
		return #v18.data;
	end;
	function v18.Empty(p3)
		return v18:Size() <= 0;
	end;
	function v18.PopFront(p4)
		table.remove(v18.data, 1);
		if v18:Empty() then
			v19:Fire();
		end;
	end;
	function v18.Front(p5)
		return v18.data[1];
	end;
	function v18.Get(p6, p7)
		return v18.data[p7];
	end;
	function v18.PushBack(p8, p9)
		table.insert(v18.data, p9);
	end;
	function v18.GetData(p10)
		return v18.data;
	end;
	return v18;
end;
local function u2()
	return {
		Fifo = u1(), 
		BillboardGui = nil
	};
end;
local function u3(p11, p12, p13)
	return p12 + (p13 - p12) * math.min(v15(p11) / 75, 1);
end;
local function u4(p14, p15, p16)
	local v20 = {
		ComputeBubbleLifetime = function(p17, p18, p19)
			if p19 then
				return u3(p18, 8, 15);
			end;
			return u3(p18, 12, 20);
		end, 
		Origin = nil, 
		RenderBubble = nil, 
		Message = p14
	};
	v20.BubbleDieDelay = v20:ComputeBubbleLifetime(p14, p16);
	v20.BubbleColor = p15;
	v20.IsLocalPlayer = p16;
	return v20;
end;
local u5 = {
	WHITE = "dub", 
	BLUE = "blu", 
	GREEN = "gre", 
	RED = "red"
};
function createChatBubbleMain(p20, p21)
	local v21 = Instance.new("ImageLabel");
	v21.Name = "ChatBubble";
	v21.ScaleType = Enum.ScaleType.Slice;
	v21.SliceCenter = p21;
	v21.Image = "rbxasset://textures/" .. tostring(p20) .. ".png";
	v21.BackgroundTransparency = 1;
	v21.BorderSizePixel = 0;
	v21.Size = UDim2.new(1, 0, 1, 0);
	v21.Position = UDim2.new(0, 0, 0, 0);
	return v21;
end;
function createChatBubbleTail(p22, p23)
	local v22 = Instance.new("ImageLabel");
	v22.Name = "ChatBubbleTail";
	v22.Image = "rbxasset://textures/ui/dialog_tail.png";
	v22.BackgroundTransparency = 1;
	v22.BorderSizePixel = 0;
	v22.Position = p22;
	v22.Size = p23;
	return v22;
end;
function createChatBubbleWithTail(p24, p25, p26, p27)
	local v23 = createChatBubbleMain(p24, p27);
	createChatBubbleTail(p25, p26).Parent = v23;
	return v23;
end;
function createScaledChatBubbleWithTail(p28, p29, p30, p31)
	local v24 = createChatBubbleMain(p28, p31);
	local v25 = Instance.new("Frame");
	v25.Name = "ChatBubbleTailFrame";
	v25.BackgroundTransparency = 1;
	v25.SizeConstraint = Enum.SizeConstraint.RelativeXX;
	v25.Position = UDim2.new(0.5, 0, 1, 0);
	v25.Size = UDim2.new(p29, 0, p29, 0);
	v25.Parent = v24;
	createChatBubbleTail(p30, UDim2.new(1, 0, 0.5, 0)).Parent = v25;
	return v24;
end;
function createChatImposter(p32, p33, p34)
	local v26 = Instance.new("ImageLabel");
	v26.Name = "DialogPlaceholder";
	v26.Image = "rbxasset://textures/" .. tostring(p32) .. ".png";
	v26.BackgroundTransparency = 1;
	v26.BorderSizePixel = 0;
	v26.Position = UDim2.new(0, 0, -1.25, 0);
	v26.Size = UDim2.new(1, 0, 1, 0);
	local v27 = Instance.new("ImageLabel");
	v27.Name = "DotDotDot";
	v27.Image = "rbxasset://textures/" .. tostring(p33) .. ".png";
	v27.BackgroundTransparency = 1;
	v27.BorderSizePixel = 0;
	v27.Position = UDim2.new(0.001, 0, p34, 0);
	v27.Size = UDim2.new(1, 0, 0.7, 0);
	v27.Parent = v26;
	return v26;
end;
local u6 = {
	ChatBubble = {}, 
	ChatBubbleWithTail = {}, 
	ScalingChatBubbleWithTail = {}, 
	CharacterSortedMsg = (function()
		local v28 = {
			data = {}
		};
		local u7 = 0;
		function v28.Size(p35)
			return u7;
		end;
		function v28.Erase(p36, p37)
			if v28.data[p37] then
				u7 = u7 - 1;
			end;
			v28.data[p37] = nil;
		end;
		function v28.Set(p38, p39, p40)
			v28.data[p39] = p40;
			if p40 then
				u7 = u7 + 1;
			end;
		end;
		function v28.Get(p41, p42)
			if not p42 then
				return;
			end;
			if not v28.data[p42] then
				v28.data[p42] = u2();
				local u8 = nil;
				u8 = v28.data[p42].Fifo.Emptied:connect(function()
					u8:disconnect();
					v28:Erase(p42);
				end);
			end;
			return v28.data[p42];
		end;
		function v28.GetData(p43)
			return v28.data;
		end;
		return v28;
	end)()
};
local function v29(p44, p45, p46, p47, p48)
	u6.ChatBubble[p44] = createChatBubbleMain(p45, p48);
	if p47 then
		local v30 = -1;
	else
		v30 = 0;
	end;
	u6.ChatBubbleWithTail[p44] = createChatBubbleWithTail(p45, UDim2.new(0.5, -14, 1, v30), UDim2.new(0, 30, 0, 14), p48);
	if p47 then
		local v31 = -1;
	else
		v31 = 0;
	end;
	u6.ScalingChatBubbleWithTail[p44] = createScaledChatBubbleWithTail(p45, 0.5, UDim2.new(-0.5, 0, 0, v31), p48);
end;
v29(u5.WHITE, "ui/dialog_white", "ui/chatBubble_white_notify_bkg", false, Rect.new(5, 5, 15, 15));
v29(u5.BLUE, "ui/dialog_blue", "ui/chatBubble_blue_notify_bkg", true, Rect.new(7, 7, 33, 33));
v29(u5.RED, "ui/dialog_red", "ui/chatBubble_red_notify_bkg", true, Rect.new(7, 7, 33, 33));
v29(u5.GREEN, "ui/dialog_green", "ui/chatBubble_green_notify_bkg", true, Rect.new(7, 7, 33, 33));
function u6.SanitizeChatLine(p49, p50)
	if not (v16 < v15(p50)) then
		return p50;
	end;
	return string.sub(p50, 1, utf8.offset(p50, v16 + v15("...") + 1) - 1);
end;
local function u9(p51)
	local v32 = Instance.new("BillboardGui");
	v32.Adornee = p51;
	v32.Size = UDim2.new(0, 400, 0, 250);
	v32.StudsOffset = Vector3.new(0, 1.5, 2);
	v32.Parent = v17;
	local v33 = Instance.new("Frame");
	v33.Name = "BillboardFrame";
	v33.Size = UDim2.new(1, 0, 1, 0);
	v33.Position = UDim2.new(0, 0, -0.5, 0);
	v33.BackgroundTransparency = 1;
	v33.Parent = v32;
	local u10 = nil;
	u10 = v33.ChildRemoved:connect(function()
		if #v33:GetChildren() <= 1 then
			u10:disconnect();
			v32:Destroy();
		end;
	end);
	u6:CreateSmallTalkBubble(u5.WHITE).Parent = v33;
	return v32;
end;
function u6.CreateBillboardGuiHelper(p52, p53, p54)
	if p53 and not u6.CharacterSortedMsg:Get(p53).BillboardGui then
		if not p54 and p53:IsA("BasePart") then
			u6.CharacterSortedMsg:Get(p53).BillboardGui = u9(p53);
			return;
		end;
		if p53:IsA("Model") then
			local l__Head__34 = p53:FindFirstChild("Head");
			if l__Head__34 and l__Head__34:IsA("BasePart") then
				u6.CharacterSortedMsg:Get(p53).BillboardGui = u9(l__Head__34);
			end;
		end;
	end;
end;
local function u11(p55)
	if not p55 or not l__Players__1.LocalPlayer.Character then
		return;
	end;
	return p55:IsDescendantOf(l__Players__1.LocalPlayer.Character);
end;
function u6.SetBillboardLODNear(p56, p57)
	local v35 = u11(p57.Adornee);
	p57.Size = UDim2.new(0, 400, 0, 250);
	if v35 then
		local v36 = 1.5;
	else
		v36 = 2.5;
	end;
	if v35 then
		local v37 = 2;
	else
		v37 = 0.1;
	end;
	p57.StudsOffset = Vector3.new(0, v36, v37);
	p57.Enabled = true;
	local v38 = p57.BillboardFrame:GetChildren();
	for v39 = 1, #v38 do
		v38[v39].Visible = true;
	end;
	p57.BillboardFrame.SmallTalkBubble.Visible = false;
end;
function u6.SetBillboardLODDistant(p58, p59)
	p59.Size = UDim2.new(4, 0, 3, 0);
	if u11(p59.Adornee) then
		local v40 = 2;
	else
		v40 = 0.1;
	end;
	p59.StudsOffset = Vector3.new(0, 3, v40);
	p59.Enabled = true;
	local v41 = p59.BillboardFrame:GetChildren();
	for v42 = 1, #v41 do
		v41[v42].Visible = false;
	end;
	p59.BillboardFrame.SmallTalkBubble.Visible = true;
end;
function u6.SetBillboardLODVeryFar(p60, p61)
	p61.Enabled = false;
end;
local function u12(p62)
	if not p62 then
		return 100000;
	end;
	return (p62.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude;
end;
function u6.SetBillboardGuiLOD(p63, p64, p65)
	if not p65 then
		return;
	end;
	if p65:IsA("Model") then
		local l__Head__43 = p65:FindFirstChild("Head");
		if not l__Head__43 then
			p65 = p65.PrimaryPart;
		else
			p65 = l__Head__43;
		end;
	end;
	local v44 = u12(p65);
	if v44 < 65 then
		u6:SetBillboardLODNear(p64);
		return;
	end;
	if v44 >= 65 and v44 < 100 then
		u6:SetBillboardLODDistant(p64);
		return;
	end;
	u6:SetBillboardLODVeryFar(p64);
end;
function u6.CameraCFrameChanged(p66)
	for v45, v46 in pairs(u6.CharacterSortedMsg:GetData()) do
		local l__BillboardGui__47 = v46.BillboardGui;
		if l__BillboardGui__47 then
			u6:SetBillboardGuiLOD(l__BillboardGui__47, v45);
		end;
	end;
end;
local u13 = v9 or v10;
local l__Enum_Font_SourceSans__14 = Enum.Font.SourceSans;
local l__Enum_FontSize_Size24__15 = Enum.FontSize.Size24;
function u6.CreateBubbleText(p67, p68, p69)
	local v48 = Instance.new("TextLabel");
	v48.Name = "BubbleText";
	v48.BackgroundTransparency = 1;
	if u13 then
		v48.Size = UDim2.fromScale(1, 1);
	else
		v48.Position = UDim2.new(0, 15, 0, 0);
		v48.Size = UDim2.new(1, -30, 1, 0);
	end;
	v48.Font = l__Enum_Font_SourceSans__14;
	v48.ClipsDescendants = true;
	v48.TextWrapped = true;
	v48.FontSize = l__Enum_FontSize_Size24__15;
	v48.Text = p68;
	v48.Visible = false;
	v48.AutoLocalize = p69;
	if u13 then
		local v49 = Instance.new("UIPadding");
		v49.PaddingTop = UDim.new(0, 12);
		v49.PaddingRight = UDim.new(0, 12);
		v49.PaddingBottom = UDim.new(0, 12);
		v49.PaddingLeft = UDim.new(0, 12);
		v49.Parent = v48;
	end;
	return v48;
end;
function u6.CreateSmallTalkBubble(p70, p71)
	local v50 = u6.ScalingChatBubbleWithTail[p71]:Clone();
	v50.Name = "SmallTalkBubble";
	v50.AnchorPoint = Vector2.new(0, 0.5);
	v50.Position = UDim2.new(0, 0, 0.5, 0);
	v50.Visible = false;
	local v51 = u6:CreateBubbleText("...");
	v51.TextScaled = true;
	v51.TextWrapped = false;
	v51.Visible = true;
	v51.Parent = v50;
	return v50;
end;
function u6.UpdateChatLinesForOrigin(p72, p73, p74)
	local l__Fifo__52 = u6.CharacterSortedMsg:Get(p73).Fifo;
	local v53 = l__Fifo__52:Size();
	local v54 = l__Fifo__52:GetData();
	if #v54 <= 1 then
		return;
	end;
	for v55 = #v54 - 1, 1, -1 do
		local l__RenderBubble__56 = v54[v55].RenderBubble;
		if not l__RenderBubble__56 then
			return;
		end;
		if v53 - v55 + 1 > 1 then
			local l__ChatBubbleTail__57 = l__RenderBubble__56:FindFirstChild("ChatBubbleTail");
			if l__ChatBubbleTail__57 then
				l__ChatBubbleTail__57:Destroy();
			end;
			local l__BubbleText__58 = l__RenderBubble__56:FindFirstChild("BubbleText");
			if l__BubbleText__58 then
				l__BubbleText__58.TextTransparency = 0.5;
			end;
		end;
		l__RenderBubble__56:TweenPosition(UDim2.new(l__RenderBubble__56.Position.X.Scale, l__RenderBubble__56.Position.X.Offset, 1, p74 - l__RenderBubble__56.Size.Y.Offset - 14), Enum.EasingDirection.Out, Enum.EasingStyle.Bounce, 0.1, true);
		p74 = p74 - l__RenderBubble__56.Size.Y.Offset - 14;
	end;
end;
function u6.DestroyBubble(p75, p76, p77)
	if not p76 then
		return;
	end;
	if p76:Empty() then
		return;
	end;
	local l__RenderBubble__59 = p76:Front().RenderBubble;
	if l__RenderBubble__59 then
		local u16 = l__RenderBubble__59;
		spawn(function()
			while p76:Front().RenderBubble ~= p77 do
				wait();			
			end;
			u16 = p76:Front().RenderBubble;
			local l__BubbleText__60 = u16:FindFirstChild("BubbleText");
			local l__ChatBubbleTail__61 = u16:FindFirstChild("ChatBubbleTail");
			while u16 and u16.ImageTransparency < 1 do
				local v62 = wait();
				if u16 then
					local v63 = v62 * 1.5;
					u16.ImageTransparency = u16.ImageTransparency + v63;
					if l__BubbleText__60 then
						l__BubbleText__60.TextTransparency = l__BubbleText__60.TextTransparency + v63;
					end;
					if l__ChatBubbleTail__61 then
						l__ChatBubbleTail__61.ImageTransparency = l__ChatBubbleTail__61.ImageTransparency + v63;
					end;
				end;			
			end;
			if u16 then
				u16:Destroy();
				p76:PopFront();
			end;
		end);
		return;
	end;
	p76:PopFront();
end;
function u6.CreateChatLineRender(p78, p79, p80, p81, p82, p83)
	if not p79 then
		return;
	end;
	if not u6.CharacterSortedMsg:Get(p79).BillboardGui then
		u6:CreateBillboardGuiHelper(p79, p81);
	end;
	local l__BillboardGui__64 = u6.CharacterSortedMsg:Get(p79).BillboardGui;
	if l__BillboardGui__64 then
		local v65 = nil;
		local v66 = u6.ChatBubbleWithTail[p80.BubbleColor]:Clone();
		v66.Visible = false;
		local v67 = u6:CreateBubbleText(p80.Message, p83);
		v67.Parent = v66;
		v66.Parent = l__BillboardGui__64.BillboardFrame;
		p80.RenderBubble = v66;
		local v68 = l__TextService__4:GetTextSize(v67.Text, 24, l__Enum_Font_SourceSans__14, Vector2.new(400, 250));
		v65 = v68.Y / 24;
		if u13 then
			local v69 = math.ceil(v68.X + 24);
			local v70 = v65 * 34;
			v66.Size = UDim2.fromOffset(0, 0);
			v66.Position = UDim2.fromScale(0.5, 1);
			v66:TweenSizeAndPosition(UDim2.fromOffset(v69, v70), UDim2.new(0.5, -v69 / 2, 1, -v70), Enum.EasingDirection.Out, Enum.EasingStyle.Elastic, 0.1, true, function()
				v67.Visible = true;
			end);
			u6:SetBillboardGuiLOD(l__BillboardGui__64, p80.Origin);
			u6:UpdateChatLinesForOrigin(p80.Origin, -v70);
		else
			local v71 = math.max((v68.X + 30) / 400, 0.1);
			v66.Size = UDim2.new(0, 0, 0, 0);
			v66.Position = UDim2.new(0.5, 0, 1, 0);
			local v72 = v65 * 34;
			v66:TweenSizeAndPosition(UDim2.new(v71, 0, 0, v72), UDim2.new((1 - v71) / 2, 0, 1, -v72), Enum.EasingDirection.Out, Enum.EasingStyle.Elastic, 0.1, true, function()
				v67.Visible = true;
			end);
			u6:SetBillboardGuiLOD(l__BillboardGui__64, p80.Origin);
			u6:UpdateChatLinesForOrigin(p80.Origin, -v72);
		end;
		delay(p80.BubbleDieDelay, function()
			u6:DestroyBubble(p82, v66);
		end);
	end;
end;
local function u17(p84, p85, p86)
	local v73 = u4(p85, u5.WHITE, p86);
	if p84 then
		v73.User = p84.Name;
		v73.Origin = p84.Character;
	end;
	return v73;
end;
function u6.OnPlayerChatMessage(p87, p88, p89, p90)
	if not u6:BubbleChatEnabled() then
		return;
	end;
	local l__LocalPlayer__74 = l__Players__1.LocalPlayer;
	local v75 = false;
	if l__LocalPlayer__74 ~= nil then
		v75 = p88 ~= l__LocalPlayer__74;
	end;
	local v76 = u17(p88, u6:SanitizeChatLine(p89), not v75);
	if p88 and v76.Origin then
		local l__Fifo__77 = u6.CharacterSortedMsg:Get(v76.Origin).Fifo;
		l__Fifo__77:PushBack(v76);
		u6:CreateChatLineRender(p88.Character, v76, true, l__Fifo__77, false);
	end;
end;
local u18 = v11 or v12;
local u19 = v13 or v14;
local function u20(p91, p92, p93, p94)
	local v78 = u4(p92, p94, p93);
	v78.Origin = p91;
	return v78;
end;
local u21 = v7 or v8;
function u6.OnGameChatMessage(p95, p96, p97, p98)
	if u18 or u19 and l__Chat__3.BubbleChatEnabled then
		return;
	end;
	local l__LocalPlayer__79 = l__Players__1.LocalPlayer;
	local v80 = false;
	if l__LocalPlayer__79 ~= nil then
		v80 = l__LocalPlayer__79.Character ~= p96;
	end;
	local v81 = u5.WHITE;
	if p98 == Enum.ChatColor.Blue then
		v81 = u5.BLUE;
	elseif p98 == Enum.ChatColor.Green then
		v81 = u5.GREEN;
	elseif p98 == Enum.ChatColor.Red then
		v81 = u5.RED;
	end;
	local v82 = u20(p96, u6:SanitizeChatLine(p97), not v80, v81);
	u6.CharacterSortedMsg:Get(v82.Origin).Fifo:PushBack(v82);
	if u21 then
		u6:CreateChatLineRender(p96, v82, false, u6.CharacterSortedMsg:Get(v82.Origin).Fifo, true);
		return;
	end;
	u6:CreateChatLineRender(p96, v82, false, u6.CharacterSortedMsg:Get(v82.Origin).Fifo, false);
end;
function u6.BubbleChatEnabled(p99)
	if u18 or u19 and l__Chat__3.BubbleChatEnabled then
		return false;
	end;
	local l__ClientChatModules__83 = l__Chat__3:FindFirstChild("ClientChatModules");
	if l__ClientChatModules__83 then
		local l__ChatSettings__84 = l__ClientChatModules__83:FindFirstChild("ChatSettings");
		if l__ChatSettings__84 then
			local v85 = require(l__ChatSettings__84);
			if v85.BubbleChatEnabled ~= nil then
				return v85.BubbleChatEnabled;
			end;
		end;
	end;
	return l__Players__1.BubbleChat;
end;
function u6.ShowOwnFilteredMessage(p100)
	local v86 = nil;
	local l__ClientChatModules__87 = l__Chat__3:FindFirstChild("ClientChatModules");
	if l__ClientChatModules__87 then
		v86 = l__ClientChatModules__87:FindFirstChild("ChatSettings");
		if not v86 then
			return false;
		end;
	else
		return false;
	end;
	return require(v86).ShowUserOwnFilteredMessage;
end;
function findPlayer(p101)
	local v88, v89, v90 = pairs(l__Players__1:GetPlayers());
	while true do
		local v91, v92 = v88(v89, v90);
		if v91 then

		else
			break;
		end;
		v90 = v91;
		if v92.Name == p101 then
			return v92;
		end;	
	end;
end;
l__Chat__3.Chatted:connect(function(p102, p103, p104)
	u6:OnGameChatMessage(p102, p103, p104);
end);
local v93 = nil;
if game.Workspace.CurrentCamera then
	v93 = game.Workspace.CurrentCamera:GetPropertyChangedSignal("CFrame"):connect(function(p105)
		u6:CameraCFrameChanged();
	end);
end;
local u22 = v93;
game.Workspace.Changed:connect(function(p106)
	if p106 == "CurrentCamera" then
		if u22 then
			u22:disconnect();
		end;
		if game.Workspace.CurrentCamera then
			u22 = game.Workspace.CurrentCamera:GetPropertyChangedSignal("CFrame"):connect(function(p107)
				u6:CameraCFrameChanged();
			end);
		end;
	end;
end);
local u23 = nil;
function getAllowedMessageTypes()
	if u23 then
		return u23;
	end;
	local l__ClientChatModules__94 = l__Chat__3:FindFirstChild("ClientChatModules");
	if l__ClientChatModules__94 then

	else
		return { "Message", "Whisper" };
	end;
	local l__ChatSettings__95 = l__ClientChatModules__94:FindFirstChild("ChatSettings");
	if l__ChatSettings__95 then
		local v96 = require(l__ChatSettings__95);
		if v96.BubbleChatMessageTypes then
			u23 = v96.BubbleChatMessageTypes;
			return u23;
		end;
	end;
	local l__ChatConstants__97 = l__ClientChatModules__94:FindFirstChild("ChatConstants");
	if l__ChatConstants__97 then
		local v98 = require(l__ChatConstants__97);
		u23 = { v98.MessageTypeDefault, v98.MessageTypeWhisper };
	end;
	return u23;
end;
function checkAllowedMessageType(p108)
	local v99 = getAllowedMessageTypes();
	local v100 = #v99;
	local v101 = 1 - 1;
	while true do
		if v99[v101] == p108.MessageType then
			return true;
		end;
		if 0 <= 1 then
			if v101 < v100 then

			else
				break;
			end;
		elseif v100 < v101 then

		else
			break;
		end;
		v101 = v101 + 1;	
	end;
	return false;
end;
local v102 = l__ReplicatedStorage__2:WaitForChild("DefaultChatSystemChatEvents");
local l__OnMessageDoneFiltering__103 = v102:WaitForChild("OnMessageDoneFiltering");
v102:WaitForChild("OnNewMessage").OnClientEvent:connect(function(p109, p110)
	if not checkAllowedMessageType(p109) then
		return;
	end;
	local v104 = findPlayer(p109.FromSpeaker);
	if not v104 then
		return;
	end;
	if (not p109.IsFiltered or p109.FromSpeaker == v5.Name) and (p109.FromSpeaker ~= v5.Name or u6:ShowOwnFilteredMessage()) then
		return;
	end;
	u6:OnPlayerChatMessage(v104, p109.Message, nil);
end);
l__OnMessageDoneFiltering__103.OnClientEvent:connect(function(p111, p112)
	if not checkAllowedMessageType(p111) then
		return;
	end;
	local v105 = findPlayer(p111.FromSpeaker);
	if not v105 then
		return;
	end;
	if p111.FromSpeaker == v5.Name and not u6:ShowOwnFilteredMessage() then
		return;
	end;
	u6:OnPlayerChatMessage(v105, p111.Message, nil);
end);
]]></ProtectedString></Properties></Item><Item class="LocalScript" referent="RBX15"><Properties><string name="Name">ChatScript</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = false;
local v2, v3 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserHandleChatHotKeyWithContextActionService");
end);
if v2 then
	v1 = v3;
end;
local l__ReplicatedStorage__4 = game:GetService("ReplicatedStorage");
local u1 = require(game:GetService("Chat"):WaitForChild("ClientChatModules"):WaitForChild("ChatSettings"));
local l__StarterGui__2 = game:GetService("StarterGui");
function SetCoreGuiChatConnections(p1)
	local v5 = 0;
	while true do
		if v5 < 10 then

		else
			break;
		end;
		v5 = v5 + 1;
		local v6, v7 = pcall(function()
			l__StarterGui__2:SetCore("CoreGuiChatConnections", p1);
		end);
		if not v6 then

		else
			break;
		end;
		if not v6 then
			if v5 == 10 then
				error("Error calling SetCore CoreGuiChatConnections: " .. v7);
			end;
		end;
		wait();	
	end;
end;
function checkBothChatTypesDisabled()
	if u1.BubbleChatEnabled ~= nil then
		if u1.ClassicChatEnabled ~= nil then

		else
			return false;
		end;
	else
		return false;
	end;
	return not (u1.BubbleChatEnabled or u1.ClassicChatEnabled);
end;
if not game:GetService("GuiService"):IsTenFootInterface() and not game:GetService("UserInputService").VREnabled then
	if not checkBothChatTypesDisabled() then
		(function()
			local v8 = {
				ChatWindow = {}, 
				SetCore = {}, 
				GetCore = {}
			};
			v8.ChatWindow.ChatTypes = {};
			v8.ChatWindow.ChatTypes.BubbleChatEnabled = u1.BubbleChatEnabled;
			v8.ChatWindow.ChatTypes.ClassicChatEnabled = u1.ClassicChatEnabled;
			local u3 = require(script:WaitForChild("ChatMain"));
			local function v9(p2)
				local v10 = Instance.new("BindableEvent");
				v10.Name = p2;
				v8.ChatWindow[p2] = v10;
				v10.Event:connect(function(...)
					u3[p2](u3, ...);
				end);
			end;
			local function v11(p3)
				local v12 = Instance.new("BindableFunction");
				v12.Name = p3;
				v8.ChatWindow[p3] = v12;
				function v12.OnInvoke(...)
					return u3[p3](u3, ...);
				end;
			end;
			local function v13(p4)
				local v14 = Instance.new("BindableEvent");
				v14.Name = p4;
				v8.ChatWindow[p4] = v14;
				u3[p4]:connect(function(...)
					v14:Fire(...);
				end);
			end;
			local function v15(p5)
				local v16 = Instance.new("BindableEvent");
				v16.Name = p5;
				v8.SetCore[p5] = v16;
				v16.Event:connect(function(...)
					u3[p5 .. "Event"]:fire(...);
				end);
			end;
			local function v17(p6)
				local v18 = Instance.new("BindableFunction");
				v18.Name = p6;
				v8.GetCore[p6] = v18;
				function v18.OnInvoke(...)
					return u3["f" .. p6](...);
				end;
			end;
			v9("ToggleVisibility");
			v9("SetVisible");
			v9("FocusChatBar");
			v9("EnterWhisperState");
			v11("GetVisibility");
			v11("GetMessageCount");
			v9("TopbarEnabledChanged");
			v11("IsFocused");
			v13("ChatBarFocusChanged");
			v13("VisibilityStateChanged");
			v13("MessagesChanged");
			v13("MessagePosted");
			(function(p7)
				local v19 = Instance.new("BindableEvent");
				v19.Name = p7;
				v8.ChatWindow[p7] = v19;
				v19.Event:connect(function(...)
					u3[p7]:fire(...);
				end);
			end)("CoreGuiEnabled");
			v15("ChatMakeSystemMessage");
			v15("ChatWindowPosition");
			v15("ChatWindowSize");
			v17("ChatWindowPosition");
			v17("ChatWindowSize");
			v15("ChatBarDisabled");
			v17("ChatBarDisabled");
			if not v1 then
				v9("SpecialKeyPressed");
			end;
			SetCoreGuiChatConnections(v8);
		end)();
	else
		local v20 = {
			ChatWindow = {}
		};
		v20.ChatWindow.ChatTypes = {};
		v20.ChatWindow.ChatTypes.BubbleChatEnabled = false;
		v20.ChatWindow.ChatTypes.ClassicChatEnabled = false;
		SetCoreGuiChatConnections(v20);
	end;
else
	l__ReplicatedStorage__4:WaitForChild("DefaultChatSystemChatEvents").GetInitDataRequest:InvokeServer();
end;
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX22"><Properties><string name="Name">ChatMain</string><ProtectedString name="Source"><![CDATA[--[[VARIABLE DEFINITION ANOMALY DETECTED, DECOMPILATION OUTPUT POTENTIALLY INCORRECT]]--
-- Decompiled with the Synapse X Luau decompiler.

local v1 = false;
local v2, v3 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserHandleChatHotKeyWithContextActionService");
end);
if v2 then
	v1 = v3;
end;
local l__RunService__4 = game:GetService("RunService");
local l__ReplicatedStorage__5 = game:GetService("ReplicatedStorage");
local l__Chat__6 = game:GetService("Chat");
local l__StarterGui__7 = game:GetService("StarterGui");
local l__ContextActionService__8 = game:GetService("ContextActionService");
local v9 = l__ReplicatedStorage__5:WaitForChild("DefaultChatSystemChatEvents");
local v10 = l__ReplicatedStorage__5:WaitForChild("DefaultChatSystemChatEvents");
local l__ClientChatModules__11 = l__Chat__6:WaitForChild("ClientChatModules");
local v12 = require(l__ClientChatModules__11:WaitForChild("ChatConstants"));
local v13 = require(l__ClientChatModules__11:WaitForChild("ChatSettings"));
local v14 = require(l__ClientChatModules__11:WaitForChild("MessageCreatorModules"):WaitForChild("Util"));
local u1 = nil;
pcall(function()
	u1 = require(game:GetService("Chat").ClientChatModules.ChatLocalization);
end);
if u1 == nil then
	u1 = {
		Get = function(p1, p2, p3)
			return p3;
		end
	};
end;
local v15 = Instance.new("BindableEvent");
local u2 = {
	OnNewMessage = "RemoteEvent", 
	OnMessageDoneFiltering = "RemoteEvent", 
	OnNewSystemMessage = "RemoteEvent", 
	OnChannelJoined = "RemoteEvent", 
	OnChannelLeft = "RemoteEvent", 
	OnMuted = "RemoteEvent", 
	OnUnmuted = "RemoteEvent", 
	OnMainChannelSet = "RemoteEvent", 
	SayMessageRequest = "RemoteEvent", 
	GetInitDataRequest = "RemoteFunction"
};
local u3 = {};
local u4 = 10;
function TryRemoveChildWithVerifyingIsCorrectType(p4)
	if u2[p4.Name] then
		if p4:IsA(u2[p4.Name]) then
			u2[p4.Name] = nil;
			u3[p4.Name] = p4;
			u4 = u4 - 1;
		end;
	end;
end;
for v16, v17 in pairs(v10:GetChildren()) do
	TryRemoveChildWithVerifyingIsCorrectType(v17);
end;
if u4 > 0 then
	local v18 = v10.ChildAdded:connect(function(p5)
		TryRemoveChildWithVerifyingIsCorrectType(p5);
		if u4 < 1 then
			v15:Fire();
		end;
	end);
	v15.Event:wait();
	v18:disconnect();
	v15:Destroy();
end;
local l__UserInputService__19 = game:GetService("UserInputService");
local l__RunService__20 = game:GetService("RunService");
local l__Players__21 = game:GetService("Players");
local v22 = l__Players__21.LocalPlayer;
while not v22 do
	l__Players__21.ChildAdded:wait();
	v22 = l__Players__21.LocalPlayer;
end;
local v23 = 6;
if v13.ScreenGuiDisplayOrder ~= nil then
	v23 = v13.ScreenGuiDisplayOrder;
end;
local v24 = Instance.new("ScreenGui");
v24.Name = "Chat";
v24.ResetOnSpawn = false;
v24.DisplayOrder = v23;
v24.Parent = v22:WaitForChild("PlayerGui");
local v25 = require(script:WaitForChild("MessageLabelCreator"));
local v26 = require(script:WaitForChild("MessageLogDisplay"));
local v27 = require(script:WaitForChild("ChatChannel"));
local v28 = require(script:WaitForChild("ChatWindow")).new();
local v29 = require(script:WaitForChild("ChannelsBar")).new();
local v30 = v26.new();
local v31 = require(script:WaitForChild("CommandProcessor")).new();
local v32 = require(script:WaitForChild("ChatBar")).new(v31, v28);
v28:CreateGuiObjects(v24);
v28:RegisterChatBar(v32);
v28:RegisterChannelsBar(v29);
v28:RegisterMessageLogDisplay(v30);
v14:RegisterChatWindow(v28);
local v33 = require(script:WaitForChild("MessageSender"));
v33:RegisterSayMessageFunction(u3.SayMessageRequest);
if l__UserInputService__19.TouchEnabled then
	v32:SetTextLabelText(u1:Get("GameChat_ChatMain_ChatBarTextTouch", "Tap here to chat"));
else
	v32:SetTextLabelText(u1:Get("GameChat_ChatMain_ChatBarText", "To chat click here or press \"/\" key"));
end;
local l__script__5 = script;
spawn(function()
	local v34 = require(l__script__5:WaitForChild("CurveUtil"));
	local v35 = 1 / (v13.ChatAnimationFPS and 20);
	local v36 = tick();
	while true do
		local v37 = tick();
		local v38 = v34:DeltaTimeToTimescale(v37 - v36);
		if v38 ~= 0 then
			v28:Update(v38);
		end;
		v36 = v37;
		wait(v35);	
	end;
end);
function CheckIfPointIsInSquare(p6, p7, p8)
	local v39 = false;
	if p7.X <= p6.X then
		v39 = false;
		if p6.X <= p8.X then
			v39 = false;
			if p7.Y <= p6.Y then
				v39 = p6.Y <= p8.Y;
			end;
		end;
	end;
	return v39;
end;
local u6 = 0;
local u7 = false;
local u8 = Instance.new("BindableEvent");
function DoBackgroundFadeIn(p9)
	u6 = tick();
	u7 = false;
	u8:Fire();
	v28:FadeInBackground(p9 or v13.ChatDefaultFadeDuration);
	if v28:GetCurrentChannel() then
		local l__Scroller__40 = v30.Scroller;
		l__Scroller__40.ScrollingEnabled = true;
		l__Scroller__40.ScrollBarThickness = v26.ScrollBarThickness;
	end;
end;
function DoBackgroundFadeOut(p10)
	u6 = tick();
	u7 = true;
	u8:Fire();
	v28:FadeOutBackground(p10 or v13.ChatDefaultFadeDuration);
	if v28:GetCurrentChannel() then
		local l__Scroller__41 = v30.Scroller;
		l__Scroller__41.ScrollingEnabled = false;
		l__Scroller__41.ScrollBarThickness = 0;
	end;
end;
local u9 = 0;
local u10 = false;
function DoTextFadeIn(p11)
	u9 = tick();
	u10 = false;
	u8:Fire();
	v28:FadeInText((p11 or v13.ChatDefaultFadeDuration) * 0);
end;
function DoTextFadeOut(p12)
	u9 = tick();
	u10 = true;
	u8:Fire();
	v28:FadeOutText(p12 or v13.ChatDefaultFadeDuration);
end;
function DoFadeInFromNewInformation()
	DoTextFadeIn();
	if v13.ChatShouldFadeInFromNewInformation then
		DoBackgroundFadeIn();
	end;
end;
function InstantFadeIn()
	DoBackgroundFadeIn(0);
	DoTextFadeIn(0);
end;
function InstantFadeOut()
	DoBackgroundFadeOut(0);
	DoTextFadeOut(0);
end;
local u11 = nil;
local u12 = Instance.new("BindableEvent");
function UpdateFadingForMouseState(p13)
	u11 = p13;
	u12:Fire();
	if v32:IsFocused() then
		return;
	end;
	if p13 then

	else
		DoBackgroundFadeIn();
		return;
	end;
	DoBackgroundFadeIn();
	DoTextFadeIn();
end;
local u13 = Instance.new("BindableEvent");
spawn(function()
	while true do
		l__RunService__20.RenderStepped:wait();
		while not (not u11) or not (not v32:IsFocused()) do
			if u11 then
				u12.Event:wait();
			end;
			if v32:IsFocused() then
				u13.Event:wait();
			end;		
		end;
		if not u7 then
			if v13.ChatWindowBackgroundFadeOutTime < tick() - u6 then
				DoBackgroundFadeOut();
			end;
		elseif not u10 then
			if v13.ChatWindowTextFadeOutTime < tick() - u9 then
				DoTextFadeOut();
			end;
		else
			u8.Event:wait();
		end;	
	end;
end);
function getClassicChatEnabled()
	if v13.ClassicChatEnabled ~= nil then
		return v13.ClassicChatEnabled;
	end;
	return l__Players__21.ClassicChat;
end;
function getBubbleChatEnabled()
	if v13.BubbleChatEnabled ~= nil then
		return v13.BubbleChatEnabled;
	end;
	return l__Players__21.BubbleChat;
end;
function bubbleChatOnly()
	return not getClassicChatEnabled() and getBubbleChatEnabled();
end;
local u14 = {};
function UpdateMousePosition(p14)
	if u14.Visible then
		if u14.IsCoreGuiEnabled then
			if not u14.TopbarEnabled then
				if not v13.ChatOnWithTopBarOff then
					return;
				end;
			end;
		else
			return;
		end;
	else
		return;
	end;
	if bubbleChatOnly() then
		return;
	end;
	local l__AbsolutePosition__42 = v28.GuiObject.AbsolutePosition;
	local v43 = CheckIfPointIsInSquare(p14, l__AbsolutePosition__42, l__AbsolutePosition__42 + v28.GuiObject.AbsoluteSize);
	if v43 ~= u11 then
		UpdateFadingForMouseState(v43);
	end;
end;
l__UserInputService__19.InputChanged:connect(function(p15, p16)
	if p15.UserInputType == Enum.UserInputType.MouseMovement then
		UpdateMousePosition((Vector2.new(p15.Position.X, p15.Position.Y)));
	end;
end);
l__UserInputService__19.TouchTap:connect(function(p17, p18)
	UpdateMousePosition(p17[1]);
end);
l__UserInputService__19.TouchMoved:connect(function(p19, p20)
	UpdateMousePosition((Vector2.new(p19.Position.X, p19.Position.Y)));
end);
l__UserInputService__19.Changed:connect(function(p21)
	if p21 == "MouseBehavior" and l__UserInputService__19.MouseBehavior == Enum.MouseBehavior.LockCenter then
		local l__AbsolutePosition__44 = v28.GuiObject.AbsolutePosition;
		if CheckIfPointIsInSquare(v24.AbsoluteSize / 2, l__AbsolutePosition__44, l__AbsolutePosition__44 + v28.GuiObject.AbsoluteSize) then
			l__UserInputService__19.MouseBehavior = Enum.MouseBehavior.Default;
		end;
	end;
end);
UpdateFadingForMouseState(true);
UpdateFadingForMouseState(false);
local v45 = {
	Signal = function()
		local v46 = {};
		local u15 = nil;
		local u16 = nil;
		local u17 = Instance.new("BindableEvent");
		function v46.fire(p22, ...)
			u15 = { ... };
			u16 = select("#", ...);
			u17:Fire();
		end;
		function v46.connect(p23, p24)
			if not p24 then
				error("connect(nil)", 2);
			end;
			return u17.Event:connect(function()
				p24(unpack(u15, 1, u16));
			end);
		end;
		function v46.wait(p25)
			u17.Event:wait();
			assert(u15, "Missing arg data, likely due to :TweenSize/Position corrupting threadrefs.");
			return unpack(u15, 1, u16);
		end;
		return v46;
	end
};
function SetVisibility(p26)
	v28:SetVisible(p26);
	u14.VisibilityStateChanged:fire(p26);
	u14.Visible = p26;
	if u14.IsCoreGuiEnabled then
		if p26 then

		else
			InstantFadeOut();
			return;
		end;
	else
		return;
	end;
	InstantFadeIn();
end;
u14.TopbarEnabled = true;
u14.MessageCount = 0;
u14.Visible = true;
u14.IsCoreGuiEnabled = true;
function u14.ToggleVisibility(p27)
	SetVisibility(not v28:GetVisible());
end;
function u14.SetVisible(p28, p29)
	if v28:GetVisible() ~= p29 then
		SetVisibility(p29);
	end;
end;
function u14.FocusChatBar(p30)
	v32:CaptureFocus();
end;
function u14.EnterWhisperState(p31, p32)
	v32:EnterWhisperState(p32);
end;
function u14.GetVisibility(p33)
	return v28:GetVisible();
end;
function u14.GetMessageCount(p34)
	return p34.MessageCount;
end;
function u14.TopbarEnabledChanged(p35, p36)
	p35.TopbarEnabled = p36;
	p35.CoreGuiEnabled:fire(game:GetService("StarterGui"):GetCoreGuiEnabled(Enum.CoreGuiType.Chat));
end;
function u14.IsFocused(p37, p38)
	return v32:IsFocused();
end;
u14.ChatBarFocusChanged = v45.Signal();
u14.VisibilityStateChanged = v45.Signal();
u14.MessagesChanged = v45.Signal();
u14.MessagePosted = v45.Signal();
u14.CoreGuiEnabled = v45.Signal();
u14.ChatMakeSystemMessageEvent = v45.Signal();
u14.ChatWindowPositionEvent = v45.Signal();
u14.ChatWindowSizeEvent = v45.Signal();
u14.ChatBarDisabledEvent = v45.Signal();
function u14.fChatWindowPosition(p39)
	return v28.GuiObject.Position;
end;
function u14.fChatWindowSize(p40)
	return v28.GuiObject.Size;
end;
function u14.fChatBarDisabled(p41)
	return not v32:GetEnabled();
end;
if v1 then
	local u18 = true;
	l__ContextActionService__8:BindAction("ToggleChat", function(p42, p43, p44)
		if p42 == "ToggleChat" and p43 == Enum.UserInputState.Begin and u18 and p44.UserInputType == Enum.UserInputType.Keyboard then
			DoChatBarFocus();
		end;
	end, true, Enum.KeyCode.Slash);
else
	local u19 = true;
	function u14.SpecialKeyPressed(p45, p46, p47)
		if p46 == Enum.SpecialKey.ChatHotkey and u19 then
			DoChatBarFocus();
		end;
	end;
end;
u14.CoreGuiEnabled:connect(function(p48)
	u14.IsCoreGuiEnabled = p48;
	p48 = p48 and (u14.TopbarEnabled or v13.ChatOnWithTopBarOff);
	v28:SetCoreGuiEnabled(p48);
	if p48 then
		InstantFadeIn();
		return;
	end;
	v32:ReleaseFocus();
	InstantFadeOut();
end);
function trimTrailingSpaces(p49)
	local v47 = #p49;
	while true do
		if 0 < v47 then

		else
			break;
		end;
		if p49:find("^%s", v47) then

		else
			break;
		end;
		v47 = v47 - 1;	
	end;
	return p49:sub(1, v47);
end;
local u20 = false;
u14.ChatMakeSystemMessageEvent:connect(function(p50)
	if p50.Text and type(p50.Text) == "string" then
		while not u20 do
			wait();		
		end;
		local l__GeneralChannelName__48 = v13.GeneralChannelName;
		local v49 = v28:GetChannel(l__GeneralChannelName__48);
		if v49 then
			v49:AddMessageToChannel({
				ID = -1, 
				FromSpeaker = nil, 
				SpeakerUserId = 0, 
				OriginalChannel = l__GeneralChannelName__48, 
				IsFiltered = true, 
				MessageLength = string.len(p50.Text), 
				MessageLengthUtf8 = utf8.len(utf8.nfcnormalize(p50.Text)), 
				Message = trimTrailingSpaces(p50.Text), 
				MessageType = v12.MessageTypeSetCore, 
				Time = os.time(), 
				ExtraData = p50
			});
			v29:UpdateMessagePostedInChannel(l__GeneralChannelName__48);
			u14.MessageCount = u14.MessageCount + 1;
			u14.MessagesChanged:fire(u14.MessageCount);
		end;
	end;
end);
u14.ChatBarDisabledEvent:connect(function(p51)
	if u19 then
		v32:SetEnabled(not p51);
		if p51 then
			v32:ReleaseFocus();
		end;
	end;
end);
u14.ChatWindowSizeEvent:connect(function(p52)
	v28.GuiObject.Size = p52;
end);
u14.ChatWindowPositionEvent:connect(function(p53)
	v28.GuiObject.Position = p53;
end);
function DoChatBarFocus()
	if not v28:GetCoreGuiEnabled() then
		return;
	end;
	if not v32:GetEnabled() then
		return;
	end;
	if not v32:IsFocused() then
		if v32:GetVisible() then
			u14:SetVisible(true);
			InstantFadeIn();
			v32:CaptureFocus();
			u14.ChatBarFocusChanged:fire(true);
		end;
	end;
end;
u13.Event:connect(function(p54)
	u14.ChatBarFocusChanged:fire(p54);
end);
function DoSwitchCurrentChannel(p55)
	if v28:GetChannel(p55) then
		v28:SwitchCurrentChannel(p55);
	end;
end;
function SendMessageToSelfInTargetChannel(p56, p57, p58)
	local v50 = v28:GetChannel(p57);
	if v50 then
		v50:AddMessageToChannel({
			ID = -1, 
			FromSpeaker = nil, 
			SpeakerUserId = 0, 
			OriginalChannel = p57, 
			IsFiltered = true, 
			MessageLength = string.len(p56), 
			MessageLengthUtf8 = utf8.len(utf8.nfcnormalize(p56)), 
			Message = trimTrailingSpaces(p56), 
			MessageType = v12.MessageTypeSystem, 
			Time = os.time(), 
			ExtraData = p58
		});
	end;
end;
function chatBarFocused()
	if not u11 then
		DoBackgroundFadeIn();
		if u10 then
			DoTextFadeIn();
		end;
	end;
	u13:Fire(true);
end;
function chatBarFocusLost(p59, p60)
	DoBackgroundFadeIn();
	u13:Fire(false);
	if p59 then
		local v51 = v32:GetTextBox().Text;
		if v32:IsInCustomState() then
			local v52 = v32:GetCustomMessage();
			if v52 then
				v51 = v52;
			end;
			local v53 = v32:CustomStateProcessCompletedMessage(v51);
			v32:ResetCustomState();
			if v53 then
				return;
			end;
		end;
		v32:GetTextBox().Text = "";
		if v51 ~= "" then
			u14.MessagePosted:fire(v51);
			if not v31:ProcessCompletedChatMessage(v51, v28) then
				local v54 = nil;
				if v13.DisallowedWhiteSpace then
					local v55 = #v13.DisallowedWhiteSpace;
					local v56 = 1 - 1;
					while true do
						if v13.DisallowedWhiteSpace[v56] == "\t" then
							v51 = string.gsub(v51, v13.DisallowedWhiteSpace[v56], " ");
						else
							v51 = string.gsub(v51, v13.DisallowedWhiteSpace[v56], "");
						end;
						if 0 <= 1 then
							if v56 < v55 then

							else
								break;
							end;
						elseif v55 < v56 then

						else
							break;
						end;
						v56 = v56 + 1;					
					end;
				end;
				v54 = string.gsub(string.gsub(v51, "\n", ""), "[ ]+", " ");
				local v57 = v28:GetTargetMessageChannel();
				if v57 then
					v33:SendMessage(v54, v57);
					return;
				end;
				v33:SendMessage(v54, nil);
			end;
		end;
	end;
end;
local u21 = {};
function setupChatBarConnections()
	local v58 = #u21;
	local v59 = 1 - 1;
	while true do
		u21[v59]:Disconnect();
		if 0 <= 1 then
			if v59 < v58 then

			else
				break;
			end;
		elseif v58 < v59 then

		else
			break;
		end;
		v59 = v59 + 1;	
	end;
	u21 = {};
	table.insert(u21, (v32:GetTextBox().FocusLost:connect(chatBarFocusLost)));
	table.insert(u21, (v32:GetTextBox().Focused:connect(chatBarFocused)));
end;
setupChatBarConnections();
v32.GuiObjectsChanged:connect(setupChatBarConnections);
function getEchoMessagesInGeneral()
	if v13.EchoMessagesInGeneralChannel == nil then
		return true;
	end;
	return v13.EchoMessagesInGeneralChannel;
end;
u3.OnMessageDoneFiltering.OnClientEvent:connect(function(p61)
	if not v13.ShowUserOwnFilteredMessage and p61.FromSpeaker == v22.Name then
		return;
	end;
	local l__OriginalChannel__60 = p61.OriginalChannel;
	local v61 = v28:GetChannel(l__OriginalChannel__60);
	if v61 then
		v61:UpdateMessageFiltered(p61);
	end;
	if getEchoMessagesInGeneral() and v13.GeneralChannelName and l__OriginalChannel__60 ~= v13.GeneralChannelName then
		local v62 = v28:GetChannel(v13.GeneralChannelName);
		if v62 then
			v62:UpdateMessageFiltered(p61);
		end;
	end;
end);
u3.OnNewMessage.OnClientEvent:connect(function(p62, p63)
	local v63 = v28:GetChannel(p63);
	if v63 then
		v63:AddMessageToChannel(p62);
		if p62.FromSpeaker ~= v22.Name then
			v29:UpdateMessagePostedInChannel(p63);
		end;
		if getEchoMessagesInGeneral() and v13.GeneralChannelName and p63 ~= v13.GeneralChannelName then
			local v64 = v28:GetChannel(v13.GeneralChannelName);
			if v64 then
				v64:AddMessageToChannel(p62);
			end;
		end;
		u14.MessageCount = u14.MessageCount + 1;
		u14.MessagesChanged:fire(u14.MessageCount);
		DoFadeInFromNewInformation();
	end;
end);
u3.OnNewSystemMessage.OnClientEvent:connect(function(p64, p65)
	p65 = p65 and "System";
	local v65 = v28:GetChannel(p65);
	if v65 then
		v65:AddMessageToChannel(p64);
		v29:UpdateMessagePostedInChannel(p65);
		u14.MessageCount = u14.MessageCount + 1;
		u14.MessagesChanged:fire(u14.MessageCount);
		DoFadeInFromNewInformation();
		if getEchoMessagesInGeneral() and v13.GeneralChannelName and p65 ~= v13.GeneralChannelName then
			local v66 = v28:GetChannel(v13.GeneralChannelName);
			if v66 then
				v66:AddMessageToChannel(p64);
				return;
			end;
		end;
	else
		warn(string.format("Just received system message for channel I'm not in [%s]", p65));
	end;
end);
function HandleChannelJoined(p66, p67, p68, p69, p70, p71)
	if v28:GetChannel(p66) then
		v28:RemoveChannel(p66);
	end;
	if p66 == v13.GeneralChannelName then
		u20 = true;
	end;
	if p69 then
		v32:SetChannelNameColor(p66, p69);
	end;
	local v67 = v28:AddChannel(p66);
	if v67 then
		if p66 == v13.GeneralChannelName then
			DoSwitchCurrentChannel(p66);
		end;
		if p68 then
			local v68 = 1;
			if v13.MessageHistoryLengthPerChannel < #p68 then
				v68 = #p68 - v13.MessageHistoryLengthPerChannel;
			end;
			local v69 = #p68;
			local v70 = v68 - 1;
			while true do
				v67:AddMessageToChannel(p68[v70]);
				if 0 <= 1 then
					if v70 < v69 then

					else
						break;
					end;
				elseif v69 < v70 then

				else
					break;
				end;
				v70 = v70 + 1;			
			end;
			if getEchoMessagesInGeneral() then
				if p70 then
					if v13.GeneralChannelName then
						if p66 ~= v13.GeneralChannelName then
							local v71 = v28:GetChannel(v13.GeneralChannelName);
							if v71 then
								v71:AddMessagesToChannelByTimeStamp(p68, v68);
							end;
						end;
					end;
				end;
			end;
		end;
		if p67 ~= "" then
			local v72 = {
				ID = -1, 
				FromSpeaker = nil, 
				SpeakerUserId = 0, 
				OriginalChannel = p66, 
				IsFiltered = true, 
				MessageLength = string.len(p67), 
				MessageLengthUtf8 = utf8.len(utf8.nfcnormalize(p67)), 
				Message = trimTrailingSpaces(p67), 
				MessageType = v12.MessageTypeWelcome, 
				Time = os.time(), 
				ExtraData = nil
			};
			v67:AddMessageToChannel(v72);
			if getEchoMessagesInGeneral() then
				if p71 then
					if not v13.ShowChannelsBar then
						if p66 ~= v13.GeneralChannelName then
							local v73 = v28:GetChannel(v13.GeneralChannelName);
							if v73 then
								v73:AddMessageToChannel(v72);
							end;
						end;
					end;
				end;
			end;
		end;
		DoFadeInFromNewInformation();
	end;
end;
u3.OnChannelJoined.OnClientEvent:connect(function(p72, p73, p74, p75)
	HandleChannelJoined(p72, p73, p74, p75, false, true);
end);
u3.OnChannelLeft.OnClientEvent:connect(function(p76)
	v28:RemoveChannel(p76);
	DoFadeInFromNewInformation();
end);
u3.OnMuted.OnClientEvent:connect(function(p77)

end);
u3.OnUnmuted.OnClientEvent:connect(function(p78)

end);
u3.OnMainChannelSet.OnClientEvent:connect(function(p79)
	DoSwitchCurrentChannel(p79);
end);
coroutine.wrap(function()
	local l__ChannelNameColorUpdated__74 = v9:WaitForChild("ChannelNameColorUpdated", 5);
	if l__ChannelNameColorUpdated__74 then
		l__ChannelNameColorUpdated__74.OnClientEvent:connect(function(p80, p81)
			v32:SetChannelNameColor(p80, p81);
		end);
	end;
end)();
local u22 = nil;
local u23 = nil;
local u24 = nil;
local u25 = nil;
pcall(function()
	u22 = l__StarterGui__7:GetCore("PlayerBlockedEvent");
	u23 = l__StarterGui__7:GetCore("PlayerMutedEvent");
	u24 = l__StarterGui__7:GetCore("PlayerUnblockedEvent");
	u25 = l__StarterGui__7:GetCore("PlayerUnmutedEvent");
end);
function SendSystemMessageToSelf(p82)
	local v75 = v28:GetCurrentChannel();
	if v75 then
		v75:AddMessageToChannel({
			ID = -1, 
			FromSpeaker = nil, 
			SpeakerUserId = 0, 
			OriginalChannel = v75.Name, 
			IsFiltered = true, 
			MessageLength = string.len(p82), 
			MessageLengthUtf8 = utf8.len(utf8.nfcnormalize(p82)), 
			Message = trimTrailingSpaces(p82), 
			MessageType = v12.MessageTypeSystem, 
			Time = os.time(), 
			ExtraData = nil
		});
	end;
end;
function MutePlayer(p83)
	local l__MutePlayerRequest__76 = v9:FindFirstChild("MutePlayerRequest");
	if l__MutePlayerRequest__76 then

	else
		return false;
	end;
	return l__MutePlayerRequest__76:InvokeServer(p83.Name);
end;
if u22 then
	u22.Event:connect(function(p84)
		if MutePlayer(p84) then
			if v13.PlayerDisplayNamesEnabled then
				local v77 = p84.DisplayName;
			else
				v77 = p84.Name;
			end;
			SendSystemMessageToSelf(u1:Get("GameChat_ChatMain_SpeakerHasBeenBlocked", string.format("Speaker '%s' has been blocked.", v77), {
				RBX_NAME = v77
			}));
		end;
	end);
end;
if u23 then
	u23.Event:connect(function(p85)
		if MutePlayer(p85) then
			if v13.PlayerDisplayNamesEnabled then
				local v78 = p85.DisplayName;
			else
				v78 = p85.Name;
			end;
			SendSystemMessageToSelf(u1:Get("GameChat_ChatMain_SpeakerHasBeenMuted", string.format("Speaker '%s' has been muted.", v78), {
				RBX_NAME = v78
			}));
		end;
	end);
end;
function UnmutePlayer(p86)
	local l__UnMutePlayerRequest__79 = v9:FindFirstChild("UnMutePlayerRequest");
	if l__UnMutePlayerRequest__79 then

	else
		return false;
	end;
	return l__UnMutePlayerRequest__79:InvokeServer(p86.Name);
end;
if u24 then
	u24.Event:connect(function(p87)
		if UnmutePlayer(p87) then
			if v13.PlayerDisplayNamesEnabled then
				local v80 = p87.DisplayName;
			else
				v80 = p87.Name;
			end;
			SendSystemMessageToSelf(u1:Get("GameChat_ChatMain_SpeakerHasBeenUnBlocked", string.format("Speaker '%s' has been unblocked.", v80), {
				RBX_NAME = v80
			}));
		end;
	end);
end;
if u25 then
	u25.Event:connect(function(p88)
		if UnmutePlayer(p88) then
			if v13.PlayerDisplayNamesEnabled then
				local v81 = p88.DisplayName;
			else
				v81 = p88.Name;
			end;
			SendSystemMessageToSelf(u1:Get("GameChat_ChatMain_SpeakerHasBeenUnMuted", string.format("Speaker '%s' has been unmuted.", v81), {
				RBX_NAME = v81
			}));
		end;
	end);
end;
spawn(function()
	if v22.UserId > 0 then
		pcall(function()
			local v82 = l__StarterGui__7:GetCore("GetBlockedUserIds");
			if #v82 > 0 then
				local l__SetBlockedUserIdsRequest__83 = v9:FindFirstChild("SetBlockedUserIdsRequest");
				if l__SetBlockedUserIdsRequest__83 then
					l__SetBlockedUserIdsRequest__83:FireServer(v82);
				end;
			end;
		end);
	end;
end);
spawn(function()
	local v84, v85 = pcall(function()
		return l__Chat__6:CanUserChatAsync(v22.UserId);
	end);
	if v84 then
		u19 = l__RunService__20:IsStudio() and v85;
	end;
end);
local v86 = u3.GetInitDataRequest:InvokeServer();
for v87, v88 in pairs(v86.Channels) do
	if v88[1] == v13.GeneralChannelName then
		HandleChannelJoined(v88[1], v88[2], v88[3], v88[4], true, false);
	end;
end;
for v89, v90 in pairs(v86.Channels) do
	if v90[1] ~= v13.GeneralChannelName then
		HandleChannelJoined(v90[1], v90[2], v90[3], v90[4], true, false);
	end;
end;
return u14;
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX28"><Properties><string name="Name">ChannelsBar</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local l__PlayerGui__2 = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui");
local l__Parent__3 = script.Parent;
local v4 = {};
v4.__index = v4;
local u1 = require(game:GetService("Chat"):WaitForChild("ClientChatModules"):WaitForChild("ChatSettings"));
local u2 = require(l__Parent__3:WaitForChild("MessageSender"));
function v4.CreateGuiObjects(p1, p2)
	local v5 = Instance.new("Frame");
	v5.Selectable = false;
	v5.Size = UDim2.new(1, 0, 1, 0);
	v5.BackgroundTransparency = 1;
	v5.Parent = p2;
	local v6 = Instance.new("Frame");
	v6.Selectable = false;
	v6.Name = "ScrollingBase";
	v6.BackgroundTransparency = 1;
	v6.ClipsDescendants = true;
	v6.Size = UDim2.new(1, 0, 1, 0);
	v6.Position = UDim2.new(0, 0, 0, 0);
	v6.Parent = v5;
	local v7 = Instance.new("Frame");
	v7.Selectable = false;
	v7.Name = "ScrollerSizer";
	v7.BackgroundTransparency = 1;
	v7.Size = UDim2.new(1, 0, 1, 0);
	v7.Position = UDim2.new(0, 0, 0, 0);
	v7.Parent = v6;
	local v8 = Instance.new("Frame");
	v8.Selectable = false;
	v8.Name = "ScrollerFrame";
	v8.BackgroundTransparency = 1;
	v8.Size = UDim2.new(1, 0, 1, 0);
	v8.Position = UDim2.new(0, 0, 0, 0);
	v8.Parent = v7;
	local v9 = Instance.new("Frame");
	v9.Selectable = false;
	v9.Size = UDim2.new(1, 0, 1, 0);
	v9.Position = UDim2.new(0, 0, 0, 0);
	v9.ClipsDescendants = true;
	v9.BackgroundTransparency = 1;
	v9.Parent = v5;
	local v10 = Instance.new("Frame");
	v10.Selectable = false;
	v10.Name = "LeaveConfirmationFrame";
	v10.Size = UDim2.new(1, 0, 1, 0);
	v10.Position = UDim2.new(0, 0, 1, 0);
	v10.BackgroundTransparency = 0.6;
	v10.BorderSizePixel = 0;
	v10.BackgroundColor3 = Color3.new(0, 0, 0);
	v10.Parent = v9;
	local v11 = Instance.new("TextButton");
	v11.Selectable = false;
	v11.Size = UDim2.new(1, 0, 1, 0);
	v11.BackgroundTransparency = 1;
	v11.Text = "";
	v11.Parent = v10;
	local v12 = Instance.new("TextButton");
	v12.Selectable = false;
	v12.Size = UDim2.new(0.25, 0, 1, 0);
	v12.BackgroundTransparency = 1;
	v12.Font = u1.DefaultFont;
	v12.TextSize = 18;
	v12.TextStrokeTransparency = 0.75;
	v12.Position = UDim2.new(0, 0, 0, 0);
	v12.TextColor3 = Color3.new(0, 1, 0);
	v12.Text = "Confirm";
	v12.Parent = v10;
	local v13 = v12:Clone();
	v13.Parent = v10;
	v13.Position = UDim2.new(0.75, 0, 0, 0);
	v13.TextColor3 = Color3.new(1, 0, 0);
	v13.Text = "Cancel";
	local v14 = Instance.new("TextLabel");
	v14.Selectable = false;
	v14.Size = UDim2.new(0.5, 0, 1, 0);
	v14.Position = UDim2.new(0.25, 0, 0, 0);
	v14.BackgroundTransparency = 1;
	v14.TextColor3 = Color3.new(1, 1, 1);
	v14.TextStrokeTransparency = 0.75;
	v14.Text = "Leave channel <XX>?";
	v14.Font = u1.DefaultFont;
	v14.TextSize = 18;
	v14.Parent = v10;
	local v15 = Instance.new("StringValue");
	v15.Name = "LeaveTarget";
	v15.Parent = v10;
	local l__Position__3 = v10.Position;
	v12.MouseButton1Click:connect(function()
		u2:SendMessage(string.format("/leave %s", v15.Value), nil);
		v10:TweenPosition(l__Position__3, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true);
	end);
	v13.MouseButton1Click:connect(function()
		v10:TweenPosition(l__Position__3, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true);
	end);
	local v16 = Instance.new("ImageButton", v5);
	v16.Selectable = u1.GamepadNavigationEnabled;
	v16.Name = "PageLeftButton";
	v16.SizeConstraint = Enum.SizeConstraint.RelativeYY;
	v16.Size = UDim2.new(0.7, 0, 0.7, 0);
	v16.BackgroundTransparency = 1;
	v16.Position = UDim2.new(0, 4, 0.15000000000000002, 0);
	v16.Visible = false;
	v16.Image = "rbxassetid://471630199";
	local v17 = Instance.new("ImageLabel", v16);
	v17.Name = "ArrowLabel";
	v17.BackgroundTransparency = 1;
	v17.Size = UDim2.new(0.4, 0, 0.4, 0);
	v17.Image = "rbxassetid://471630112";
	local v18 = Instance.new("Frame", v5);
	v18.Selectable = false;
	v18.BackgroundTransparency = 1;
	v18.Name = "PositionalHelper";
	v18.Size = v16.Size;
	v18.SizeConstraint = v16.SizeConstraint;
	v18.Position = UDim2.new(1, 0, 0.15000000000000002, 0);
	local v19 = v16:Clone();
	v19.Parent = v18;
	v19.Name = "PageRightButton";
	v19.Size = UDim2.new(1, 0, 1, 0);
	v19.SizeConstraint = Enum.SizeConstraint.RelativeXY;
	v19.Position = UDim2.new(-1, -4, 0, 0);
	local v20 = UDim2.new(0.05, 0, 0, 0);
	v19.ArrowLabel.Position = UDim2.new(0.3, 0, 0.3, 0) + v20;
	v16.ArrowLabel.Position = UDim2.new(0.3, 0, 0.3, 0) - v20;
	v16.ArrowLabel.Rotation = 180;
	p1.GuiObject = v5;
	p1.GuiObjects.BaseFrame = v5;
	p1.GuiObjects.ScrollerSizer = v7;
	p1.GuiObjects.ScrollerFrame = v8;
	p1.GuiObjects.PageLeftButton = v16;
	p1.GuiObjects.PageRightButton = v19;
	p1.GuiObjects.LeaveConfirmationFrame = v10;
	p1.GuiObjects.LeaveConfirmationNotice = v14;
	p1.GuiObjects.PageLeftButtonArrow = v16.ArrowLabel;
	p1.GuiObjects.PageRightButtonArrow = v19.ArrowLabel;
	p1:AnimGuiObjects();
	v16.MouseButton1Click:connect(function()
		p1:ScrollChannelsFrame(-1);
	end);
	v19.MouseButton1Click:connect(function()
		p1:ScrollChannelsFrame(1);
	end);
	p1:ScrollChannelsFrame(0);
end;
function v4.UpdateMessagePostedInChannel(p3, p4)
	local v21 = p3:GetChannelTab(p4);
	if v21 then
		v21:UpdateMessagePostedInChannel();
		return;
	end;
	warn("ChannelsTab '" .. p4 .. "' does not exist!");
end;
local u4 = require(l__Parent__3:WaitForChild("ChannelsTab"));
function v4.AddChannelTab(p5, p6)
	if p5:GetChannelTab(p6) then
		error("Channel tab '" .. p6 .. "'already exists!");
	end;
	local v22 = u4.new(p6);
	v22.GuiObject.Parent = p5.GuiObjects.ScrollerFrame;
	p5.ChannelTabs[p6:lower()] = v22;
	p5.NumTabs = p5.NumTabs + 1;
	p5:OrganizeChannelTabs();
	if u1.RightClickToLeaveChannelEnabled then
		v22.NameTag.MouseButton2Click:connect(function()
			p5.LeaveConfirmationNotice.Text = string.format("Leave channel %s?", v22.ChannelName);
			p5.LeaveConfirmationFrame.LeaveTarget.Value = v22.ChannelName;
			p5.LeaveConfirmationFrame:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Quad, 0.2, true);
		end);
	end;
	return v22;
end;
function v4.RemoveChannelTab(p7, p8)
	if not p7:GetChannelTab(p8) then
		error("Channel tab '" .. p8 .. "'does not exist!");
	end;
	local v23 = p8:lower();
	p7.ChannelTabs[v23]:Destroy();
	p7.ChannelTabs[v23] = nil;
	p7.NumTabs = p7.NumTabs - 1;
	p7:OrganizeChannelTabs();
end;
function v4.GetChannelTab(p9, p10)
	return p9.ChannelTabs[p10:lower()];
end;
function v4.OrganizeChannelTabs(p11)
	local v24 = {};
	table.insert(v24, p11:GetChannelTab(u1.GeneralChannelName));
	table.insert(v24, p11:GetChannelTab("System"));
	for v25, v26 in pairs(p11.ChannelTabs) do
		if v26.ChannelName ~= u1.GeneralChannelName and v26.ChannelName ~= "System" then
			table.insert(v24, v26);
		end;
	end;
	for v27, v28 in pairs(v24) do
		v28.GuiObject.Position = UDim2.new(v27 - 1, 0, 0, 0);
	end;
	p11.GuiObjects.ScrollerSizer.Size = UDim2.new(1 / math.max(1, math.min(u1.ChannelsBarFullTabSize, p11.NumTabs)), 0, 1, 0);
	p11:ScrollChannelsFrame(0);
end;
function v4.ResizeChannelTabText(p12, p13)
	for v29, v30 in pairs(p12.ChannelTabs) do
		v30:SetTextSize(p13);
	end;
end;
function v4.ScrollChannelsFrame(p14, p15)
	if p14.ScrollChannelsFrameLock then
		return;
	end;
	p14.ScrollChannelsFrameLock = true;
	local l__ChannelsBarFullTabSize__31 = u1.ChannelsBarFullTabSize;
	local v32 = p14.CurPageNum + p15;
	if v32 < 0 then
		v32 = 0;
	elseif v32 > 0 and p14.NumTabs < v32 + l__ChannelsBarFullTabSize__31 then
		v32 = p14.NumTabs - l__ChannelsBarFullTabSize__31;
	end;
	p14.CurPageNum = v32;
	local v33 = UDim2.new(-p14.CurPageNum, 0, 0, 0);
	p14.GuiObjects.PageLeftButton.Visible = p14.CurPageNum > 0;
	p14.GuiObjects.PageRightButton.Visible = p14.CurPageNum + l__ChannelsBarFullTabSize__31 < p14.NumTabs;
	if p15 == 0 then
		p14.ScrollChannelsFrameLock = false;
		return;
	end;
	p14:WaitUntilParentedCorrectly();
	p14.GuiObjects.ScrollerFrame:TweenPosition(v33, Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, 0.15, true, function()
		p14.ScrollChannelsFrameLock = false;
	end);
end;
local u5 = require(l__Parent__3:WaitForChild("CurveUtil"));
function v4.FadeOutBackground(p16, p17)
	for v34, v35 in pairs(p16.ChannelTabs) do
		v35:FadeOutBackground(p17);
	end;
	p16.AnimParams.Background_TargetTransparency = 1;
	p16.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p17);
end;
function v4.FadeInBackground(p18, p19)
	for v36, v37 in pairs(p18.ChannelTabs) do
		v37:FadeInBackground(p19);
	end;
	p18.AnimParams.Background_TargetTransparency = 0.6;
	p18.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p19);
end;
function v4.FadeOutText(p20, p21)
	for v38, v39 in pairs(p20.ChannelTabs) do
		v39:FadeOutText(p21);
	end;
end;
function v4.FadeInText(p22, p23)
	for v40, v41 in pairs(p22.ChannelTabs) do
		v41:FadeInText(p23);
	end;
end;
function v4.AnimGuiObjects(p24)
	p24.GuiObjects.PageLeftButton.ImageTransparency = p24.AnimParams.Background_CurrentTransparency;
	p24.GuiObjects.PageRightButton.ImageTransparency = p24.AnimParams.Background_CurrentTransparency;
	p24.GuiObjects.PageLeftButtonArrow.ImageTransparency = p24.AnimParams.Background_CurrentTransparency;
	p24.GuiObjects.PageRightButtonArrow.ImageTransparency = p24.AnimParams.Background_CurrentTransparency;
end;
function v4.InitializeAnimParams(p25)
	p25.AnimParams.Background_TargetTransparency = 0.6;
	p25.AnimParams.Background_CurrentTransparency = 0.6;
	p25.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(0);
end;
function v4.Update(p26, p27)
	for v42, v43 in pairs(p26.ChannelTabs) do
		v43:Update(p27);
	end;
	p26.AnimParams.Background_CurrentTransparency = u5:Expt(p26.AnimParams.Background_CurrentTransparency, p26.AnimParams.Background_TargetTransparency, p26.AnimParams.Background_NormalizedExptValue, p27);
	p26:AnimGuiObjects();
end;
function v4.WaitUntilParentedCorrectly(p28)
	while not p28.GuiObject:IsDescendantOf(game:GetService("Players").LocalPlayer) do
		p28.GuiObject.AncestryChanged:wait();	
	end;
end;
function v1.new()
	local v44 = setmetatable({}, v4);
	v44.GuiObject = nil;
	v44.GuiObjects = {};
	v44.ChannelTabs = {};
	v44.NumTabs = 0;
	v44.CurPageNum = 0;
	v44.ScrollChannelsFrameLock = false;
	v44.AnimParams = {};
	v44:InitializeAnimParams();
	u1.SettingsChanged:connect(function(p29, p30)
		if p29 == "ChatChannelsTabTextSize" then
			v44:ResizeChannelTabText(p30);
		end;
	end);
	return v44;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX35"><Properties><string name="Name">ChannelsTab</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = {};
v2.__index = v2;
local u1 = require(game:GetService("Chat"):WaitForChild("ClientChatModules"):WaitForChild("ChatSettings"));
function v2.Destroy(p1)
	p1.GuiObject:Destroy();
end;
function v2.UpdateMessagePostedInChannel(p2, p3)
	if p2.Active and p3 ~= true then
		return;
	end;
	local v3 = p2.UnreadMessageCount + 1;
	p2.UnreadMessageCount = v3;
	local l__NewMessageIcon__4 = p2.NewMessageIcon;
	l__NewMessageIcon__4.Visible = true;
	l__NewMessageIcon__4.TextLabel.Text = v3 < 100 and tostring(v3) or "!";
	local v5 = l__NewMessageIcon__4.Position + UDim2.new(0, 0, -0.1, 0);
	l__NewMessageIcon__4.Position = UDim2.new(0, 0, -0.15, 0);
	l__NewMessageIcon__4:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.15, true);
end;
function v2.SetActive(p4, p5)
	p4.Active = p5;
	p4.UnselectedFrame.Visible = not p5;
	p4.SelectedFrame.Visible = p5;
	if not p5 then
		p4.NameTag.Font = Enum.Font.SourceSans;
		return;
	end;
	p4.UnreadMessageCount = 0;
	p4.NewMessageIcon.Visible = false;
	p4.NameTag.Font = Enum.Font.SourceSansBold;
end;
function v2.SetTextSize(p6, p7)
	p6.NameTag.TextSize = p7;
end;
local u2 = require(script.Parent:WaitForChild("CurveUtil"));
function v2.FadeOutBackground(p8, p9)
	p8.AnimParams.Background_TargetTransparency = 1;
	p8.AnimParams.Background_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p9);
end;
function v2.FadeInBackground(p10, p11)
	p10.AnimParams.Background_TargetTransparency = 0.6;
	p10.AnimParams.Background_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p11);
end;
function v2.FadeOutText(p12, p13)
	p12.AnimParams.Text_TargetTransparency = 1;
	p12.AnimParams.Text_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p13);
	p12.AnimParams.TextStroke_TargetTransparency = 1;
	p12.AnimParams.TextStroke_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p13);
end;
function v2.FadeInText(p14, p15)
	p14.AnimParams.Text_TargetTransparency = 0;
	p14.AnimParams.Text_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p15);
	p14.AnimParams.TextStroke_TargetTransparency = 0.75;
	p14.AnimParams.TextStroke_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p15);
end;
function v2.AnimGuiObjects(p16)
	p16.UnselectedFrame.BackgroundTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.SelectedFrame.BackgroundImage.BackgroundTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.SelectedFrame.BlueBarLeft.ImageTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.SelectedFrame.BlueBarRight.ImageTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.NameTagNonSelect.TextTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.NameTagNonSelect.TextStrokeTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.NameTag.TextTransparency = p16.AnimParams.Text_CurrentTransparency;
	p16.NewMessageIcon.ImageTransparency = p16.AnimParams.Text_CurrentTransparency;
	p16.WhiteTextNewMessageNotification.TextTransparency = p16.AnimParams.Text_CurrentTransparency;
	p16.NameTagSelect.TextTransparency = p16.AnimParams.Text_CurrentTransparency;
	p16.NameTag.TextStrokeTransparency = p16.AnimParams.TextStroke_CurrentTransparency;
	p16.WhiteTextNewMessageNotification.TextStrokeTransparency = p16.AnimParams.TextStroke_CurrentTransparency;
	p16.NameTagSelect.TextStrokeTransparency = p16.AnimParams.TextStroke_CurrentTransparency;
end;
function v2.InitializeAnimParams(p17)
	p17.AnimParams.Text_TargetTransparency = 0;
	p17.AnimParams.Text_CurrentTransparency = 0;
	p17.AnimParams.Text_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(0);
	p17.AnimParams.TextStroke_TargetTransparency = 0.75;
	p17.AnimParams.TextStroke_CurrentTransparency = 0.75;
	p17.AnimParams.TextStroke_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(0);
	p17.AnimParams.Background_TargetTransparency = 0.6;
	p17.AnimParams.Background_CurrentTransparency = 0.6;
	p17.AnimParams.Background_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(0);
end;
function v2.Update(p18, p19)
	p18.AnimParams.Background_CurrentTransparency = u2:Expt(p18.AnimParams.Background_CurrentTransparency, p18.AnimParams.Background_TargetTransparency, p18.AnimParams.Background_NormalizedExptValue, p19);
	p18.AnimParams.Text_CurrentTransparency = u2:Expt(p18.AnimParams.Text_CurrentTransparency, p18.AnimParams.Text_TargetTransparency, p18.AnimParams.Text_NormalizedExptValue, p19);
	p18.AnimParams.TextStroke_CurrentTransparency = u2:Expt(p18.AnimParams.TextStroke_CurrentTransparency, p18.AnimParams.TextStroke_TargetTransparency, p18.AnimParams.TextStroke_NormalizedExptValue, p19);
	p18:AnimGuiObjects();
end;
local function u3()
	local v6 = Instance.new("Frame");
	v6.Selectable = false;
	v6.Size = UDim2.new(1, 0, 1, 0);
	v6.BackgroundTransparency = 1;
	local v7 = Instance.new("Frame");
	v7.Selectable = false;
	v7.Name = "BackgroundFrame";
	v7.Size = UDim2.new(1, -2, 1, -2);
	v7.Position = UDim2.new(0, 1, 0, 1);
	v7.BackgroundTransparency = 1;
	v7.Parent = v6;
	local v8 = Instance.new("Frame");
	v8.Selectable = false;
	v8.Name = "UnselectedFrame";
	v8.Size = UDim2.new(1, 0, 1, 0);
	v8.Position = UDim2.new(0, 0, 0, 0);
	v8.BorderSizePixel = 0;
	v8.BackgroundColor3 = u1.ChannelsTabUnselectedColor;
	v8.BackgroundTransparency = 0.6;
	v8.Parent = v7;
	local v9 = Instance.new("Frame");
	v9.Selectable = false;
	v9.Name = "SelectedFrame";
	v9.Size = UDim2.new(1, 0, 1, 0);
	v9.Position = UDim2.new(0, 0, 0, 0);
	v9.BorderSizePixel = 0;
	v9.BackgroundColor3 = u1.ChannelsTabSelectedColor;
	v9.BackgroundTransparency = 1;
	v9.Parent = v7;
	local v10 = Instance.new("ImageLabel");
	v10.Selectable = false;
	v10.Name = "BackgroundImage";
	v10.BackgroundTransparency = 1;
	v10.BorderSizePixel = 0;
	v10.Size = UDim2.new(1, 0, 1, 0);
	v10.Position = UDim2.new(0, 0, 0, 0);
	v10.ScaleType = Enum.ScaleType.Slice;
	v10.Parent = v9;
	v10.BackgroundTransparency = -0.4;
	v10.BackgroundColor3 = Color3.fromRGB(93.6, 100.8, 115.19999999999999);
	local v11 = Instance.new("ImageLabel");
	v11.Selectable = false;
	v11.Size = UDim2.new(0.5, -2, 0, 4);
	v11.BackgroundTransparency = 1;
	v11.ScaleType = Enum.ScaleType.Slice;
	v11.SliceCenter = Rect.new(3, 3, 32, 21);
	v11.Parent = v9;
	local v12 = v11:Clone();
	v12.Parent = v9;
	v11.Position = UDim2.new(0, 2, 1, -4);
	v12.Position = UDim2.new(0.5, 0, 1, -4);
	v11.Image = "rbxasset://textures/ui/Settings/Slider/SelectedBarLeft.png";
	v12.Image = "rbxasset://textures/ui/Settings/Slider/SelectedBarRight.png";
	v11.Name = "BlueBarLeft";
	v12.Name = "BlueBarRight";
	local v13 = Instance.new("TextButton");
	v13.Selectable = u1.GamepadNavigationEnabled;
	v13.Size = UDim2.new(1, 0, 1, 0);
	v13.Position = UDim2.new(0, 0, 0, 0);
	v13.BackgroundTransparency = 1;
	v13.Font = u1.DefaultFont;
	v13.TextSize = u1.ChatChannelsTabTextSize;
	v13.TextColor3 = Color3.new(1, 1, 1);
	v13.TextStrokeTransparency = 0.75;
	v13.Parent = v7;
	local v14 = v13:Clone();
	local v15 = v13:Clone();
	v14.Parent = v8;
	v15.Parent = v9;
	v14.Font = Enum.Font.SourceSans;
	v14.Active = false;
	v15.Active = false;
	local v16 = Instance.new("Frame");
	v16.Selectable = false;
	v16.Size = UDim2.new(0, 18, 0, 18);
	v16.Position = UDim2.new(0.8, -9, 0.5, -9);
	v16.BackgroundTransparency = 1;
	v16.Parent = v7;
	local v17 = Instance.new("ImageLabel");
	v17.Selectable = false;
	v17.Size = UDim2.new(1, 0, 1, 0);
	v17.BackgroundTransparency = 1;
	v17.Image = "rbxasset://textures/ui/Chat/MessageCounter.png";
	v17.Visible = false;
	v17.Parent = v16;
	local v18 = Instance.new("TextLabel");
	v18.Selectable = false;
	v18.BackgroundTransparency = 1;
	v18.Size = UDim2.new(0, 13, 0, 9);
	v18.Position = UDim2.new(0.5, -7, 0.5, -7);
	v18.Font = u1.DefaultFont;
	v18.TextSize = 14;
	v18.TextColor3 = Color3.new(1, 1, 1);
	v18.Text = "";
	v18.Parent = v17;
	return v6, v13, v14, v15, v17, v8, v9;
end;
function v1.new(p20)
	local v19 = setmetatable({}, v2);
	local v20, v21, v22, v23, v24, v25, v26 = u3();
	v19.GuiObject = v20;
	v19.NameTag = v21;
	v19.NameTagNonSelect = v22;
	v19.NameTagSelect = v23;
	v19.NewMessageIcon = v24;
	v19.UnselectedFrame = v25;
	v19.SelectedFrame = v26;
	v19.BlueBarLeft = v26.BlueBarLeft;
	v19.BlueBarRight = v26.BlueBarRight;
	v19.BackgroundImage = v26.BackgroundImage;
	v19.WhiteTextNewMessageNotification = v19.NewMessageIcon.TextLabel;
	v19.ChannelName = p20;
	v19.UnreadMessageCount = 0;
	v19.Active = false;
	v19.GuiObject.Name = "Frame_" .. v19.ChannelName;
	if u1.MaxChannelNameLength < string.len(p20) then
		p20 = string.sub(p20, 1, u1.MaxChannelNameLength - 3) .. "...";
	end;
	v19.NameTag.Text = "";
	v19.NameTagNonSelect.Text = p20;
	v19.NameTagSelect.Text = p20;
	v19.AnimParams = {};
	v19:InitializeAnimParams();
	v19:AnimGuiObjects();
	v19:SetActive(false);
	return v19;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX42"><Properties><string name="Name">MessageLogDisplay</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1, v2 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserRemoveMessageOnTextFilterFailures");
end);
local v3 = {
	ScrollBarThickness = 4
};
local l__Parent__4 = script.Parent;
local v5 = {};
v5.__index = v5;
local u1 = require(game:GetService("Chat"):WaitForChild("ClientChatModules"):WaitForChild("ChatSettings"));
function v5.Destroy(p1)
	p1.GuiObject:Destroy();
	p1.Destroyed = true;
end;
function v5.SetActive(p2, p3)
	p2.GuiObject.Visible = p3;
end;
local u2 = v1 or v2;
function v5.UpdateMessageFiltered(p4, p5)
	local v6 = nil;
	local v7 = 1;
	local l__MessageObjectLog__8 = p4.MessageObjectLog;
	while v7 <= #l__MessageObjectLog__8 do
		local v9 = l__MessageObjectLog__8[v7];
		if v9.ID == p5.ID then
			v6 = v9;
			break;
		end;
		v7 = v7 + 1;	
	end;
	if v6 then
		if not u2 then
			v6.UpdateTextFunction(p5);
			p4:PositionMessageLabelInWindow(v6, v7);
			return;
		end;
	else
		return;
	end;
	if p5.Message == "" then
		p4:RemoveMessageAtIndex(v7);
		return;
	end;
	v6.UpdateTextFunction(p5);
	p4:PositionMessageLabelInWindow(v6, v7);
end;
local u3 = require(l__Parent__4:WaitForChild("MessageLabelCreator")).new();
function v5.AddMessage(p6, p7)
	p6:WaitUntilParentedCorrectly();
	local v10 = u3:CreateMessageLabel(p7, p6.CurrentChannelName);
	if v10 == nil then
		return;
	end;
	table.insert(p6.MessageObjectLog, v10);
	p6:PositionMessageLabelInWindow(v10, #p6.MessageObjectLog);
end;
function v5.RemoveMessageAtIndex(p8, p9)
	p8:WaitUntilParentedCorrectly();
	local v11 = p8.MessageObjectLog[p9];
	if v11 then
		v11:Destroy();
		table.remove(p8.MessageObjectLog, p9);
	end;
end;
function v5.AddMessageAtIndex(p10, p11, p12)
	local v12 = u3:CreateMessageLabel(p11, p10.CurrentChannelName);
	if v12 == nil then
		return;
	end;
	table.insert(p10.MessageObjectLog, p12, v12);
	p10:PositionMessageLabelInWindow(v12, p12);
end;
function v5.RemoveLastMessage(p13)
	p13:WaitUntilParentedCorrectly();
	p13.MessageObjectLog[1]:Destroy();
	table.remove(p13.MessageObjectLog, 1);
end;
function v5.IsScrolledDown(p14)
	local l__Offset__13 = p14.Scroller.CanvasSize.Y.Offset;
	local l__Y__14 = p14.Scroller.AbsoluteWindowSize.Y;
	local v15 = true;
	if not (l__Offset__13 < l__Y__14) then
		v15 = l__Offset__13 - p14.Scroller.CanvasPosition.Y <= l__Y__14 + 5;
	end;
	return v15;
end;
function v5.UpdateMessageTextHeight(p15, p16)
	local l__BaseFrame__16 = p16.BaseFrame;
	for v17 = 1, 10 do
		if p16.BaseMessage.TextFits then
			break;
		end;
		l__BaseFrame__16.Size = UDim2.new(1, 0, 0, p16.GetHeightFunction(p15.Scroller.AbsoluteSize.X - v17));
	end;
end;
function v5.PositionMessageLabelInWindow(p17, p18, p19)
	p17:WaitUntilParentedCorrectly();
	local l__BaseFrame__18 = p18.BaseFrame;
	local v19 = 1;
	if p17.MessageObjectLog[p19 - 1] then
		if p19 == #p17.MessageObjectLog then
			v19 = p17.MessageObjectLog[p19 - 1].BaseFrame.LayoutOrder + 1;
		else
			v19 = p17.MessageObjectLog[p19 - 1].BaseFrame.LayoutOrder;
		end;
	end;
	l__BaseFrame__18.LayoutOrder = v19;
	l__BaseFrame__18.Size = UDim2.new(1, 0, 0, p18.GetHeightFunction(p17.Scroller.AbsoluteSize.X));
	l__BaseFrame__18.Parent = p17.Scroller;
	if p18.BaseMessage then
		p17:UpdateMessageTextHeight(p18);
	end;
	if p17:IsScrolledDown() then
		p17.Scroller.CanvasPosition = Vector2.new(0, math.max(0, p17.Scroller.CanvasSize.Y.Offset - p17.Scroller.AbsoluteSize.Y));
	end;
end;
function v5.ReorderAllMessages(p20)
	p20:WaitUntilParentedCorrectly();
	if p20.GuiObject.AbsoluteSize.Y < 1 then
		return;
	end;
	for v20, v21 in pairs(p20.MessageObjectLog) do
		p20:UpdateMessageTextHeight(v21);
	end;
	if not p20:IsScrolledDown() then
		p20.Scroller.CanvasPosition = p20.Scroller.CanvasPosition;
		return;
	end;
	p20.Scroller.CanvasPosition = Vector2.new(0, math.max(0, p20.Scroller.CanvasSize.Y.Offset - p20.Scroller.AbsoluteSize.Y));
end;
function v5.Clear(p21)
	for v22, v23 in pairs(p21.MessageObjectLog) do
		v23:Destroy();
	end;
	p21.MessageObjectLog = {};
end;
function v5.SetCurrentChannelName(p22, p23)
	p22.CurrentChannelName = p23;
end;
function v5.FadeOutBackground(p24, p25)

end;
function v5.FadeInBackground(p26, p27)

end;
local u4 = require(l__Parent__4:WaitForChild("CurveUtil"));
function v5.FadeOutText(p28, p29)
	for v24 = 1, #p28.MessageObjectLog do
		if p28.MessageObjectLog[v24].FadeOutFunction then
			p28.MessageObjectLog[v24].FadeOutFunction(p29, u4);
		end;
	end;
end;
function v5.FadeInText(p30, p31)
	for v25 = 1, #p30.MessageObjectLog do
		if p30.MessageObjectLog[v25].FadeInFunction then
			p30.MessageObjectLog[v25].FadeInFunction(p31, u4);
		end;
	end;
end;
function v5.Update(p32, p33)
	for v26 = 1, #p32.MessageObjectLog do
		if p32.MessageObjectLog[v26].UpdateAnimFunction then
			p32.MessageObjectLog[v26].UpdateAnimFunction(p33, u4);
		end;
	end;
end;
function v5.WaitUntilParentedCorrectly(p34)
	while not p34.GuiObject:IsDescendantOf(game:GetService("Players").LocalPlayer) do
		p34.GuiObject.AncestryChanged:wait();	
	end;
end;
local function u5()
	local v27 = Instance.new("Frame");
	v27.Selectable = false;
	v27.Size = UDim2.new(1, 0, 1, 0);
	v27.BackgroundTransparency = 1;
	local v28 = Instance.new("ScrollingFrame");
	v28.Selectable = u1.GamepadNavigationEnabled;
	v28.Name = "Scroller";
	v28.BackgroundTransparency = 1;
	v28.BorderSizePixel = 0;
	v28.Position = UDim2.new(0, 0, 0, 3);
	v28.Size = UDim2.new(1, -4, 1, -6);
	v28.CanvasSize = UDim2.new(0, 0, 0, 0);
	v28.ScrollBarThickness = v3.ScrollBarThickness;
	v28.Active = true;
	v28.Parent = v27;
	local v29 = Instance.new("UIListLayout");
	v29.SortOrder = Enum.SortOrder.LayoutOrder;
	v29.Parent = v28;
	return v27, v28, v29;
end;
function v3.new()
	local v30 = setmetatable({}, v5);
	v30.Destroyed = false;
	local v31, v32, v33 = u5();
	v30.GuiObject = v31;
	v30.Scroller = v32;
	v30.Layout = v33;
	v30.MessageObjectLog = {};
	v30.Name = "MessageLogDisplay";
	v30.GuiObject.Name = "Frame_" .. v30.Name;
	v30.CurrentChannelName = "";
	v30.GuiObject:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		spawn(function()
			v30:ReorderAllMessages();
		end);
	end);
	local u6 = true;
	v30.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		local l__AbsoluteContentSize__34 = v30.Layout.AbsoluteContentSize;
		v30.Scroller.CanvasSize = UDim2.new(0, 0, 0, l__AbsoluteContentSize__34.Y);
		if u6 then
			v30.Scroller.CanvasPosition = Vector2.new(0, l__AbsoluteContentSize__34.Y - v30.Scroller.AbsoluteWindowSize.Y);
		end;
	end);
	v30.Scroller:GetPropertyChangedSignal("CanvasPosition"):Connect(function()
		u6 = v30:IsScrolledDown();
	end);
	return v30;
end;
return v3;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX49"><Properties><string name="Name">ChatWindow</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local l__Players__2 = game:GetService("Players");
local l__Chat__3 = game:GetService("Chat");
local l__Chat__4 = game:GetService("Chat");
local l__Parent__5 = script.Parent;
local v6 = {};
v6.__index = v6;
local u1 = require(l__Chat__4:WaitForChild("ClientChatModules"):WaitForChild("ChatSettings"));
function getClassicChatEnabled()
	if u1.ClassicChatEnabled ~= nil then
		return u1.ClassicChatEnabled;
	end;
	return l__Players__2.ClassicChat;
end;
function getBubbleChatEnabled()
	if u1.BubbleChatEnabled ~= nil then
		return u1.BubbleChatEnabled;
	end;
	return l__Players__2.BubbleChat;
end;
function bubbleChatOnly()
	return not getClassicChatEnabled() and getBubbleChatEnabled();
end;
function mergeProps(p1, p2)
	if p1 then
		if not p2 then
			return;
		end;
	else
		return;
	end;
	local v7, v8, v9 = pairs(p1);
	while true do
		local v10, v11 = v7(v8, v9);
		if v10 then

		else
			break;
		end;
		v9 = v10;
		if p2[v10] ~= nil then
			p2[v10] = v11;
		end;	
	end;
end;
local l__PlayerGui__2 = l__Players__2.LocalPlayer:WaitForChild("PlayerGui");
function v6.CreateGuiObjects(p3, p4)
	local u3 = nil;
	pcall(function()
		u3 = l__Chat__4:InvokeChatCallback(Enum.ChatCallbackType.OnCreatingChatWindow, nil);
	end);
	mergeProps(u3, u1);
	local v12 = Instance.new("Frame");
	v12.BackgroundTransparency = 1;
	v12.Active = u1.WindowDraggable;
	v12.Parent = p4;
	v12.AutoLocalize = false;
	local v13 = Instance.new("Frame");
	v13.Selectable = false;
	v13.Name = "ChatBarParentFrame";
	v13.BackgroundTransparency = 1;
	v13.Parent = v12;
	local v14 = Instance.new("Frame");
	v14.Selectable = false;
	v14.Name = "ChannelsBarParentFrame";
	v14.BackgroundTransparency = 1;
	v14.Position = UDim2.new(0, 0, 0, 0);
	v14.Parent = v12;
	local v15 = Instance.new("Frame");
	v15.Selectable = false;
	v15.Name = "ChatChannelParentFrame";
	v15.BackgroundTransparency = 1;
	v15.BackgroundColor3 = u1.BackGroundColor;
	v15.BackgroundTransparency = 0.6;
	v15.BorderSizePixel = 0;
	v15.Parent = v12;
	local v16 = Instance.new("ImageButton");
	v16.Selectable = false;
	v16.Image = "";
	v16.BackgroundTransparency = 0.6;
	v16.BorderSizePixel = 0;
	v16.Visible = false;
	v16.BackgroundColor3 = u1.BackGroundColor;
	v16.Active = true;
	if bubbleChatOnly() then
		v16.Position = UDim2.new(1, -v16.AbsoluteSize.X, 0, 0);
	else
		v16.Position = UDim2.new(1, -v16.AbsoluteSize.X, 1, -v16.AbsoluteSize.Y);
	end;
	v16.Parent = v12;
	local v17 = Instance.new("ImageLabel");
	v17.Selectable = false;
	v17.Size = UDim2.new(0.8, 0, 0.8, 0);
	v17.Position = UDim2.new(0.2, 0, 0.2, 0);
	v17.BackgroundTransparency = 1;
	v17.Image = "rbxassetid://261880743";
	v17.Parent = v16;
	local function v18()
		local v19 = v12;
		while v19 and not v19:IsA("ScreenGui") do
			v19 = v19.Parent;		
		end;
		return v19;
	end;
	local v20 = 3;
	local v21 = v18();
	if v21.AbsoluteSize.X <= 640 then
		v20 = 1;
	elseif v21.AbsoluteSize.X <= 1024 then
		v20 = 2;
	end;
	local u4 = false;
	local function u5()
		if u4 then
			return;
		end;
		u4 = true;
		if not v12:IsDescendantOf(l__PlayerGui__2) then
			return;
		end;
		local v22 = v18();
		local l__MinimumWindowSize__23 = u1.MinimumWindowSize;
		local l__MaximumWindowSize__24 = u1.MaximumWindowSize;
		local v25 = l__MinimumWindowSize__23.X.Scale * v22.AbsoluteSize.X + l__MinimumWindowSize__23.X.Offset;
		local v26 = math.max(l__MinimumWindowSize__23.Y.Scale * v22.AbsoluteSize.Y + l__MinimumWindowSize__23.Y.Offset, v14.AbsoluteSize.Y + v13.AbsoluteSize.Y);
		local v27 = l__MaximumWindowSize__24.X.Scale * v22.AbsoluteSize.X + l__MaximumWindowSize__24.X.Offset;
		local v28 = l__MaximumWindowSize__24.Y.Scale * v22.AbsoluteSize.Y + l__MaximumWindowSize__24.Y.Offset;
		local l__X__29 = v12.AbsoluteSize.X;
		local l__Y__30 = v12.AbsoluteSize.Y;
		if l__X__29 < v25 then
			v12.Size = v12.Size + UDim2.new(0, v25 - l__X__29, 0, 0);
		elseif v27 < l__X__29 then
			v12.Size = v12.Size + UDim2.new(0, v27 - l__X__29, 0, 0);
		end;
		if l__Y__30 < v26 then
			v12.Size = v12.Size + UDim2.new(0, 0, 0, v26 - l__Y__30);
		elseif v28 < l__Y__30 then
			v12.Size = v12.Size + UDim2.new(0, 0, 0, v28 - l__Y__30);
		end;
		v12.Size = UDim2.new(v12.AbsoluteSize.X / v22.AbsoluteSize.X, 0, v12.AbsoluteSize.Y / v22.AbsoluteSize.Y, 0);
		u4 = false;
	end;
	v12.Changed:connect(function(p5)
		if p5 == "AbsoluteSize" then
			u5();
		end;
	end);
	v16.DragBegin:connect(function(p6)
		v12.Draggable = false;
	end);
	v16.DragStopped:connect(function(p7, p8)
		v12.Draggable = u1.WindowDraggable;
	end);
	local u6 = false;
	local function u7(p9)
		if u1.WindowDraggable == false and u1.WindowResizable == false then
			return;
		end;
		local v31 = p9 - v12.AbsolutePosition + v16.AbsoluteSize;
		v12.Size = UDim2.new(0, v31.X, 0, v31.Y);
		if bubbleChatOnly() then
			v16.Position = UDim2.new(1, -v16.AbsoluteSize.X, 0, 0);
			return;
		end;
		v16.Position = UDim2.new(1, -v16.AbsoluteSize.X, 1, -v16.AbsoluteSize.Y);
	end;
	v16.Changed:connect(function(p10)
		if p10 == "AbsolutePosition" and not v12.Draggable then
			if u6 then
				return;
			end;
			u6 = true;
			u7(v16.AbsolutePosition);
			u6 = false;
		end;
	end);
	local function v32(p11)
		if v20 == 1 then
			p11 = p11 or u1.ChatBarTextSizePhone;
		else
			p11 = p11 or u1.ChatBarTextSize;
		end;
		return p11 + 14 + 10;
	end;
	if bubbleChatOnly() then
		v13.Position = UDim2.new(0, 0, 0, 0);
		v14.Visible = false;
		v14.Active = false;
		v15.Visible = false;
		v15.Active = false;
		local v33 = v18();
		if v20 == 1 then
			local v34 = u1.DefaultWindowSizePhone.X.Scale;
			local v35 = u1.DefaultWindowSizePhone.X.Offset;
		elseif v20 == 2 then
			v34 = u1.DefaultWindowSizeTablet.X.Scale;
			v35 = u1.DefaultWindowSizeTablet.X.Offset;
		else
			v34 = u1.DefaultWindowSizeDesktop.X.Scale;
			v35 = u1.DefaultWindowSizeDesktop.X.Offset;
		end;
		v12.Size = UDim2.new(v34, v35, 0, (v32()));
		v12.Position = u1.DefaultWindowPosition;
	else
		local v36 = v18();
		if v20 == 1 then
			v12.Size = u1.DefaultWindowSizePhone;
		elseif v20 == 2 then
			v12.Size = u1.DefaultWindowSizeTablet;
		else
			v12.Size = u1.DefaultWindowSizeDesktop;
		end;
		v12.Position = u1.DefaultWindowPosition;
	end;
	if v20 == 1 then
		u1.ChatWindowTextSize = u1.ChatWindowTextSizePhone;
		u1.ChatChannelsTabTextSize = u1.ChatChannelsTabTextSizePhone;
		u1.ChatBarTextSize = u1.ChatBarTextSizePhone;
	end;
	local function v37(p12)
		v12.Active = p12;
		v12.Draggable = p12;
	end;
	local function u8(p13)
		if v20 == 1 then
			p13 = p13 or u1.ChatChannelsTabTextSizePhone;
		else
			p13 = p13 or u1.ChatChannelsTabTextSize;
		end;
		return math.max(32, p13 + 8) + 2;
	end;
	local function u9()
		local v38 = nil;
		local v39 = u8();
		v38 = v32();
		if not u1.ShowChannelsBar then
			v15.Size = UDim2.new(1, 0, 1, -(v38 + 2 + 2));
			v15.Position = UDim2.new(0, 0, 0, 2);
			return;
		end;
		v15.Size = UDim2.new(1, 0, 1, -(v39 + v38 + 2 + 2));
		v15.Position = UDim2.new(0, 0, 0, v39 + 2);
	end;
	local function v40(p14)
		v14.Size = UDim2.new(1, 0, 0, (u8(p14)));
		u9();
	end;
	local function u10(p15)
		local v41 = nil;
		v16.Visible = p15;
		v16.Draggable = p15;
		v41 = v13.Size.Y.Offset;
		if p15 then
			v13.Size = UDim2.new(1, -v41 - 2, 0, v41);
			if bubbleChatOnly() then
				return;
			end;
		else
			v13.Size = UDim2.new(1, 0, 0, v41);
			if not bubbleChatOnly() then
				v13.Position = UDim2.new(0, 0, 1, -v41);
			end;
			return;
		end;
		v13.Position = UDim2.new(0, 0, 1, -v41);
	end;
	local function v42(p16)
		local v43 = v32(p16);
		v13.Size = UDim2.new(1, 0, 0, v43);
		if not bubbleChatOnly() then
			v13.Position = UDim2.new(0, 0, 1, -v43);
		end;
		v16.Size = UDim2.new(0, v43, 0, v43);
		v16.Position = UDim2.new(1, -v43, 1, -v43);
		u9();
		u10(u1.WindowResizable);
	end;
	local function v44(p17)
		v14.Visible = p17;
		u9();
	end;
	v40(u1.ChatChannelsTabTextSize);
	v42(u1.ChatBarTextSize);
	v37(u1.WindowDraggable);
	u10(u1.WindowResizable);
	v44(u1.ShowChannelsBar);
	u1.SettingsChanged:connect(function(p18, p19)
		if p18 == "WindowDraggable" then
			v37(p19);
			return;
		end;
		if p18 == "WindowResizable" then
			u10(p19);
			return;
		end;
		if p18 == "ChatChannelsTabTextSize" then
			v40(p19);
			return;
		end;
		if p18 == "ChatBarTextSize" then
			v42(p19);
			return;
		end;
		if p18 == "ShowChannelsBar" then
			v44(p19);
		end;
	end);
	p3.GuiObject = v12;
	p3.GuiObjects.BaseFrame = v12;
	p3.GuiObjects.ChatBarParentFrame = v13;
	p3.GuiObjects.ChannelsBarParentFrame = v14;
	p3.GuiObjects.ChatChannelParentFrame = v15;
	p3.GuiObjects.ChatResizerFrame = v16;
	p3.GuiObjects.ResizeIcon = v17;
	p3:AnimGuiObjects();
end;
function v6.GetChatBar(p20)
	return p20.ChatBar;
end;
function v6.RegisterChatBar(p21, p22)
	p21.ChatBar = p22;
	p21.ChatBar:CreateGuiObjects(p21.GuiObjects.ChatBarParentFrame);
end;
function v6.RegisterChannelsBar(p23, p24)
	p23.ChannelsBar = p24;
	p23.ChannelsBar:CreateGuiObjects(p23.GuiObjects.ChannelsBarParentFrame);
end;
function v6.RegisterMessageLogDisplay(p25, p26)
	p25.MessageLogDisplay = p26;
	p25.MessageLogDisplay.GuiObject.Parent = p25.GuiObjects.ChatChannelParentFrame;
end;
local u11 = require(l__Parent__5:WaitForChild("ChatChannel"));
function v6.AddChannel(p27, p28)
	if p27:GetChannel(p28) then
		error("Channel '" .. p28 .. "' already exists!");
		return;
	end;
	local v45 = u11.new(p28, p27.MessageLogDisplay);
	p27.Channels[p28:lower()] = v45;
	v45:SetActive(false);
	local v46 = p27.ChannelsBar:AddChannelTab(p28);
	v46.NameTag.MouseButton1Click:connect(function()
		p27:SwitchCurrentChannel(p28);
	end);
	v45:RegisterChannelTab(v46);
	return v45;
end;
function v6.GetFirstChannel(p29)
	local v47, v48, v49 = pairs(p29.Channels);
	local v50, v51 = v47(v48, v49);
	if not v50 then
		return nil;
	end;
	return v51;
end;
function v6.RemoveChannel(p30, p31)
	if not p30:GetChannel(p31) then
		error("Channel '" .. p31 .. "' does not exist!");
	end;
	local v52 = p31:lower();
	local v53 = false;
	if p30.Channels[v52] == p30:GetCurrentChannel() then
		v53 = true;
		p30:SwitchCurrentChannel(nil);
	end;
	p30.Channels[v52]:Destroy();
	p30.Channels[v52] = nil;
	p30.ChannelsBar:RemoveChannelTab(p31);
	if v53 then
		if p30:GetChannel(u1.GeneralChannelName) ~= nil and v52 ~= u1.GeneralChannelName:lower() then
			local v54 = u1.GeneralChannelName;
		else
			local v55 = p30:GetFirstChannel();
			v54 = v55 and v55.Name or nil;
		end;
		p30:SwitchCurrentChannel(v54);
	end;
	if not u1.ShowChannelsBar and p30.ChatBar.TargetChannel == p31 then
		p30.ChatBar:SetChannelTarget(u1.GeneralChannelName);
	end;
end;
function v6.GetChannel(p32, p33)
	return p33 and p32.Channels[p33:lower()] or nil;
end;
function v6.GetTargetMessageChannel(p34)
	if not u1.ShowChannelsBar then
		return p34.ChatBar.TargetChannel;
	end;
	local v56 = p34:GetCurrentChannel();
	return v56 and v56.Name;
end;
function v6.GetCurrentChannel(p35)
	return p35.CurrentChannel;
end;
function v6.SwitchCurrentChannel(p36, p37)
	if not u1.ShowChannelsBar then
		local v57 = p36:GetChannel(p37);
		if v57 then
			p36.ChatBar:SetChannelTarget(v57.Name);
		end;
		p37 = u1.GeneralChannelName;
	end;
	local v58 = p36:GetCurrentChannel();
	local v59 = p36:GetChannel(p37);
	if v59 == nil then
		error(string.format("Channel '%s' does not exist.", p37));
	end;
	if v59 ~= v58 then
		if v58 then
			v58:SetActive(false);
			p36.ChannelsBar:GetChannelTab(v58.Name):SetActive(false);
		end;
		if v59 then
			v59:SetActive(true);
			p36.ChannelsBar:GetChannelTab(v59.Name):SetActive(true);
		end;
		p36.CurrentChannel = v59;
	end;
end;
function v6.UpdateFrameVisibility(p38)
	p38.GuiObject.Visible = p38.Visible and p38.CoreGuiEnabled;
end;
function v6.GetVisible(p39)
	return p39.Visible;
end;
function v6.SetVisible(p40, p41)
	p40.Visible = p41;
	p40:UpdateFrameVisibility();
end;
function v6.GetCoreGuiEnabled(p42)
	return p42.CoreGuiEnabled;
end;
function v6.SetCoreGuiEnabled(p43, p44)
	p43.CoreGuiEnabled = p44;
	p43:UpdateFrameVisibility();
end;
function v6.EnableResizable(p45)
	p45.GuiObjects.ChatResizerFrame.Active = true;
end;
function v6.DisableResizable(p46)
	p46.GuiObjects.ChatResizerFrame.Active = false;
end;
local u12 = require(l__Parent__5:WaitForChild("CurveUtil"));
function v6.FadeOutBackground(p47, p48)
	p47.ChannelsBar:FadeOutBackground(p48);
	p47.MessageLogDisplay:FadeOutBackground(p48);
	p47.ChatBar:FadeOutBackground(p48);
	p47.AnimParams.Background_TargetTransparency = 1;
	p47.AnimParams.Background_NormalizedExptValue = u12:NormalizedDefaultExptValueInSeconds(p48);
end;
function v6.FadeInBackground(p49, p50)
	p49.ChannelsBar:FadeInBackground(p50);
	p49.MessageLogDisplay:FadeInBackground(p50);
	p49.ChatBar:FadeInBackground(p50);
	p49.AnimParams.Background_TargetTransparency = 0.6;
	p49.AnimParams.Background_NormalizedExptValue = u12:NormalizedDefaultExptValueInSeconds(p50);
end;
function v6.FadeOutText(p51, p52)
	p51.MessageLogDisplay:FadeOutText(p52);
	p51.ChannelsBar:FadeOutText(p52);
end;
function v6.FadeInText(p53, p54)
	p53.MessageLogDisplay:FadeInText(p54);
	p53.ChannelsBar:FadeInText(p54);
end;
function v6.AnimGuiObjects(p55)
	p55.GuiObjects.ChatChannelParentFrame.BackgroundTransparency = p55.AnimParams.Background_CurrentTransparency;
	p55.GuiObjects.ChatResizerFrame.BackgroundTransparency = p55.AnimParams.Background_CurrentTransparency;
	p55.GuiObjects.ResizeIcon.ImageTransparency = p55.AnimParams.Background_CurrentTransparency;
end;
function v6.InitializeAnimParams(p56)
	p56.AnimParams.Background_TargetTransparency = 0.6;
	p56.AnimParams.Background_CurrentTransparency = 0.6;
	p56.AnimParams.Background_NormalizedExptValue = u12:NormalizedDefaultExptValueInSeconds(0);
end;
function v6.Update(p57, p58)
	p57.ChatBar:Update(p58);
	p57.ChannelsBar:Update(p58);
	p57.MessageLogDisplay:Update(p58);
	p57.AnimParams.Background_CurrentTransparency = u12:Expt(p57.AnimParams.Background_CurrentTransparency, p57.AnimParams.Background_TargetTransparency, p57.AnimParams.Background_NormalizedExptValue, p58);
	p57:AnimGuiObjects();
end;
function v1.new()
	local v60 = setmetatable({}, v6);
	v60.GuiObject = nil;
	v60.GuiObjects = {};
	v60.ChatBar = nil;
	v60.ChannelsBar = nil;
	v60.MessageLogDisplay = nil;
	v60.Channels = {};
	v60.CurrentChannel = nil;
	v60.Visible = true;
	v60.CoreGuiEnabled = true;
	v60.AnimParams = {};
	v60:InitializeAnimParams();
	return v60;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX56"><Properties><string name="Name">ChatChannel</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local l__Parent__2 = script.Parent;
local v3 = {};
v3.__index = v3;
function v3.Destroy(p1)
	p1.Destroyed = true;
end;
function v3.SetActive(p2, p3)
	if p3 == p2.Active then
		return;
	end;
	if p3 == false then
		p2.MessageLogDisplay:Clear();
	else
		p2.MessageLogDisplay:SetCurrentChannelName(p2.Name);
		for v4 = 1, #p2.MessageLog do
			p2.MessageLogDisplay:AddMessage(p2.MessageLog[v4]);
		end;
	end;
	p2.Active = p3;
end;
function v3.UpdateMessageFiltered(p4, p5)
	local v5 = 1;
	local l__MessageLog__6 = p4.MessageLog;
	local v7 = nil;
	while v5 <= #l__MessageLog__6 do
		local v8 = l__MessageLog__6[v5];
		if v8.ID == p5.ID then
			v7 = v8;
			break;
		end;
		v5 = v5 + 1;	
	end;
	if v7 then
		v7.Message = p5.Message;
		v7.IsFiltered = true;
		if not p4.Active then
			return;
		end;
	else
		p4:AddMessageToChannelByTimeStamp(p5);
		return;
	end;
	p4.MessageLogDisplay:UpdateMessageFiltered(v7);
end;
local u1 = require(game:GetService("Chat"):WaitForChild("ClientChatModules"):WaitForChild("ChatSettings"));
function v3.AddMessageToChannel(p6, p7)
	table.insert(p6.MessageLog, p7);
	if p6.Active then
		p6.MessageLogDisplay:AddMessage(p7);
	end;
	if u1.MessageHistoryLengthPerChannel < #p6.MessageLog then
		p6:RemoveLastMessageFromChannel();
	end;
end;
function v3.InternalAddMessageAtTimeStamp(p8, p9)
	for v9 = 1, #p8.MessageLog do
		if p9.Time < p8.MessageLog[v9].Time then
			table.insert(p8.MessageLog, v9, p9);
			return;
		end;
	end;
	table.insert(p8.MessageLog, p9);
end;
function v3.AddMessagesToChannelByTimeStamp(p10, p11, p12)
	for v10 = p12, #p11 do
		p10:InternalAddMessageAtTimeStamp(p11[v10]);
	end;
	while u1.MessageHistoryLengthPerChannel < #p10.MessageLog do
		table.remove(p10.MessageLog, 1);	
	end;
	if p10.Active then
		p10.MessageLogDisplay:Clear();
		for v11 = 1, #p10.MessageLog do
			p10.MessageLogDisplay:AddMessage(p10.MessageLog[v11]);
		end;
	end;
end;
function v3.AddMessageToChannelByTimeStamp(p13, p14)
	if not (#p13.MessageLog >= 1) then
		p13:AddMessageToChannel(p14);
		return;
	end;
	if p14.Time < p13.MessageLog[1].Time then
		return;
	end;
	if p13.MessageLog[#p13.MessageLog].Time <= p14.Time then
		p13:AddMessageToChannel(p14);
		return;
	end;
	for v12 = 1, #p13.MessageLog do
		if p14.Time < p13.MessageLog[v12].Time then
			table.insert(p13.MessageLog, v12, p14);
			if u1.MessageHistoryLengthPerChannel < #p13.MessageLog then
				p13:RemoveLastMessageFromChannel();
			end;
			if p13.Active then
				p13.MessageLogDisplay:AddMessageAtIndex(p14, v12);
			end;
			return;
		end;
	end;
end;
function v3.RemoveLastMessageFromChannel(p15)
	table.remove(p15.MessageLog, 1);
	if p15.Active then
		p15.MessageLogDisplay:RemoveLastMessage();
	end;
end;
function v3.ClearMessageLog(p16)
	p16.MessageLog = {};
	if p16.Active then
		p16.MessageLogDisplay:Clear();
	end;
end;
function v3.RegisterChannelTab(p17, p18)
	p17.ChannelTab = p18;
end;
function v1.new(p19, p20)
	local v13 = setmetatable({}, v3);
	v13.Destroyed = false;
	v13.Active = false;
	v13.MessageLog = {};
	v13.MessageLogDisplay = p20;
	v13.ChannelTab = nil;
	v13.Name = p19;
	return v13;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX63"><Properties><string name="Name">ChatBar</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local l__UserInputService__2 = game:GetService("UserInputService");
local l__RunService__3 = game:GetService("RunService");
local l__Players__4 = game:GetService("Players");
local l__TextService__5 = game:GetService("TextService");
local v6 = l__Players__4.LocalPlayer;
while not v6 do
	l__Players__4.PlayerAdded:wait();
	v6 = l__Players__4.LocalPlayer;
end;
local l__Chat__7 = game:GetService("Chat");
local l__ClientChatModules__8 = l__Chat__7:WaitForChild("ClientChatModules");
local l__Parent__9 = script.Parent;
local v10 = require(l__ClientChatModules__8:WaitForChild("ChatSettings"));
local v11 = require(l__Parent__9:WaitForChild("CurveUtil"));
local v12 = require(l__ClientChatModules__8:WaitForChild("CommandModules"):WaitForChild("Whisper"));
local v13 = require(l__Parent__9:WaitForChild("MessageSender"));
local u1 = nil;
pcall(function()
	u1 = require(game:GetService("Chat").ClientChatModules.ChatLocalization);
end);
if u1 == nil then
	u1 = {
		Get = function(p1, p2, p3)
			return p3;
		end
	};
end;
local v14 = {};
v14.__index = v14;
function v14.CreateGuiObjects(p4, p5)
	p4.ChatBarParentFrame = p5;
	local v15 = Instance.new("Frame");
	v15.Selectable = false;
	v15.Size = UDim2.new(1, 0, 1, 0);
	v15.BackgroundTransparency = 0.6;
	v15.BorderSizePixel = 0;
	v15.BackgroundColor3 = v10.ChatBarBackGroundColor;
	v15.Parent = p5;
	local v16 = Instance.new("Frame");
	v16.Selectable = false;
	v16.Name = "BoxFrame";
	v16.BackgroundTransparency = 0.6;
	v16.BorderSizePixel = 0;
	v16.BackgroundColor3 = v10.ChatBarBoxColor;
	v16.Size = UDim2.new(1, -14, 1, -14);
	v16.Position = UDim2.new(0, 7, 0, 7);
	v16.Parent = v15;
	local v17 = Instance.new("Frame");
	v17.BackgroundTransparency = 1;
	v17.Size = UDim2.new(1, -10, 1, -10);
	v17.Position = UDim2.new(0, 5, 0, 5);
	v17.Parent = v16;
	local v18 = Instance.new("TextBox");
	v18.Selectable = v10.GamepadNavigationEnabled;
	v18.Name = "ChatBar";
	v18.BackgroundTransparency = 1;
	v18.Size = UDim2.new(1, 0, 1, 0);
	v18.Position = UDim2.new(0, 0, 0, 0);
	v18.TextSize = v10.ChatBarTextSize;
	v18.Font = v10.ChatBarFont;
	v18.TextColor3 = v10.ChatBarTextColor;
	v18.TextTransparency = 0.4;
	v18.TextStrokeTransparency = 1;
	v18.ClearTextOnFocus = false;
	v18.TextXAlignment = Enum.TextXAlignment.Left;
	v18.TextYAlignment = Enum.TextYAlignment.Top;
	v18.TextWrapped = true;
	v18.Text = "";
	v18.Parent = v17;
	local v19 = Instance.new("TextButton");
	v19.Selectable = false;
	v19.Name = "MessageMode";
	v19.BackgroundTransparency = 1;
	v19.Position = UDim2.new(0, 0, 0, 0);
	v19.TextSize = v10.ChatBarTextSize;
	v19.Font = v10.ChatBarFont;
	v19.TextXAlignment = Enum.TextXAlignment.Left;
	v19.TextWrapped = true;
	v19.Text = "";
	v19.Size = UDim2.new(0, 0, 0, 0);
	v19.TextYAlignment = Enum.TextYAlignment.Center;
	v19.TextColor3 = p4:GetDefaultChannelNameColor();
	v19.Visible = true;
	v19.Parent = v17;
	local v20 = Instance.new("TextLabel");
	v20.Selectable = false;
	v20.TextWrapped = true;
	v20.BackgroundTransparency = 1;
	v20.Size = v18.Size;
	v20.Position = v18.Position;
	v20.TextSize = v18.TextSize;
	v20.Font = v18.Font;
	v20.TextColor3 = v18.TextColor3;
	v20.TextTransparency = v18.TextTransparency;
	v20.TextStrokeTransparency = v18.TextStrokeTransparency;
	v20.TextXAlignment = v18.TextXAlignment;
	v20.TextYAlignment = v18.TextYAlignment;
	v20.Text = "...";
	v20.Parent = v17;
	p4.GuiObject = v15;
	p4.TextBox = v18;
	p4.TextLabel = v20;
	p4.GuiObjects.BaseFrame = v15;
	p4.GuiObjects.TextBoxFrame = v16;
	p4.GuiObjects.TextBox = v18;
	p4.GuiObjects.TextLabel = v20;
	p4.GuiObjects.MessageModeTextButton = v19;
	p4:AnimGuiObjects();
	p4:SetUpTextBoxEvents(v18, v20, v19);
	if p4.UserHasChatOff then
		p4:DoLockChatBar();
	end;
	p4.eGuiObjectsChanged:Fire();
end;
function v14.DoLockChatBar(p6)
	if p6.TextLabel then
		if v6.UserId > 0 then
			p6.TextLabel.Text = u1:Get("GameChat_ChatMessageValidator_SettingsError", "To chat in game, turn on chat in your Privacy Settings.");
		else
			p6.TextLabel.Text = u1:Get("GameChat_SwallowGuestChat_Message", "Sign up to chat in game.");
		end;
		p6:CalculateSize();
	end;
	if p6.TextBox then
		p6.TextBox.Active = false;
		p6.TextBox.Focused:connect(function()
			p6.TextBox:ReleaseFocus();
		end);
	end;
end;
function v14.SetUpTextBoxEvents(p7, p8, p9, p10)
	for v21, v22 in pairs(p7.TextBoxConnections) do
		v22:disconnect();
		p7.TextBoxConnections[v21] = nil;
	end;
	p7.TextBoxConnections.UserInputBegan = l__UserInputService__2.InputBegan:connect(function(p11, p12)
		if p11.KeyCode == Enum.KeyCode.Backspace and p7:IsFocused() and p8.Text == "" then
			p7:SetChannelTarget(v10.GeneralChannelName);
		end;
	end);
	p7.TextBoxConnections.TextBoxChanged = p8.Changed:connect(function(p13)
		local v23 = nil;
		if p13 == "AbsoluteSize" then
			p7:CalculateSize();
			return;
		end;
		if p13 ~= "Text" then
			return;
		end;
		p7:CalculateSize();
		if v10.MaximumMessageLength < utf8.len(utf8.nfcnormalize(p8.Text)) then
			p8.Text = p7.PreviousText;
		else
			p7.PreviousText = p8.Text;
		end;
		if not p7.InCustomState then
			v23 = p7.CommandProcessor:ProcessInProgressChatMessage(p8.Text, p7.ChatWindow, p7);
			if not v23 then
				return;
			end;
		else
			p7.CustomState:TextUpdated();
			return;
		end;
		p7.InCustomState = true;
		p7.CustomState = v23;
	end);
	p7.TextBoxConnections.MessageModeClick = p10.MouseButton1Click:connect(function()
		if p10.Text ~= "" then
			p7:SetChannelTarget(v10.GeneralChannelName);
		end;
	end);
	local function u2(p14)
		if not p14 and p8.Text == "" then
			p9.Visible = true;
			return;
		end;
		p9.Visible = false;
	end;
	p7.TextBoxConnections.TextBoxFocused = p8.Focused:connect(function()
		if not p7.UserHasChatOff then
			p7:CalculateSize();
			u2(true);
		end;
	end);
	p7.TextBoxConnections.TextBoxFocusLost = p8.FocusLost:connect(function(p15, p16)
		p7:CalculateSize();
		if p16 and p16.KeyCode == Enum.KeyCode.Escape then
			p8.Text = "";
		end;
		u2(false);
	end);
end;
function v14.GetTextBox(p17)
	return p17.TextBox;
end;
function v14.GetMessageModeTextButton(p18)
	return p18.GuiObjects.MessageModeTextButton;
end;
function v14.GetMessageModeTextLabel(p19)
	return p19:GetMessageModeTextButton();
end;
function v14.IsFocused(p20)
	if p20.UserHasChatOff then
		return false;
	end;
	return p20:GetTextBox():IsFocused();
end;
function v14.GetVisible(p21)
	return p21.GuiObject.Visible;
end;
function v14.CaptureFocus(p22)
	if not p22.UserHasChatOff then
		p22:GetTextBox():CaptureFocus();
	end;
end;
function v14.ReleaseFocus(p23, p24)
	p23:GetTextBox():ReleaseFocus(p24);
end;
function v14.ResetText(p25)
	p25:GetTextBox().Text = "";
end;
function v14.SetText(p26, p27)
	p26:GetTextBox().Text = p27;
end;
function v14.GetEnabled(p28)
	return p28.GuiObject.Visible;
end;
function v14.SetEnabled(p29, p30)
	if p29.UserHasChatOff then
		p29.GuiObject.Visible = true;
		return;
	end;
	p29.GuiObject.Visible = p30;
end;
function v14.SetTextLabelText(p31, p32)
	if not p31.UserHasChatOff then
		p31.TextLabel.Text = p32;
	end;
end;
function v14.SetTextBoxText(p33, p34)
	p33.TextBox.Text = p34;
end;
function v14.GetTextBoxText(p35)
	return p35.TextBox.Text;
end;
function v14.ResetSize(p36)
	p36.TargetYSize = 0;
	p36:TweenToTargetYSize();
end;
local function u3(p37)
	return l__TextService__5:GetTextSize(p37.Text, p37.TextSize, p37.Font, Vector2.new(p37.AbsoluteSize.X, 10000));
end;
function v14.CalculateSize(p38)
	if p38.CalculatingSizeLock then
		return;
	end;
	p38.CalculatingSizeLock = true;
	if p38:IsFocused() or p38.TextBox.Text ~= "" then
		local v24 = p38.TextBox.TextSize;
		local v25 = u3(p38.TextBox).Y;
	else
		v24 = p38.TextLabel.TextSize;
		v25 = u3(p38.TextLabel).Y;
	end;
	local v26 = v25 - v24;
	if p38.TargetYSize ~= v26 then
		p38.TargetYSize = v26;
		p38:TweenToTargetYSize();
	end;
	p38.CalculatingSizeLock = false;
end;
function v14.TweenToTargetYSize(p39)
	local v27 = UDim2.new(1, 0, 1, p39.TargetYSize);
	p39.GuiObject.Size = v27;
	p39.GuiObject.Size = p39.GuiObject.Size;
	local u4 = math.min(1, math.abs(p39.GuiObject.AbsoluteSize.Y - p39.GuiObject.AbsoluteSize.Y) * (1 / p39.TweenPixelsPerSecond));
	if not pcall(function()
		p39.GuiObject:TweenSize(v27, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, u4, true);
	end) then
		p39.GuiObject.Size = v27;
	end;
end;
function v14.SetTextSize(p40, p41)
	if not p40:IsInCustomState() then
		if p40.TextBox then
			p40.TextBox.TextSize = p41;
		end;
		if p40.TextLabel then
			p40.TextLabel.TextSize = p41;
		end;
	end;
end;
function v14.GetDefaultChannelNameColor(p42)
	if not v10.DefaultChannelNameColor then
		return Color3.fromRGB(35, 76, 142);
	end;
	return v10.DefaultChannelNameColor;
end;
function v14.SetChannelTarget(p43, p44)
	local l__MessageModeTextButton__28 = p43.GuiObjects.MessageModeTextButton;
	local l__TextBox__29 = p43.TextBox;
	local l__TextLabel__30 = p43.TextLabel;
	p43.TargetChannel = p44;
	if not p43:IsInCustomState() then
		if p44 == v10.GeneralChannelName then
			l__MessageModeTextButton__28.Text = "";
			l__MessageModeTextButton__28.Size = UDim2.new(0, 0, 0, 0);
			l__TextBox__29.Size = UDim2.new(1, 0, 1, 0);
			l__TextBox__29.Position = UDim2.new(0, 0, 0, 0);
			l__TextLabel__30.Size = UDim2.new(1, 0, 1, 0);
			l__TextLabel__30.Position = UDim2.new(0, 0, 0, 0);
			return;
		end;
	else
		return;
	end;
	l__MessageModeTextButton__28.Size = UDim2.new(0, 1000, 1, 0);
	local v31 = p44;
	if u1.tryLocalize then
		v31 = u1:tryLocalize(p44);
	end;
	l__MessageModeTextButton__28.Text = string.format("[%s] ", v31);
	local v32 = p43:GetChannelNameColor(p44);
	if v32 then
		l__MessageModeTextButton__28.TextColor3 = v32;
	else
		l__MessageModeTextButton__28.TextColor3 = p43:GetDefaultChannelNameColor();
	end;
	local l__X__33 = l__MessageModeTextButton__28.TextBounds.X;
	l__MessageModeTextButton__28.Size = UDim2.new(0, l__X__33, 1, 0);
	l__TextBox__29.Size = UDim2.new(1, -l__X__33, 1, 0);
	l__TextBox__29.Position = UDim2.new(0, l__X__33, 0, 0);
	l__TextLabel__30.Size = UDim2.new(1, -l__X__33, 1, 0);
	l__TextLabel__30.Position = UDim2.new(0, l__X__33, 0, 0);
end;
function v14.IsInCustomState(p45)
	return p45.InCustomState;
end;
function v14.ResetCustomState(p46)
	if p46.InCustomState then
		p46.CustomState:Destroy();
		p46.CustomState = nil;
		p46.InCustomState = false;
		p46.ChatBarParentFrame:ClearAllChildren();
		p46:CreateGuiObjects(p46.ChatBarParentFrame);
		p46:SetTextLabelText(u1:Get("GameChat_ChatMain_ChatBarText", "To chat click here or press \"/\" key"));
	end;
end;
function v14.EnterWhisperState(p47, p48)
	p47:ResetCustomState();
	if v12.CustomStateCreator then
		p47.CustomState = v12.CustomStateCreator(p48, p47.ChatWindow, p47, v10);
		p47.InCustomState = true;
	else
		if v10.PlayerDisplayNamesEnabled then
			local v34 = p48.DisplayName;
		else
			v34 = p48.Name;
		end;
		p47:SetText("/w " .. v34);
	end;
	p47:CaptureFocus();
end;
function v14.GetCustomMessage(p49)
	if not p49.InCustomState then
		return nil;
	end;
	return p49.CustomState:GetMessage();
end;
function v14.CustomStateProcessCompletedMessage(p50, p51)
	if not p50.InCustomState then
		return false;
	end;
	return p50.CustomState:ProcessCompletedMessage();
end;
function v14.FadeOutBackground(p52, p53)
	p52.AnimParams.Background_TargetTransparency = 1;
	p52.AnimParams.Background_NormalizedExptValue = v11:NormalizedDefaultExptValueInSeconds(p53);
	p52:FadeOutText(p53);
end;
function v14.FadeInBackground(p54, p55)
	p54.AnimParams.Background_TargetTransparency = 0.6;
	p54.AnimParams.Background_NormalizedExptValue = v11:NormalizedDefaultExptValueInSeconds(p55);
	p54:FadeInText(p55);
end;
function v14.FadeOutText(p56, p57)
	p56.AnimParams.Text_TargetTransparency = 1;
	p56.AnimParams.Text_NormalizedExptValue = v11:NormalizedDefaultExptValueInSeconds(p57);
end;
function v14.FadeInText(p58, p59)
	p58.AnimParams.Text_TargetTransparency = 0.4;
	p58.AnimParams.Text_NormalizedExptValue = v11:NormalizedDefaultExptValueInSeconds(p59);
end;
function v14.AnimGuiObjects(p60)
	p60.GuiObject.BackgroundTransparency = p60.AnimParams.Background_CurrentTransparency;
	p60.GuiObjects.TextBoxFrame.BackgroundTransparency = p60.AnimParams.Background_CurrentTransparency;
	p60.GuiObjects.TextLabel.TextTransparency = p60.AnimParams.Text_CurrentTransparency;
	p60.GuiObjects.TextBox.TextTransparency = p60.AnimParams.Text_CurrentTransparency;
	p60.GuiObjects.MessageModeTextButton.TextTransparency = p60.AnimParams.Text_CurrentTransparency;
end;
function v14.InitializeAnimParams(p61)
	p61.AnimParams.Text_TargetTransparency = 0.4;
	p61.AnimParams.Text_CurrentTransparency = 0.4;
	p61.AnimParams.Text_NormalizedExptValue = 1;
	p61.AnimParams.Background_TargetTransparency = 0.6;
	p61.AnimParams.Background_CurrentTransparency = 0.6;
	p61.AnimParams.Background_NormalizedExptValue = 1;
end;
function v14.Update(p62, p63)
	p62.AnimParams.Text_CurrentTransparency = v11:Expt(p62.AnimParams.Text_CurrentTransparency, p62.AnimParams.Text_TargetTransparency, p62.AnimParams.Text_NormalizedExptValue, p63);
	p62.AnimParams.Background_CurrentTransparency = v11:Expt(p62.AnimParams.Background_CurrentTransparency, p62.AnimParams.Background_TargetTransparency, p62.AnimParams.Background_NormalizedExptValue, p63);
	p62:AnimGuiObjects();
end;
function v14.SetChannelNameColor(p64, p65, p66)
	p64.ChannelNameColors[p65] = p66;
	if p64.GuiObjects.MessageModeTextButton.Text == p65 then
		p64.GuiObjects.MessageModeTextButton.TextColor3 = p66;
	end;
end;
function v14.GetChannelNameColor(p67, p68)
	return p67.ChannelNameColors[p68];
end;
function v1.new(p69, p70)
	local v35 = setmetatable({}, v14);
	v35.GuiObject = nil;
	v35.ChatBarParentFrame = nil;
	v35.TextBox = nil;
	v35.TextLabel = nil;
	v35.GuiObjects = {};
	v35.eGuiObjectsChanged = Instance.new("BindableEvent");
	v35.GuiObjectsChanged = v35.eGuiObjectsChanged.Event;
	v35.TextBoxConnections = {};
	v35.PreviousText = "";
	v35.InCustomState = false;
	v35.CustomState = nil;
	v35.TargetChannel = nil;
	v35.CommandProcessor = p69;
	v35.ChatWindow = p70;
	v35.TweenPixelsPerSecond = 500;
	v35.TargetYSize = 0;
	v35.AnimParams = {};
	v35.CalculatingSizeLock = false;
	v35.ChannelNameColors = {};
	v35.UserHasChatOff = false;
	v35:InitializeAnimParams();
	v10.SettingsChanged:connect(function(p71, p72)
		if p71 == "ChatBarTextSize" then
			v35:SetTextSize(p72);
		end;
	end);
	coroutine.wrap(function()
		local v36, v37 = pcall(function()
			return l__Chat__7:CanUserChatAsync(v6.UserId);
		end);
		if (v36 and (l__RunService__3:IsStudio() and v37)) == false then
			v35.UserHasChatOff = true;
			v35:DoLockChatBar();
		end;
	end)();
	return v35;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX70"><Properties><string name="Name">MessageLabelCreator</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local l__Chat__2 = game:GetService("Chat");
local l__ClientChatModules__3 = l__Chat__2:WaitForChild("ClientChatModules");
local l__MessageCreatorModules__4 = l__ClientChatModules__3:WaitForChild("MessageCreatorModules");
local l__Parent__5 = script.Parent;
local v6 = require(l__ClientChatModules__3:WaitForChild("ChatSettings"));
local v7 = require(l__Parent__5:WaitForChild("MessageSender"));
local v8 = {};
v8.__index = v8;
function mergeProps(p1, p2)
	if not p1 then
		return;
	end;
	local v9, v10, v11 = pairs(p1);
	while true do
		local v12, v13 = v9(v10, v11);
		if v12 then

		else
			break;
		end;
		v11 = v12;
		p2[v12] = v13;	
	end;
end;
function ReturnToObjectPoolRecursive(p3, p4)
	local v14 = p3:GetChildren();
	local v15 = #v14;
	local v16 = 1 - 1;
	while true do
		ReturnToObjectPoolRecursive(v14[v16], p4);
		if 0 <= 1 then
			if v16 < v15 then

			else
				break;
			end;
		elseif v15 < v16 then

		else
			break;
		end;
		v16 = v16 + 1;	
	end;
	p3.Parent = nil;
	p4:ReturnInstance(p3);
end;
local u1 = require(l__MessageCreatorModules__4:WaitForChild("Util"));
function GetMessageCreators()
	local v17 = {};
	local v18 = l__MessageCreatorModules__4:GetChildren();
	local v19 = #v18;
	local v20 = 1 - 1;
	while true do
		if v18[v20]:IsA("ModuleScript") then
			if v18[v20].Name ~= "Util" then
				local v21 = require(v18[v20]);
				v17[v21[u1.KEY_MESSAGE_TYPE]] = v21[u1.KEY_CREATOR_FUNCTION];
			end;
		end;
		if 0 <= 1 then
			if v20 < v19 then

			else
				break;
			end;
		elseif v19 < v20 then

		else
			break;
		end;
		v20 = v20 + 1;	
	end;
	return v17;
end;
function v8.WrapIntoMessageObject(p5, p6, p7)
	local v22 = nil;
	if u1.KEY_BASE_MESSAGE then
		v22 = p7[u1.KEY_BASE_MESSAGE];
	end;
	return {
		ID = p6.ID, 
		BaseFrame = p7[u1.KEY_BASE_FRAME], 
		BaseMessage = v22, 
		UpdateTextFunction = p7[u1.KEY_UPDATE_TEXT_FUNC] or function()
			warn("NO MESSAGE RESIZE FUNCTION");
		end, 
		GetHeightFunction = p7[u1.KEY_GET_HEIGHT], 
		FadeInFunction = p7[u1.KEY_FADE_IN], 
		FadeOutFunction = p7[u1.KEY_FADE_OUT], 
		UpdateAnimFunction = p7[u1.KEY_UPDATE_ANIMATION], 
		ObjectPool = p5.ObjectPool, 
		Destroyed = false, 
		Destroy = function(p8)
			ReturnToObjectPoolRecursive(p8.BaseFrame, p8.ObjectPool);
			p8.Destroyed = true;
		end
	};
end;
function v8.CreateMessageLabel(p9, p10, p11)
	local v23 = nil;
	p10.Channel = p11;
	local u2 = nil;
	pcall(function()
		u2 = l__Chat__2:InvokeChatCallback(Enum.ChatCallbackType.OnClientFormattingMessage, p10);
	end);
	p10.ExtraData = p10.ExtraData or {};
	mergeProps(u2, p10.ExtraData);
	local l__MessageType__24 = p10.MessageType;
	if p9.MessageCreators[l__MessageType__24] then
		local v25 = p9.MessageCreators[l__MessageType__24](p10, p11);
		if v25 then
			return p9:WrapIntoMessageObject(p10, v25);
		else
			return;
		end;
	elseif p9.DefaultCreatorType then
		v23 = p9.MessageCreators[p9.DefaultCreatorType](p10, p11);
		if not v23 then
			return;
		end;
	else
		error("No message creator available for message type: " .. l__MessageType__24);
		return;
	end;
	return p9:WrapIntoMessageObject(p10, v23);
end;
local u3 = require(l__Parent__5:WaitForChild("ObjectPool"));
function v1.new()
	local v26 = setmetatable({}, v8);
	v26.ObjectPool = u3.new(50);
	v26.MessageCreators = GetMessageCreators();
	v26.DefaultCreatorType = u1.DEFAULT_MESSAGE_CREATOR;
	u1:RegisterObjectPool(v26.ObjectPool);
	return v26;
end;
function v1.GetStringTextBounds(p12, p13, p14, p15, p16)
	return u1:GetStringTextBounds(p13, p14, p15, p16);
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX77"><Properties><string name="Name">ObjectPool</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = {};
v2.__index = v2;
function v2.GetInstance(p1, p2)
	if p1.InstancePoolsByClass[p2] == nil then
		p1.InstancePoolsByClass[p2] = {};
	end;
	local v3 = #p1.InstancePoolsByClass[p2];
	if not (v3 > 0) then
		return Instance.new(p2);
	end;
	table.remove(p1.InstancePoolsByClass[p2]);
	return p1.InstancePoolsByClass[p2][v3];
end;
function v2.ReturnInstance(p3, p4)
	if p3.InstancePoolsByClass[p4.ClassName] == nil then
		p3.InstancePoolsByClass[p4.ClassName] = {};
	end;
	if not (#p3.InstancePoolsByClass[p4.ClassName] < p3.PoolSizePerType) then
		p4:Destroy();
		return;
	end;
	table.insert(p3.InstancePoolsByClass[p4.ClassName], p4);
end;
function v1.new(p5)
	local v4 = setmetatable({}, v2);
	v4.InstancePoolsByClass = {};
	v4.Name = "ObjectPool";
	v4.PoolSizePerType = p5;
	return v4;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX84"><Properties><string name="Name">MessageSender</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local l__Parent__2 = script.Parent;
local v3 = {};
v3.__index = v3;
function v3.SendMessage(p1, p2, p3)
	p1.SayMessageRequest:FireServer(p2, p3);
end;
function v3.RegisterSayMessageFunction(p4, p5)
	p4.SayMessageRequest = p5;
end;
function v1.new()
	local v4 = setmetatable({}, v3);
	v4.SayMessageRequest = nil;
	return v4;
end;
return v1.new();
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX91"><Properties><string name="Name">CurveUtil</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local u1 = {
	Expt = function(p1, p2, p3, p4, p5)
		if math.abs(p3 - p2) < 0.01 then
			return p3;
		end;
		return p2 + (p3 - p2) * u1:Expty(p2, p3, p4, p5);
	end, 
	Expty = function(p6, p7, p8, p9, p10)
		return 1 - math.exp(-(-math.log(1 - p9)) * p10);
	end, 
	Sign = function(p11, p12)
		if p12 > 0 then
			return 1;
		end;
		if p12 < 0 then
			return -1;
		end;
		return 0;
	end, 
	BezierValForT = function(p13, p14, p15, p16, p17, p18)
		return (1 - p18) * (1 - p18) * (1 - p18) * p14 + 3 * p18 * (1 - p18) * (1 - p18) * p15 + 3 * p18 * p18 * (1 - p18) * p16 + p18 * p18 * p18 * p17;
	end, 
	_BezierPt2ForT = {
		x = 0, 
		y = 0
	}, 
	BezierPt2ForT = function(p19, p20, p21, p22, p23, p24, p25, p26, p27, p28)
		u1._BezierPt2ForT.x = u1:BezierValForT(p20, p22, p24, p26, p28);
		u1._BezierPt2ForT.y = u1:BezierValForT(p21, p23, p25, p27, p28);
		return u1._BezierPt2ForT;
	end, 
	YForPointOf2PtLine = function(p29, p30, p31, p32)
		local v1 = (p30.y - p31.y) / (p30.x - p31.x);
		return v1 * p32 + (p30.y - v1 * p30.x);
	end, 
	DeltaTimeToTimescale = function(p33, p34)
		return p34 / 0.016666666666666666;
	end, 
	SecondsToTick = function(p35, p36)
		return 0.016666666666666666 / p36;
	end, 
	ExptValueInSeconds = function(p37, p38, p39, p40)
		return 1 - math.pow(p38 / p39, 1 / (60 * p40));
	end, 
	NormalizedDefaultExptValueInSeconds = function(p41, p42)
		return p41:ExptValueInSeconds(0.01, 1, p42);
	end
};
return u1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX98"><Properties><string name="Name">CommandProcessor</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = {};
v2.__index = v2;
local l__ClientChatModules__3 = game:GetService("Chat"):WaitForChild("ClientChatModules");
local l__CommandModules__4 = l__ClientChatModules__3:WaitForChild("CommandModules");
local l__Parent__5 = script.Parent;
local u1 = require(l__CommandModules__4:WaitForChild("Util"));
function v2.SetupCommandProcessors(p1)
	local v6 = l__CommandModules__4:GetChildren();
	for v7 = 1, #v6 do
		if v6[v7]:IsA("ModuleScript") and v6[v7].Name ~= "Util" then
			local v8 = nil;
			local v9 = require(v6[v7]);
			local v10 = v9[u1.KEY_COMMAND_PROCESSOR_TYPE];
			v8 = v9[u1.KEY_PROCESSOR_FUNCTION];
			if v10 == u1.IN_PROGRESS_MESSAGE_PROCESSOR then
				table.insert(p1.InProgressMessageProcessors, v8);
			elseif v10 == u1.COMPLETED_MESSAGE_PROCESSOR then
				table.insert(p1.CompletedMessageProcessors, v8);
			end;
		end;
	end;
end;
local u2 = require(l__ClientChatModules__3:WaitForChild("ChatSettings"));
function v2.ProcessCompletedChatMessage(p2, p3, p4)
	for v11 = 1, #p2.CompletedMessageProcessors do
		if p2.CompletedMessageProcessors[v11](p3, p4, u2) then
			return true;
		end;
	end;
	return false;
end;
function v2.ProcessInProgressChatMessage(p5, p6, p7, p8)
	for v12 = 1, #p5.InProgressMessageProcessors do
		local v13 = p5.InProgressMessageProcessors[v12](p6, p7, p8, u2);
		if v13 then
			return v13;
		end;
	end;
	return nil;
end;
function v1.new()
	local v14 = setmetatable({}, v2);
	v14.CompletedMessageProcessors = {};
	v14.InProgressMessageProcessors = {};
	v14:SetupCommandProcessors();
	return v14;
end;
return v1;
]]></ProtectedString></Properties></Item></Item></Item><Item class="ModuleScript" referent="RBX107"><Properties><string name="Name">PlayerModule</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
function v1.new()
	local v2 = setmetatable({}, v1);
	v2.cameras = require(script:WaitForChild("CameraModule"));
	v2.controls = require(script:WaitForChild("ControlModule"));
	return v2;
end;
function v1.GetCameras(p1)
	return p1.cameras;
end;
function v1.GetControls(p2)
	return p2.controls;
end;
function v1.GetClickToMoveController(p3)
	return p3.controls:GetClickToMoveController();
end;
return v1.new();
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX113"><Properties><string name="Name">CameraModule</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local v2, v3 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserRemoveTheCameraApi");
end);
local l__Players__4 = game:GetService("Players");
local l__RunService__5 = game:GetService("RunService");
local l__UserInputService__6 = game:GetService("UserInputService");
local l__UserGameSettings__7 = UserSettings():GetService("UserGameSettings");
local v8 = require(script:WaitForChild("CameraUtils"));
local v9 = require(script:WaitForChild("CameraInput"));
local v10 = require(script:WaitForChild("ClassicCamera"));
local v11 = require(script:WaitForChild("OrbitalCamera"));
local v12 = require(script:WaitForChild("LegacyCamera"));
local v13 = require(script:WaitForChild("VehicleCamera"));
local v14 = require(script:WaitForChild("Invisicam"));
local v15 = require(script:WaitForChild("Poppercam"));
local v16 = require(script:WaitForChild("TransparencyController"));
local v17 = require(script:WaitForChild("MouseLockController"));
local l__PlayerScripts__18 = l__Players__4.LocalPlayer:WaitForChild("PlayerScripts");
l__PlayerScripts__18:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Default);
l__PlayerScripts__18:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Follow);
l__PlayerScripts__18:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Classic);
l__PlayerScripts__18:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Default);
l__PlayerScripts__18:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Follow);
l__PlayerScripts__18:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Classic);
l__PlayerScripts__18:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.CameraToggle);
local u1 = { "CameraMinZoomDistance", "CameraMaxZoomDistance", "CameraMode", "DevCameraOcclusionMode", "DevComputerCameraMode", "DevTouchCameraMode", "DevComputerMovementMode", "DevTouchMovementMode", "DevEnableMouseLock" };
local u2 = { "ComputerCameraMovementMode", "ComputerMovementMode", "ControlMode", "GamepadCameraSensitivity", "MouseSensitivity", "RotationType", "TouchCameraMovementMode", "TouchMovementMode" };
function v1.new()
	local v19 = setmetatable({}, v1);
	v19.activeCameraController = nil;
	v19.activeOcclusionModule = nil;
	v19.activeTransparencyController = nil;
	v19.activeMouseLockController = nil;
	v19.currentComputerCameraMovementMode = nil;
	v19.cameraSubjectChangedConn = nil;
	v19.cameraTypeChangedConn = nil;
	for v20, v21 in pairs(l__Players__4:GetPlayers()) do
		v19:OnPlayerAdded(v21);
	end;
	l__Players__4.PlayerAdded:Connect(function(p1)
		v19:OnPlayerAdded(p1);
	end);
	v19.activeTransparencyController = v16.new();
	v19.activeTransparencyController:Enable(true);
	if not l__UserInputService__6.TouchEnabled then
		v19.activeMouseLockController = v17.new();
		local v22 = v19.activeMouseLockController:GetBindableToggleEvent();
		if v22 then
			v22:Connect(function()
				v19:OnMouseLockToggled();
			end);
		end;
	end;
	v19:ActivateCameraController(v19:GetCameraControlChoice());
	v19:ActivateOcclusionModule(l__Players__4.LocalPlayer.DevCameraOcclusionMode);
	v19:OnCurrentCameraChanged();
	l__RunService__5:BindToRenderStep("cameraRenderUpdate", Enum.RenderPriority.Camera.Value, function(p2)
		v19:Update(p2);
	end);
	for v23, v24 in pairs(u1) do
		l__Players__4.LocalPlayer:GetPropertyChangedSignal(v24):Connect(function()
			v19:OnLocalPlayerCameraPropertyChanged(v24);
		end);
	end;
	for v25, v26 in pairs(u2) do
		l__UserGameSettings__7:GetPropertyChangedSignal(v26):Connect(function()
			v19:OnUserGameSettingsPropertyChanged(v26);
		end);
	end;
	game.Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		v19:OnCurrentCameraChanged();
	end);
	v19.lastInputType = l__UserInputService__6:GetLastInputType();
	l__UserInputService__6.LastInputTypeChanged:Connect(function(p3)
		v19.lastInputType = p3;
	end);
	return v19;
end;
function v1.GetCameraMovementModeFromSettings(p4)
	if l__Players__4.LocalPlayer.CameraMode == Enum.CameraMode.LockFirstPerson then
		return v8.ConvertCameraModeEnumToStandard(Enum.ComputerCameraMovementMode.Classic);
	end;
	if l__UserInputService__6.TouchEnabled then
		local v27 = v8.ConvertCameraModeEnumToStandard(l__Players__4.LocalPlayer.DevTouchCameraMode);
		local v28 = v8.ConvertCameraModeEnumToStandard(l__UserGameSettings__7.TouchCameraMovementMode);
	else
		v27 = v8.ConvertCameraModeEnumToStandard(l__Players__4.LocalPlayer.DevComputerCameraMode);
		v28 = v8.ConvertCameraModeEnumToStandard(l__UserGameSettings__7.ComputerCameraMovementMode);
	end;
	if v27 == Enum.DevComputerCameraMovementMode.UserChoice then
		return v28;
	end;
	return v27;
end;
local u3 = {};
function v1.ActivateOcclusionModule(p5, p6)
	if p6 == Enum.DevCameraOcclusionMode.Zoom then
		local v29 = v15;
	else
		if p6 ~= Enum.DevCameraOcclusionMode.Invisicam then
			warn("CameraScript ActivateOcclusionModule called with unsupported mode");
			return;
		end;
		v29 = v14;
	end;
	p5.occlusionMode = p6;
	if p5.activeOcclusionModule and p5.activeOcclusionModule:GetOcclusionMode() == p6 then
		if not p5.activeOcclusionModule:GetEnabled() then
			p5.activeOcclusionModule:Enable(true);
		end;
		return;
	end;
	local l__activeOcclusionModule__30 = p5.activeOcclusionModule;
	p5.activeOcclusionModule = u3[v29];
	if not p5.activeOcclusionModule then
		p5.activeOcclusionModule = v29.new();
		if p5.activeOcclusionModule then
			u3[v29] = p5.activeOcclusionModule;
		end;
	end;
	if p5.activeOcclusionModule then
		if p5.activeOcclusionModule:GetOcclusionMode() ~= p6 then
			warn("CameraScript ActivateOcclusionModule mismatch: ", p5.activeOcclusionModule:GetOcclusionMode(), "~=", p6);
		end;
		if l__activeOcclusionModule__30 then
			if l__activeOcclusionModule__30 ~= p5.activeOcclusionModule then
				l__activeOcclusionModule__30:Enable(false);
			else
				warn("CameraScript ActivateOcclusionModule failure to detect already running correct module");
			end;
		end;
		if p6 == Enum.DevCameraOcclusionMode.Invisicam then
			if l__Players__4.LocalPlayer.Character then
				p5.activeOcclusionModule:CharacterAdded(l__Players__4.LocalPlayer.Character, l__Players__4.LocalPlayer);
			end;
		else
			for v31, v32 in pairs(l__Players__4:GetPlayers()) do
				if v32 and v32.Character then
					p5.activeOcclusionModule:CharacterAdded(v32.Character, v32);
				end;
			end;
			p5.activeOcclusionModule:OnCameraSubjectChanged(game.Workspace.CurrentCamera.CameraSubject);
		end;
		p5.activeOcclusionModule:Enable(true);
	end;
end;
function v1.ShouldUseVehicleCamera(p7)
	local l__CurrentCamera__33 = workspace.CurrentCamera;
	if not l__CurrentCamera__33 then
		return false;
	end;
	local l__CameraType__34 = l__CurrentCamera__33.CameraType;
	local l__CameraSubject__35 = l__CurrentCamera__33.CameraSubject;
	local v36 = true;
	if l__CameraType__34 ~= Enum.CameraType.Custom then
		v36 = l__CameraType__34 == Enum.CameraType.Follow;
	end;
	return (l__CameraSubject__35 and l__CameraSubject__35:IsA("VehicleSeat") or false) and (v36 and p7.occlusionMode ~= Enum.DevCameraOcclusionMode.Invisicam);
end;
local u4 = {};
function v1.ActivateCameraController(p8, p9, p10)
	local v37 = nil;
	if p10 ~= nil then
		if p10 == Enum.CameraType.Scriptable then
			if p8.activeCameraController then
				p8.activeCameraController:Enable(false);
				p8.activeCameraController = nil;
				return;
			end;
		elseif p10 == Enum.CameraType.Custom then
			p9 = p8:GetCameraMovementModeFromSettings();
		elseif p10 == Enum.CameraType.Track then
			p9 = Enum.ComputerCameraMovementMode.Classic;
		elseif p10 == Enum.CameraType.Follow then
			p9 = Enum.ComputerCameraMovementMode.Follow;
		elseif p10 == Enum.CameraType.Orbital then
			p9 = Enum.ComputerCameraMovementMode.Orbital;
		elseif p10 == Enum.CameraType.Attach or p10 == Enum.CameraType.Watch or p10 == Enum.CameraType.Fixed then
			v37 = v12;
		else
			warn("CameraScript encountered an unhandled Camera.CameraType value: ", p10);
		end;
	end;
	if not v37 then
		if p9 == Enum.ComputerCameraMovementMode.Classic or p9 == Enum.ComputerCameraMovementMode.Follow or p9 == Enum.ComputerCameraMovementMode.Default or p9 == Enum.ComputerCameraMovementMode.CameraToggle then
			v37 = v10;
		else
			if p9 ~= Enum.ComputerCameraMovementMode.Orbital then
				warn("ActivateCameraController did not select a module.");
				return;
			end;
			v37 = v11;
		end;
	end;
	if p8:ShouldUseVehicleCamera() then
		v37 = v13;
	end;
	if not u4[v37] then
		local v38 = v37.new();
		u4[v37] = v38;
	else
		v38 = u4[v37];
		if v38.Reset then
			v38:Reset();
		end;
	end;
	if p8.activeCameraController then
		if p8.activeCameraController ~= v38 then
			p8.activeCameraController:Enable(false);
			p8.activeCameraController = v38;
			p8.activeCameraController:Enable(true);
		elseif not p8.activeCameraController:GetEnabled() then
			p8.activeCameraController:Enable(true);
		end;
	elseif v38 ~= nil then
		p8.activeCameraController = v38;
		p8.activeCameraController:Enable(true);
	end;
	if p8.activeCameraController then
		if p9 == nil then
			if p10 ~= nil then
				p8.activeCameraController:SetCameraType(p10);
			end;
			return;
		end;
	else
		return;
	end;
	p8.activeCameraController:SetCameraMovementMode(p9);
end;
function v1.OnCameraSubjectChanged(p11)
	local l__CurrentCamera__39 = workspace.CurrentCamera;
	local v40 = l__CurrentCamera__39 and l__CurrentCamera__39.CameraSubject;
	if p11.activeTransparencyController then
		p11.activeTransparencyController:SetSubject(v40);
	end;
	if p11.activeOcclusionModule then
		p11.activeOcclusionModule:OnCameraSubjectChanged(v40);
	end;
	p11:ActivateCameraController(nil, l__CurrentCamera__39.CameraType);
end;
function v1.OnCameraTypeChanged(p12, p13)
	if p13 == Enum.CameraType.Scriptable and l__UserInputService__6.MouseBehavior == Enum.MouseBehavior.LockCenter then
		l__UserInputService__6.MouseBehavior = Enum.MouseBehavior.Default;
	end;
	p12:ActivateCameraController(nil, p13);
end;
function v1.OnCurrentCameraChanged(p14)
	local l__CurrentCamera__41 = game.Workspace.CurrentCamera;
	if not l__CurrentCamera__41 then
		return;
	end;
	if p14.cameraSubjectChangedConn then
		p14.cameraSubjectChangedConn:Disconnect();
	end;
	if p14.cameraTypeChangedConn then
		p14.cameraTypeChangedConn:Disconnect();
	end;
	p14.cameraSubjectChangedConn = l__CurrentCamera__41:GetPropertyChangedSignal("CameraSubject"):Connect(function()
		p14:OnCameraSubjectChanged(l__CurrentCamera__41.CameraSubject);
	end);
	p14.cameraTypeChangedConn = l__CurrentCamera__41:GetPropertyChangedSignal("CameraType"):Connect(function()
		p14:OnCameraTypeChanged(l__CurrentCamera__41.CameraType);
	end);
	p14:OnCameraSubjectChanged(l__CurrentCamera__41.CameraSubject);
	p14:OnCameraTypeChanged(l__CurrentCamera__41.CameraType);
end;
function v1.OnLocalPlayerCameraPropertyChanged(p15, p16)
	if p16 == "CameraMode" then
		if l__Players__4.LocalPlayer.CameraMode ~= Enum.CameraMode.LockFirstPerson then
			if l__Players__4.LocalPlayer.CameraMode == Enum.CameraMode.Classic then
				p15:ActivateCameraController(v8.ConvertCameraModeEnumToStandard((p15:GetCameraMovementModeFromSettings())));
				return;
			else
				warn("Unhandled value for property player.CameraMode: ", l__Players__4.LocalPlayer.CameraMode);
				return;
			end;
		end;
		if not p15.activeCameraController or p15.activeCameraController:GetModuleName() ~= "ClassicCamera" then
			p15:ActivateCameraController(v8.ConvertCameraModeEnumToStandard(Enum.DevComputerCameraMovementMode.Classic));
		end;
		if p15.activeCameraController then
			p15.activeCameraController:UpdateForDistancePropertyChange();
			return;
		end;
	else
		if p16 == "DevComputerCameraMode" or p16 == "DevTouchCameraMode" then
			p15:ActivateCameraController(v8.ConvertCameraModeEnumToStandard((p15:GetCameraMovementModeFromSettings())));
			return;
		end;
		if p16 == "DevCameraOcclusionMode" then
			p15:ActivateOcclusionModule(l__Players__4.LocalPlayer.DevCameraOcclusionMode);
			return;
		end;
		if p16 == "CameraMinZoomDistance" or p16 == "CameraMaxZoomDistance" then
			if p15.activeCameraController then
				p15.activeCameraController:UpdateForDistancePropertyChange();
				return;
			end;
		else
			if p16 == "DevTouchMovementMode" then
				return;
			end;
			if p16 == "DevComputerMovementMode" then
				return;
			end;
			if p16 == "DevEnableMouseLock" then

			end;
		end;
	end;
end;
function v1.OnUserGameSettingsPropertyChanged(p17, p18)
	if p18 == "ComputerCameraMovementMode" then
		p17:ActivateCameraController(v8.ConvertCameraModeEnumToStandard((p17:GetCameraMovementModeFromSettings())));
	end;
end;
function v1.Update(p19, p20)
	if p19.activeCameraController then
		p19.activeCameraController:UpdateMouseBehavior();
		local v42, v43 = p19.activeCameraController:Update(p20);
		p19.activeCameraController:ApplyVRTransform();
		if p19.activeOcclusionModule then
			local v44, v45 = p19.activeOcclusionModule:Update(p20, v42, v43);
			v42 = v44;
			v43 = v45;
		end;
		game.Workspace.CurrentCamera.CFrame = v42;
		game.Workspace.CurrentCamera.Focus = v43;
		if p19.activeTransparencyController then
			p19.activeTransparencyController:Update();
		end;
		if v9.getInputEnabled() then
			v9.resetInputForFrameEnd();
		end;
	end;
end;
function v1.GetCameraControlChoice(p21)
	local l__LocalPlayer__46 = l__Players__4.LocalPlayer;
	if not l__LocalPlayer__46 then
		return;
	end;
	if p21.lastInputType == Enum.UserInputType.Touch or l__UserInputService__6.TouchEnabled then
		if l__LocalPlayer__46.DevTouchCameraMode == Enum.DevTouchCameraMovementMode.UserChoice then
			return v8.ConvertCameraModeEnumToStandard(l__UserGameSettings__7.TouchCameraMovementMode);
		else
			return v8.ConvertCameraModeEnumToStandard(l__LocalPlayer__46.DevTouchCameraMode);
		end;
	end;
	if l__LocalPlayer__46.DevComputerCameraMode ~= Enum.DevComputerCameraMovementMode.UserChoice then
		return v8.ConvertCameraModeEnumToStandard(l__LocalPlayer__46.DevComputerCameraMode);
	end;
	return v8.ConvertCameraModeEnumToStandard((v8.ConvertCameraModeEnumToStandard(l__UserGameSettings__7.ComputerCameraMovementMode)));
end;
function v1.OnCharacterAdded(p22, p23, p24)
	if p22.activeOcclusionModule then
		p22.activeOcclusionModule:CharacterAdded(p23, p24);
	end;
end;
function v1.OnCharacterRemoving(p25, p26, p27)
	if p25.activeOcclusionModule then
		p25.activeOcclusionModule:CharacterRemoving(p26, p27);
	end;
end;
function v1.OnPlayerAdded(p28, p29)
	p29.CharacterAdded:Connect(function(p30)
		p28:OnCharacterAdded(p30, p29);
	end);
	p29.CharacterRemoving:Connect(function(p31)
		p28:OnCharacterRemoving(p31, p29);
	end);
end;
function v1.OnMouseLockToggled(p32)
	if p32.activeMouseLockController then
		local v47 = p32.activeMouseLockController:GetIsMouseLocked();
		local v48 = p32.activeMouseLockController:GetMouseLockOffset();
		if p32.activeCameraController then
			p32.activeCameraController:SetIsMouseLocked(v47);
			p32.activeCameraController:SetMouseLockOffset(v48);
		end;
	end;
end;
if v2 or v3 then
	return {};
end;
return v1.new();
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX119"><Properties><string name="Name">LegacyCamera</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = Vector2.new();
local v2 = require(script.Parent:WaitForChild("CameraUtils"));
local v3 = require(script.Parent:WaitForChild("BaseCamera"));
local v4 = setmetatable({}, v3);
v4.__index = v4;
function v4.new()
	local v5 = setmetatable(v3.new(), v4);
	v5.cameraType = Enum.CameraType.Fixed;
	v5.lastUpdate = tick();
	v5.lastDistanceToSubject = nil;
	return v5;
end;
function v4.GetModuleName(p1)
	return "LegacyCamera";
end;
function v4.SetCameraToSubjectDistance(p2, p3)
	return v3.SetCameraToSubjectDistance(p2, p3);
end;
local l__Players__1 = game:GetService("Players");
local u2 = require(script.Parent:WaitForChild("CameraInput"));
local u3 = math.rad(80);
function v4.Update(p4, p5)
	if not p4.cameraType then
		return;
	end;
	local v6 = tick();
	local l__CurrentCamera__7 = workspace.CurrentCamera;
	local v8 = l__CurrentCamera__7.CFrame;
	local v9 = l__CurrentCamera__7.Focus;
	local l__LocalPlayer__10 = l__Players__1.LocalPlayer;
	if p4.lastUpdate == nil or v6 - p4.lastUpdate > 1 then
		p4.lastDistanceToSubject = nil;
	end;
	local v11 = p4:GetSubjectPosition();
	if p4.cameraType == Enum.CameraType.Fixed then
		if v11 and l__LocalPlayer__10 and l__CurrentCamera__7 then
			v9 = l__CurrentCamera__7.Focus;
			v8 = CFrame.new(l__CurrentCamera__7.CFrame.p, l__CurrentCamera__7.CFrame.p + p4:GetCameraToSubjectDistance() * p4:CalculateNewLookVectorFromArg(nil, u2.getRotation()));
		end;
	elseif p4.cameraType == Enum.CameraType.Attach then
		local v12 = p4:GetSubjectCFrame();
		local v13 = l__CurrentCamera__7.CFrame:ToEulerAnglesYXZ();
		local v14, v15 = v12:ToEulerAnglesYXZ();
		v9 = CFrame.new(v12.p) * CFrame.fromEulerAnglesYXZ(math.clamp(v13 - u2.getRotation().Y, -u3, u3), v15, 0);
		v8 = v9 * CFrame.new(0, 0, p4:StepZoom());
	else
		if p4.cameraType ~= Enum.CameraType.Watch then
			return l__CurrentCamera__7.CFrame, l__CurrentCamera__7.Focus;
		end;
		if v11 and l__LocalPlayer__10 and l__CurrentCamera__7 then
			local v16 = nil;
			if v11 == l__CurrentCamera__7.CFrame.p then
				warn("Camera cannot watch subject in same position as itself");
				return l__CurrentCamera__7.CFrame, l__CurrentCamera__7.Focus;
			end;
			local v17 = p4:GetHumanoid();
			if v17 and v17.RootPart then
				local v18 = v11 - l__CurrentCamera__7.CFrame.p;
				v16 = v18.unit;
				if p4.lastDistanceToSubject and p4.lastDistanceToSubject == p4:GetCameraToSubjectDistance() then
					p4:SetCameraToSubjectDistance(v18.magnitude);
				end;
			end;
			local v19 = p4:GetCameraToSubjectDistance();
			v9 = CFrame.new(v11);
			v8 = CFrame.new(v11 - v19 * p4:CalculateNewLookVectorFromArg(v16, u2.getRotation()), v11);
			p4.lastDistanceToSubject = v19;
		end;
	end;
	p4.lastUpdate = v6;
	return v8, v9;
end;
return v4;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX126"><Properties><string name="Name">BaseOcclusion</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local v2 = {};
function v2.__call(p1, ...)
	return v1.new(...);
end;
setmetatable(v1, v2);
function v1.new()
	return setmetatable({}, v1);
end;
function v1.CharacterAdded(p2, p3, p4)

end;
function v1.CharacterRemoving(p5, p6, p7)

end;
function v1.OnCameraSubjectChanged(p8, p9)

end;
function v1.GetOcclusionMode(p10)
	warn("BaseOcclusion GetOcclusionMode must be overridden by derived classes");
	return nil;
end;
function v1.Enable(p11, p12)
	warn("BaseOcclusion Enable must be overridden by derived classes");
end;
function v1.Update(p13, p14, p15, p16)
	warn("BaseOcclusion Update must be overridden by derived classes");
	return p15, p16;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX133"><Properties><string name="Name">CameraUI</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local v2 = l__Players__1.LocalPlayer;
if not v2 then
	l__Players__1:GetPropertyChangedSignal("LocalPlayer"):Wait();
	v2 = l__Players__1.LocalPlayer;
end;
local u1 = false;
local u2 = nil;
local function u3(p1)
	return function(p2)
		local v3 = Instance.new(p1);
		p2.Parent = nil;
		local v4, v5, v6 = pairs(p2);
		while true do
			local v7 = nil;
			local v8 = nil;
			v8, v7 = v4(v5, v6);
			if not v8 then
				break;
			end;
			v6 = v8;
			if type(v8) == "string" then
				v3[v8] = v7;
			else
				v7.Parent = v3;
			end;		
		end;
		v3.Parent = p2.Parent;
		return v3;
	end;
end;
local u4 = UDim2.new(0, 80, 0, 58);
local u5 = Color3.fromRGB(32, 32, 32);
local u6 = Color3.fromRGB(200, 200, 200);
local u7 = (function(p3, p4)
	local v9 = p3:FindFirstChildOfClass(p4);
	while not v9 or v9.ClassName ~= p4 do
		v9 = p3.ChildAdded:Wait();	
	end;
	return v9;
end)(v2, "PlayerGui");
local u8 = nil;
local u9 = nil;
local u10 = nil;
local u11 = nil;
local v10 = {};
local function u12()
	assert(not u1);
	u2 = u3("ScreenGui")({
		Name = "RbxCameraUI", 
		AutoLocalize = false, 
		Enabled = true, 
		DisplayOrder = -1, 
		IgnoreGuiInset = false, 
		ResetOnSpawn = false, 
		ZIndexBehavior = Enum.ZIndexBehavior.Sibling, 
		Parent = u7,
		(u3("ImageLabel")({
			Name = "Toast", 
			Visible = false, 
			AnchorPoint = Vector2.new(0.5, 0), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Position = UDim2.new(0.5, 0, 0, 8), 
			Size = u4, 
			Image = "rbxasset://textures/ui/Camera/CameraToast9Slice.png", 
			ImageColor3 = u5, 
			ImageRectSize = Vector2.new(6, 6), 
			ImageTransparency = 1, 
			ScaleType = Enum.ScaleType.Slice, 
			SliceCenter = Rect.new(3, 3, 3, 3), 
			ClipsDescendants = true,
			u3("Frame")({
				Name = "IconBuffer", 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Position = UDim2.new(0, 0, 0, 0), 
				Size = UDim2.new(0, 80, 1, 0),
				u3("ImageLabel")({
					Name = "Icon", 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(0, 48, 0, 48), 
					ZIndex = 2, 
					Image = "rbxasset://textures/ui/Camera/CameraToastIcon.png", 
					ImageColor3 = u6, 
					ImageTransparency = 1
				})
			}), u3("Frame")({
				Name = "TextBuffer", 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Position = UDim2.new(0, 80, 0, 0), 
				Size = UDim2.new(1, -80, 1, 0), 
				ClipsDescendants = true,
				u3("TextLabel")({
					Name = "Upper", 
					AnchorPoint = Vector2.new(0, 1), 
					BackgroundTransparency = 1, 
					Position = UDim2.new(0, 0, 0.5, 0), 
					Size = UDim2.new(1, 0, 0, 19), 
					Font = Enum.Font.GothamSemibold, 
					Text = "Camera control enabled", 
					TextColor3 = u6, 
					TextTransparency = 1, 
					TextSize = 19, 
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Center
				}), u3("TextLabel")({
					Name = "Lower", 
					AnchorPoint = Vector2.new(0, 0), 
					BackgroundTransparency = 1, 
					Position = UDim2.new(0, 0, 0.5, 3), 
					Size = UDim2.new(1, 0, 0, 15), 
					Font = Enum.Font.Gotham, 
					Text = "Right mouse button to toggle", 
					TextColor3 = u6, 
					TextTransparency = 1, 
					TextSize = 15, 
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Center
				})
			})
		}))
	});
	u8 = u2.Toast;
	u9 = u8.IconBuffer.Icon;
	u10 = u8.TextBuffer.Upper;
	u11 = u8.TextBuffer.Lower;
	u1 = true;
end;
function v10.setCameraModeToastEnabled(p5)
	if not p5 and not u1 then
		return;
	end;
	if not u1 then
		u12();
	end;
	u8.Visible = p5;
	if not p5 then
		v10.setCameraModeToastOpen(false);
	end;
end;
local l__TweenService__13 = game:GetService("TweenService");
local u14 = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out);
local u15 = UDim2.new(0, 326, 0, 58);
function v10.setCameraModeToastOpen(p6)
	assert(u1);
	local v11 = {
		Size = p6 and u15 or u4
	};
	if p6 then
		local v12 = 0.4;
	else
		v12 = 1;
	end;
	v11.ImageTransparency = v12;
	l__TweenService__13:Create(u8, u14, v11):Play();
	local v13 = {};
	if p6 then
		local v14 = 0;
	else
		v14 = 1;
	end;
	v13.ImageTransparency = v14;
	l__TweenService__13:Create(u9, u14, v13):Play();
	local v15 = {};
	if p6 then
		local v16 = 0;
	else
		v16 = 1;
	end;
	v15.TextTransparency = v16;
	l__TweenService__13:Create(u10, u14, v15):Play();
	local v17 = {};
	if p6 then
		local v18 = 0;
	else
		v18 = 1;
	end;
	v17.TextTransparency = v18;
	l__TweenService__13:Create(u11, u14, v17):Play();
end;
return v10;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX140"><Properties><string name="Name">CameraUtils</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = {};
v2.__index = v2;
function v2.new(p1, p2)
	return setmetatable({
		freq = p1, 
		goal = p2, 
		pos = p2, 
		vel = 0
	}, v2);
end;
function v2.step(p3, p4)
	local v3 = p3.freq * 2 * math.pi;
	local l__goal__4 = p3.goal;
	local l__vel__5 = p3.vel;
	local v6 = p3.pos - l__goal__4;
	local v7 = math.exp(-v3 * p4);
	local v8 = (v6 * (1 + v3 * p4) + l__vel__5 * p4) * v7 + l__goal__4;
	p3.pos = v8;
	p3.vel = (l__vel__5 * (1 - v3 * p4) - v6 * (v3 * v3 * p4)) * v7;
	return v8;
end;
v1.Spring = v2;
function v1.map(p5, p6, p7, p8, p9)
	return (p5 - p6) * (p9 - p8) / (p7 - p6) + p8;
end;
function v1.mapClamp(p10, p11, p12, p13, p14)
	return math.clamp((p10 - p11) * (p14 - p13) / (p12 - p11) + p13, math.min(p13, p14), math.max(p13, p14));
end;
function v1.getLooseBoundingSphere(p15)
	local v9 = table.create(#p15);
	for v10, v11 in pairs(p15) do
		v9[v10] = v11.Position;
	end;
	local v12 = v9[1];
	local v13 = v12;
	local v14 = 0;
	for v15, v16 in ipairs(v9) do
		local l__Magnitude__17 = (v16 - v12).Magnitude;
		if v14 < l__Magnitude__17 then
			v13 = v16;
			v14 = l__Magnitude__17;
		end;
	end;
	local v18 = v13;
	local v19 = 0;
	for v20, v21 in ipairs(v9) do
		local l__Magnitude__22 = (v21 - v13).Magnitude;
		if v19 < l__Magnitude__22 then
			v18 = v21;
			v19 = l__Magnitude__22;
		end;
	end;
	local v23 = (v13 + v18) * 0.5;
	local v24 = (v13 - v18).Magnitude * 0.5;
	for v25, v26 in ipairs(v9) do
		local l__Magnitude__27 = (v26 - v23).Magnitude;
		if v24 < l__Magnitude__27 then
			v23 = v23 + (l__Magnitude__27 - v24) * 0.5 * (v26 - v23).Unit;
			v24 = (l__Magnitude__27 + v24) * 0.5;
		end;
	end;
	return v23, v24;
end;
function v1.sanitizeAngle(p16)
	return (p16 + math.pi) % (2 * math.pi) - math.pi;
end;
function v1.Round(p17, p18)
	local v28 = 10 ^ p18;
	return math.floor(p17 * v28 + 0.5) / v28;
end;
function v1.IsFinite(p19)
	local v29 = false;
	if p19 == p19 then
		v29 = false;
		if p19 ~= math.huge then
			v29 = p19 ~= -math.huge;
		end;
	end;
	return v29;
end;
function v1.IsFiniteVector3(p20)
	return v1.IsFinite(p20.X) and (v1.IsFinite(p20.Y) and v1.IsFinite(p20.Z));
end;
function v1.GetAngleBetweenXZVectors(p21, p22)
	return math.atan2(p22.X * p21.Z - p22.Z * p21.X, p22.X * p21.X + p22.Z * p21.Z);
end;
local function u1(p23)
	return math.floor(p23 + 0.5);
end;
function v1.RotateVectorByAngleAndRound(p24, p25, p26)
	if not (p24.Magnitude > 0) then
		return 0;
	end;
	p24 = p24.unit;
	return u1((math.atan2(p24.z, p24.x) + p25) / p26) * p26 - math.atan2(p24.z, p24.x);
end;
local function u2(p27)
	return p27 / 2 + 0.5;
end;
local function u3(p28)
	p28 = math.clamp(p28, -1, 1);
	if p28 >= 0 then
		return 0.35 * p28 / (0.35 - p28 + 1);
	end;
	return -(0.8 * -p28 / (0.8 + p28 + 1));
end;
local function u4(p29)
	return 1.1 * (2 * math.abs(p29) - 1) - 0.1;
end;
function v1.GamepadLinearToCurve(p30)
	local function v30(p31)
		local v31 = 1;
		if p31 < 0 then
			v31 = -1;
		end;
		return math.clamp(u2(u3(u4(math.abs(p31)))) * v31, -1, 1);
	end;
	return Vector2.new(v30(p30.x), v30(p30.y));
end;
function v1.ConvertCameraModeEnumToStandard(p32)
	if p32 == Enum.TouchCameraMovementMode.Default then
		return Enum.ComputerCameraMovementMode.Follow;
	end;
	if p32 == Enum.ComputerCameraMovementMode.Default then
		return Enum.ComputerCameraMovementMode.Classic;
	end;
	if p32 ~= Enum.TouchCameraMovementMode.Classic and p32 ~= Enum.DevTouchCameraMovementMode.Classic and p32 ~= Enum.DevComputerCameraMovementMode.Classic and p32 ~= Enum.ComputerCameraMovementMode.Classic then
		if p32 == Enum.TouchCameraMovementMode.Follow or p32 == Enum.DevTouchCameraMovementMode.Follow or p32 == Enum.DevComputerCameraMovementMode.Follow or p32 == Enum.ComputerCameraMovementMode.Follow then
			return Enum.ComputerCameraMovementMode.Follow;
		elseif p32 == Enum.TouchCameraMovementMode.Orbital or p32 == Enum.DevTouchCameraMovementMode.Orbital or p32 == Enum.DevComputerCameraMovementMode.Orbital or p32 == Enum.ComputerCameraMovementMode.Orbital then
			return Enum.ComputerCameraMovementMode.Orbital;
		elseif p32 == Enum.ComputerCameraMovementMode.CameraToggle or p32 == Enum.DevComputerCameraMovementMode.CameraToggle then
			return Enum.ComputerCameraMovementMode.CameraToggle;
		elseif p32 == Enum.DevTouchCameraMovementMode.UserChoice or p32 == Enum.DevComputerCameraMovementMode.UserChoice then
			return Enum.DevComputerCameraMovementMode.UserChoice;
		else
			return Enum.ComputerCameraMovementMode.Classic;
		end;
	end;
	return Enum.ComputerCameraMovementMode.Classic;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX147"><Properties><string name="Name">CameraInput</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__ContextActionService__1 = game:GetService("ContextActionService");
local l__UserInputService__2 = game:GetService("UserInputService");
local l__RunService__3 = game:GetService("RunService");
local l__UserGameSettings__4 = UserSettings():GetService("UserGameSettings");
local l__LocalPlayer__5 = game:GetService("Players").LocalPlayer;
local v6 = math.rad(120);
local v7 = Vector2.new(1, 0.77) * math.rad(0.5);
local v8 = Vector2.new(1, 0.77) * math.rad(7);
local v9 = Vector2.new(1, 0.66) * math.rad(1);
local v10 = Vector2.new(1, 0.77) * math.rad(4);
local v11 = Instance.new("BindableEvent");
local v12 = Instance.new("BindableEvent");
local u1 = v11;
l__UserInputService__2.InputBegan:Connect(function(p1, p2)
	if not p2 and p1.UserInputType == Enum.UserInputType.MouseButton2 then
		u1:Fire();
	end;
end);
local u2 = v12;
l__UserInputService__2.InputEnded:Connect(function(p3, p4)
	if p3.UserInputType == Enum.UserInputType.MouseButton2 then
		u2:Fire();
	end;
end);
u1 = nil;
u1 = function(p5)
	return math.sign(p5) * math.clamp((math.exp(2 * ((math.abs(p5) - 0.1) / 0.9)) - 1) / (math.exp(2) - 1), 0, 1);
end;
u2 = function(p6)
	local l__CurrentCamera__13 = workspace.CurrentCamera;
	if not l__CurrentCamera__13 then
		return p6;
	end;
	local v14 = l__CurrentCamera__13.CFrame:ToEulerAnglesYXZ();
	if p6.Y * v14 >= 0 then
		return p6;
	end;
	return Vector2.new(1, (1 - (2 * math.abs(v14) / math.pi) ^ 0.75) * 0.75 + 0.25) * p6;
end;
local u3 = 0.016666666666666666;
l__RunService__3.Stepped:Connect(function(p7, p8)
	u3 = p8;
end);
local v15 = {};
local u4 = 0;
local v16 = Instance.new("BindableEvent");
v15.gamepadZoomPress = v16.Event;
local u5 = {
	Thumbstick2 = Vector2.new()
};
function v15.getRotationActivated()
	local v17 = true;
	if not (u4 > 0) then
		v17 = u5.Thumbstick2.Magnitude > 0;
	end;
	return v17;
end;
local u6 = {
	Left = 0, 
	Right = 0, 
	I = 0, 
	O = 0
};
local u7 = {
	Movement = Vector2.new(), 
	Wheel = 0, 
	Pan = Vector2.new(), 
	Pinch = 0
};
local u8 = {
	Move = Vector2.new(), 
	Pinch = 0
};
function v15.getRotation(p9)
	local v18 = Vector2.new(1, l__UserGameSettings__4:GetCameraYInvertValue());
	local v19 = Vector2.new(u6.Right - u6.Left, 0) * u3;
	if p9 then
		v19 = Vector2.new();
	end;
	return (v19 * v6 + u5.Thumbstick2 * v10 + u7.Movement * v7 + u7.Pan * v8 + u2(u8.Move) * v9) * v18;
end;
function v15.getZoomDelta()
	return (u6.O - u6.I) * 0.1 + (-u7.Wheel + u7.Pinch) * 1 + -u8.Pinch * 0.04;
end;
local u9 = nil;
local function u10(p10)
	local v20 = l__LocalPlayer__5:FindFirstChildOfClass("PlayerGui");
	local v21 = v20 and v20:FindFirstChild("TouchGui");
	local v22 = v21 and v21:FindFirstChild("TouchControlFrame");
	local v23 = v22 and v22:FindFirstChild("DynamicThumbstickFrame");
	if not v23 then
		return false;
	end;
	if not v21.Enabled then
		return false;
	end;
	local l__AbsolutePosition__24 = v23.AbsolutePosition;
	local v25 = l__AbsolutePosition__24 + v23.AbsoluteSize;
	local v26 = false;
	if l__AbsolutePosition__24.X <= p10.X then
		v26 = false;
		if l__AbsolutePosition__24.Y <= p10.Y then
			v26 = false;
			if p10.X <= v25.X then
				v26 = p10.Y <= v25.Y;
			end;
		end;
	end;
	return v26;
end;
local function u11()
	u4 = math.max(0, u4 + 1);
end;
local u12 = {};
local u13 = nil;
local function u14()
	u4 = math.max(0, u4 - 1);
end;
local function u15(p11, p12)
	assert(p11.UserInputType == Enum.UserInputType.Touch);
	assert(p11.UserInputState == Enum.UserInputState.Begin);
	if u9 == nil and u10(p11.Position) and not p12 then
		u9 = p11;
		return;
	end;
	if not p12 then
		u11();
	end;
	u12[p11] = p12;
end;
local function u16(p13, p14)
	assert(p13.UserInputType == Enum.UserInputType.Touch);
	assert(p13.UserInputState == Enum.UserInputState.Change);
	if p13 == u9 then
		return;
	end;
	if u12[p13] == nil then
		u12[p13] = p14;
	end;
	local v27 = {};
	for v28, v29 in pairs(u12) do
		if not v29 then
			table.insert(v27, v28);
		end;
	end;
	if #v27 == 1 and u12[p13] == false then
		local l__Delta__30 = p13.Delta;
		u8.Move = u8.Move + Vector2.new(l__Delta__30.X, l__Delta__30.Y);
	end;
	if #v27 ~= 2 then
		u13 = nil;
		return;
	end;
	local l__Magnitude__31 = (v27[1].Position - v27[2].Position).Magnitude;
	if u13 then
		u8.Pinch = u8.Pinch + (l__Magnitude__31 - u13);
	end;
	u13 = l__Magnitude__31;
end;
local function u17(p15)
	local l__Delta__32 = p15.Delta;
	u7.Movement = Vector2.new(l__Delta__32.X, l__Delta__32.Y);
end;
local function u18(p16, p17)
	assert(p16.UserInputType == Enum.UserInputType.Touch);
	assert(p16.UserInputState == Enum.UserInputState.End);
	if p16 == u9 then
		u9 = nil;
	end;
	if u12[p16] == false then
		u13 = nil;
		u14();
	end;
	u12[p16] = nil;
end;
local u19 = false;
local function u20()
	for v33, v34 in pairs({ u5, u6, u7, u8 }) do
		for v35, v36 in pairs(v34) do
			if type(v36) == "boolean" then
				v34[v35] = false;
			else
				v34[v35] = v34[v35] * 0;
			end;
		end;
	end;
end;
local function u21()
	u12 = {};
	u9 = nil;
	u13 = nil;
end;
local function u22(p18, p19, p20)
	local l__Position__37 = p20.Position;
	u5[p20.KeyCode.Name] = Vector2.new(u1(l__Position__37.X), -u1(l__Position__37.Y));
end;
local l__Value__23 = Enum.ContextActionPriority.Default.Value;
local function u24(p21, p22, p23)
	if p22 == Enum.UserInputState.Begin then
		local v38 = 1;
	else
		v38 = 0;
	end;
	u6[p23.KeyCode.Name] = v38;
end;
local function u25(p24, p25, p26)
	if p25 == Enum.UserInputState.Begin then
		v16:Fire();
	end;
end;
local u26 = {};
local function u27(p27, p28)
	if p27.UserInputType == Enum.UserInputType.Touch then
		u15(p27, p28);
		return;
	end;
	if p27.UserInputType == Enum.UserInputType.MouseButton2 and not p28 then
		u11();
	end;
end;
local function u28(p29, p30)
	if p29.UserInputType == Enum.UserInputType.Touch then
		u16(p29, p30);
		return;
	end;
	if p29.UserInputType == Enum.UserInputType.MouseMovement then
		u17(p29);
	end;
end;
local function u29(p31, p32)
	if p31.UserInputType == Enum.UserInputType.Touch then
		u18(p31, p32);
		return;
	end;
	if p31.UserInputType == Enum.UserInputType.MouseButton2 then
		u14();
	end;
end;
local function u30(p33, p34, p35, p36)
	if not p36 then
		u7.Wheel = p33;
		u7.Pan = p34;
		u7.Pinch = -p35;
	end;
end;
function v15.setInputEnabled(p37)
	if u19 == p37 then
		return;
	end;
	u19 = p37;
	u20();
	u21();
	if not u19 then
		l__ContextActionService__1:UnbindAction("RbxCameraThumbstick");
		l__ContextActionService__1:UnbindAction("RbxCameraMouseMove");
		l__ContextActionService__1:UnbindAction("RbxCameraMouseWheel");
		l__ContextActionService__1:UnbindAction("RbxCameraKeypress");
		for v39, v40 in pairs(u26) do
			v40:Disconnect();
		end;
		u26 = {};
		return;
	end;
	l__ContextActionService__1:BindActionAtPriority("RbxCameraThumbstick", u22, false, l__Value__23, Enum.KeyCode.Thumbstick2);
	l__ContextActionService__1:BindActionAtPriority("RbxCameraKeypress", u24, false, l__Value__23, Enum.KeyCode.Left, Enum.KeyCode.Right, Enum.KeyCode.I, Enum.KeyCode.O);
	l__ContextActionService__1:BindAction("RbxCameraGamepadZoom", u25, false, Enum.KeyCode.ButtonR3);
	table.insert(u26, l__UserInputService__2.InputBegan:Connect(u27));
	table.insert(u26, l__UserInputService__2.InputChanged:Connect(u28));
	table.insert(u26, l__UserInputService__2.InputEnded:Connect(u29));
	table.insert(u26, l__UserInputService__2.PointerAction:Connect(u30));
end;
function v15.getInputEnabled()
	return u19;
end;
function v15.resetInputForFrameEnd()
	u7.Movement = Vector2.new();
	u8.Move = Vector2.new();
	u8.Pinch = 0;
	u7.Wheel = 0;
	u7.Pan = Vector2.new();
	u7.Pinch = 0;
end;
l__UserInputService__2.WindowFocused:Connect(u20);
l__UserInputService__2.WindowFocusReleased:Connect(u20);
local u31 = false;
function v15.getHoldPan()
	return u31;
end;
local u32 = false;
function v15.getTogglePan()
	return u32;
end;
function v15.getPanning()
	return u32 or u31;
end;
function v15.setTogglePan(p38)
	u32 = p38;
end;
local u33 = false;
local u34 = nil;
local u35 = nil;
local l__Event__36 = v11.Event;
local u37 = 0;
local l__Event__38 = v12.Event;
function v15.enableCameraToggleInput()
	if u33 then
		return;
	end;
	u33 = true;
	u31 = false;
	u32 = false;
	if u34 then
		u34:Disconnect();
	end;
	if u35 then
		u35:Disconnect();
	end;
	u34 = l__Event__36:Connect(function()
		u31 = true;
		u37 = tick();
	end);
	u35 = l__Event__38:Connect(function()
		u31 = false;
		if tick() - u37 < 0.3 and (u32 or l__UserInputService__2:GetMouseDelta().Magnitude < 2) then
			u32 = not u32;
		end;
	end);
end;
function v15.disableCameraToggleInput()
	if not u33 then
		return;
	end;
	u33 = false;
	if u34 then
		u34:Disconnect();
		u34 = nil;
	end;
	if u35 then
		u35:Disconnect();
		u35 = nil;
	end;
end;
return v15;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX154"><Properties><string name="Name">TransparencyController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
function v1.new()
	local v2 = setmetatable({}, v1);
	v2.lastUpdate = tick();
	v2.transparencyDirty = false;
	v2.enabled = false;
	v2.lastTransparency = nil;
	v2.descendantAddedConn = nil;
	v2.descendantRemovingConn = nil;
	v2.toolDescendantAddedConns = {};
	v2.toolDescendantRemovingConns = {};
	v2.cachedParts = {};
	return v2;
end;
function v1.HasToolAncestor(p1, p2)
	if p2.Parent == nil then
		return false;
	end;
	return p2.Parent:IsA("Tool") or p1:HasToolAncestor(p2.Parent);
end;
function v1.IsValidPartToModify(p3, p4)
	if not p4:IsA("BasePart") and not p4:IsA("Decal") then
		return false;
	end;
	return not p3:HasToolAncestor(p4);
end;
function v1.CachePartsRecursive(p5, p6)
	if p6 then
		if p5:IsValidPartToModify(p6) then
			p5.cachedParts[p6] = true;
			p5.transparencyDirty = true;
		end;
		for v3, v4 in pairs(p6:GetChildren()) do
			p5:CachePartsRecursive(v4);
		end;
	end;
end;
function v1.TeardownTransparency(p7)
	for v5, v6 in pairs(p7.cachedParts) do
		v5.LocalTransparencyModifier = 0;
	end;
	p7.cachedParts = {};
	p7.transparencyDirty = true;
	p7.lastTransparency = nil;
	if p7.descendantAddedConn then
		p7.descendantAddedConn:disconnect();
		p7.descendantAddedConn = nil;
	end;
	if p7.descendantRemovingConn then
		p7.descendantRemovingConn:disconnect();
		p7.descendantRemovingConn = nil;
	end;
	for v7, v8 in pairs(p7.toolDescendantAddedConns) do
		v8:Disconnect();
		p7.toolDescendantAddedConns[v7] = nil;
	end;
	for v9, v10 in pairs(p7.toolDescendantRemovingConns) do
		v10:Disconnect();
		p7.toolDescendantRemovingConns[v9] = nil;
	end;
end;
function v1.SetupTransparency(p8, p9)
	p8:TeardownTransparency();
	if p8.descendantAddedConn then
		p8.descendantAddedConn:disconnect();
	end;
	p8.descendantAddedConn = p9.DescendantAdded:Connect(function(p10)
		if p8:IsValidPartToModify(p10) then
			p8.cachedParts[p10] = true;
			p8.transparencyDirty = true;
			return;
		end;
		if p10:IsA("Tool") then
			if p8.toolDescendantAddedConns[p10] then
				p8.toolDescendantAddedConns[p10]:Disconnect();
			end;
			p8.toolDescendantAddedConns[p10] = p10.DescendantAdded:Connect(function(p11)
				p8.cachedParts[p11] = nil;
				if p11:IsA("BasePart") or p11:IsA("Decal") then
					p11.LocalTransparencyModifier = 0;
				end;
			end);
			if p8.toolDescendantRemovingConns[p10] then
				p8.toolDescendantRemovingConns[p10]:disconnect();
			end;
			p8.toolDescendantRemovingConns[p10] = p10.DescendantRemoving:Connect(function(p12)
				wait();
				if p9 and p12 and p12:IsDescendantOf(p9) and p8:IsValidPartToModify(p12) then
					p8.cachedParts[p12] = true;
					p8.transparencyDirty = true;
				end;
			end);
		end;
	end);
	if p8.descendantRemovingConn then
		p8.descendantRemovingConn:disconnect();
	end;
	p8.descendantRemovingConn = p9.DescendantRemoving:connect(function(p13)
		if p8.cachedParts[p13] then
			p8.cachedParts[p13] = nil;
			p13.LocalTransparencyModifier = 0;
		end;
	end);
	p8:CachePartsRecursive(p9);
end;
function v1.Enable(p14, p15)
	if p14.enabled ~= p15 then
		p14.enabled = p15;
		p14:Update();
	end;
end;
function v1.SetSubject(p16, p17)
	local v11 = nil;
	if p17 and p17:IsA("Humanoid") then
		v11 = p17.Parent;
	end;
	if p17 and p17:IsA("VehicleSeat") and p17.Occupant then
		v11 = p17.Occupant.Parent;
	end;
	if not v11 then
		p16:TeardownTransparency();
		return;
	end;
	p16:SetupTransparency(v11);
end;
local u1 = require(script.Parent:WaitForChild("CameraUtils"));
function v1.Update(p18)
	local v12 = tick();
	local l__CurrentCamera__13 = workspace.CurrentCamera;
	if l__CurrentCamera__13 then
		local v14 = 0;
		if p18.enabled then
			local l__magnitude__15 = (l__CurrentCamera__13.Focus.p - l__CurrentCamera__13.CoordinateFrame.p).magnitude;
			local v16 = l__magnitude__15 < 2 and 1 - (l__magnitude__15 - 0.5) / 1.5 or 0;
			if v16 < 0.5 then
				v16 = 0;
			end;
			if p18.lastTransparency then
				local v17 = v16 - p18.lastTransparency;
				if not false and v16 < 1 and p18.lastTransparency < 0.95 then
					local v18 = 2.8 * (v12 - p18.lastUpdate);
					v17 = math.clamp(v17, -v18, v18);
				end;
				v16 = p18.lastTransparency + v17;
			else
				p18.transparencyDirty = true;
			end;
			v14 = math.clamp(u1.Round(v16, 2), 0, 1);
		end;
		if p18.transparencyDirty or p18.lastTransparency ~= v14 then
			for v19, v20 in pairs(p18.cachedParts) do
				v19.LocalTransparencyModifier = v14;
			end;
			p18.transparencyDirty = false;
			p18.lastTransparency = v14;
		end;
	end;
	p18.lastUpdate = v12;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX161"><Properties><string name="Name">Invisicam</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local function u1(p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return p1 * (p5 * p9 - p6 * p8) - p2 * (p4 * p9 - p6 * p7) + p3 * (p4 * p8 - p5 * p7);
end;
local u2 = Vector3.new(0, 0, 0);
local v2 = require(script.Parent:WaitForChild("BaseOcclusion"));
local v3 = setmetatable({}, v2);
v3.__index = v3;
local u3 = {
	LIMBS = 2, 
	MOVEMENT = 3, 
	CORNERS = 4, 
	CIRCLE1 = 5, 
	CIRCLE2 = 6, 
	LIMBMOVE = 7, 
	SMART_CIRCLE = 8, 
	CHAR_OUTLINE = 9
};
function v3.new()
	local v4 = setmetatable(v2.new(), v3);
	v4.char = nil;
	v4.humanoidRootPart = nil;
	v4.torsoPart = nil;
	v4.headPart = nil;
	v4.childAddedConn = nil;
	v4.childRemovedConn = nil;
	v4.behaviors = {};
	v4.behaviors[u3.LIMBS] = v4.LimbBehavior;
	v4.behaviors[u3.MOVEMENT] = v4.MoveBehavior;
	v4.behaviors[u3.CORNERS] = v4.CornerBehavior;
	v4.behaviors[u3.CIRCLE1] = v4.CircleBehavior;
	v4.behaviors[u3.CIRCLE2] = v4.CircleBehavior;
	v4.behaviors[u3.LIMBMOVE] = v4.LimbMoveBehavior;
	v4.behaviors[u3.SMART_CIRCLE] = v4.SmartCircleBehavior;
	v4.behaviors[u3.CHAR_OUTLINE] = v4.CharacterOutlineBehavior;
	v4.mode = u3.SMART_CIRCLE;
	v4.behaviorFunction = v4.SmartCircleBehavior;
	v4.savedHits = {};
	v4.trackedLimbs = {};
	v4.camera = game.Workspace.CurrentCamera;
	v4.enabled = false;
	return v4;
end;
function v3.Enable(p10, p11)
	p10.enabled = p11;
	if not p11 then
		p10:Cleanup();
	end;
end;
function v3.GetOcclusionMode(p12)
	return Enum.DevCameraOcclusionMode.Invisicam;
end;
function v3.LimbBehavior(p13, p14)
	for v5, v6 in pairs(p13.trackedLimbs) do
		p14[#p14 + 1] = v5.Position;
	end;
end;
function v3.MoveBehavior(p15, p16)
	for v7 = 1, 3 do
		local l__Velocity__8 = p15.humanoidRootPart.Velocity;
		p16[#p16 + 1] = p15.humanoidRootPart.Position + (v7 - 1) * p15.humanoidRootPart.CFrame.lookVector * (Vector3.new(l__Velocity__8.X, 0, l__Velocity__8.Z).Magnitude / 2);
	end;
end;
local u4 = { Vector3.new(1, 1, -1), Vector3.new(1, -1, -1), Vector3.new(-1, -1, -1), Vector3.new(-1, 1, -1) };
function v3.CornerBehavior(p17, p18)
	local l__CFrame__9 = p17.humanoidRootPart.CFrame;
	local l__p__10 = l__CFrame__9.p;
	local v11 = l__CFrame__9 - l__p__10;
	local v12 = p17.char:GetExtentsSize() / 2;
	p18[#p18 + 1] = l__p__10;
	for v13 = 1, #u4 do
		p18[#p18 + 1] = l__p__10 + v11 * (v12 * u4[v13]);
	end;
end;
function v3.CircleBehavior(p19, p20)
	if p19.mode == u3.CIRCLE1 then
		local v14 = p19.humanoidRootPart.CFrame;
	else
		local l__CoordinateFrame__15 = p19.camera.CoordinateFrame;
		v14 = l__CoordinateFrame__15 - l__CoordinateFrame__15.p + p19.humanoidRootPart.Position;
	end;
	p20[#p20 + 1] = v14.p;
	for v16 = 0, 9 do
		local v17 = 2 * math.pi / 10 * v16;
		p20[#p20 + 1] = v14 * (3 * Vector3.new(math.cos(v17), math.sin(v17), 0));
	end;
end;
function v3.LimbMoveBehavior(p21, p22)
	p21:LimbBehavior(p22);
	p21:MoveBehavior(p22);
end;
function v3.CharacterOutlineBehavior(p23, p24)
	local l__unit__18 = p23.torsoPart.CFrame.upVector.unit;
	local l__unit__19 = p23.torsoPart.CFrame.rightVector.unit;
	p24[#p24 + 1] = p23.torsoPart.CFrame.p;
	p24[#p24 + 1] = p23.torsoPart.CFrame.p + l__unit__18;
	p24[#p24 + 1] = p23.torsoPart.CFrame.p - l__unit__18;
	p24[#p24 + 1] = p23.torsoPart.CFrame.p + l__unit__19;
	p24[#p24 + 1] = p23.torsoPart.CFrame.p - l__unit__19;
	if p23.headPart then
		p24[#p24 + 1] = p23.headPart.CFrame.p;
	end;
	local v20 = CFrame.new(u2, Vector3.new(p23.camera.CoordinateFrame.lookVector.X, 0, p23.camera.CoordinateFrame.lookVector.Z));
	local v21 = p23.torsoPart and p23.torsoPart.Position or p23.humanoidRootPart.Position;
	local v22 = { p23.torsoPart };
	if p23.headPart then
		v22[#v22 + 1] = p23.headPart;
	end;
	for v23 = 1, 24 do
		local v24 = 2 * math.pi * v23 / 24;
		local v25 = v20 * (3 * Vector3.new(math.cos(v24), math.sin(v24), 0));
		local v26 = Vector3.new(v25.X, math.max(v25.Y, -2.25), v25.Z);
		local v27, v28 = game.Workspace:FindPartOnRayWithWhitelist(Ray.new(v21 + v26, -3 * v26), v22, false, false);
		if v27 then
			p24[#p24 + 1] = v28 + 0.2 * (v21 - v28).unit;
		end;
	end;
end;
local u5 = 2 * math.pi / 24;
local function u6(p25, p26, p27, p28)
	local v29 = p26:Cross(p28);
	local v30 = p27.x - p25.x;
	local v31 = p27.y - p25.y;
	local v32 = p27.z - p25.z;
	local v33 = u1(p26.x, -p28.x, v29.x, p26.y, -p28.y, v29.y, p26.z, -p28.z, v29.z);
	if v33 == 0 then
		return u2;
	end;
	local v34 = u1(v30, -p28.x, v29.x, v31, -p28.y, v29.y, v32, -p28.z, v29.z) / v33;
	local v35 = u1(p26.x, v30, v29.x, p26.y, v31, v29.y, p26.z, v32, v29.z) / v33;
	local v36 = p25 + v34 * p26;
	local v37 = p27 + v35 * p28;
	if (v37 - v36).Magnitude < 0.25 then
		return v36 + 0.5 * (v37 - v36);
	end;
	return u2;
end;
function v3.SmartCircleBehavior(p29, p30)
	local l__unit__38 = p29.torsoPart.CFrame.upVector.unit;
	local l__unit__39 = p29.torsoPart.CFrame.rightVector.unit;
	p30[#p30 + 1] = p29.torsoPart.CFrame.p;
	p30[#p30 + 1] = p29.torsoPart.CFrame.p + l__unit__38;
	p30[#p30 + 1] = p29.torsoPart.CFrame.p - l__unit__38;
	p30[#p30 + 1] = p29.torsoPart.CFrame.p + l__unit__39;
	p30[#p30 + 1] = p29.torsoPart.CFrame.p - l__unit__39;
	if p29.headPart then
		p30[#p30 + 1] = p29.headPart.CFrame.p;
	end;
	local v40 = p29.camera.CFrame - p29.camera.CFrame.p;
	local v41 = Vector3.new(0, 0.5, 0) + (p29.torsoPart and p29.torsoPart.Position or p29.humanoidRootPart.Position);
	for v42 = 1, 24 do
		local v43 = u5 * v42 - 0.5 * math.pi;
		local v44 = v41 + v40 * (2.5 * Vector3.new(math.cos(v43), math.sin(v43), 0));
		local v45 = v44 - p29.camera.CFrame.p;
		local v46, v47, v48 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(v41, v44 - v41), { p29.char }, false, false);
		local v49 = v44;
		if v46 then
			local v50 = v47 + 0.1 * v48.unit;
			local v51 = v50 - v41;
			local l__unit__52 = v51:Cross(v45).unit:Cross(v48).unit;
			if v51.unit:Dot(-l__unit__52) < v51.unit:Dot((v50 - p29.camera.CFrame.p).unit) then
				v49 = u6(v50, l__unit__52, v44, v45);
				if v49.Magnitude > 0 then
					local v53, v54, v55 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(v50, v49 - v50), { p29.char }, false, false);
					if v53 then
						v49 = v54 + 0.1 * v55.unit;
					end;
				else
					v49 = v50;
				end;
			else
				v49 = v50;
			end;
			local v56, v57, v58 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(v41, v49 - v41), { p29.char }, false, false);
			if v56 then
				v49 = v57 - 0.1 * (v49 - v41).unit;
			end;
		end;
		p30[#p30 + 1] = v49;
	end;
end;
function v3.CheckTorsoReference(p31)
	if p31.char then
		p31.torsoPart = p31.char:FindFirstChild("Torso");
		if not p31.torsoPart then
			p31.torsoPart = p31.char:FindFirstChild("UpperTorso");
			if not p31.torsoPart then
				p31.torsoPart = p31.char:FindFirstChild("HumanoidRootPart");
			end;
		end;
		p31.headPart = p31.char:FindFirstChild("Head");
	end;
end;
local u7 = {
	Head = true, 
	["Left Arm"] = true, 
	["Right Arm"] = true, 
	["Left Leg"] = true, 
	["Right Leg"] = true, 
	LeftLowerArm = true, 
	RightLowerArm = true, 
	LeftUpperLeg = true, 
	RightUpperLeg = true
};
function v3.CharacterAdded(p32, p33, p34)
	if p34 ~= l__Players__1.LocalPlayer then
		return;
	end;
	if p32.childAddedConn then
		p32.childAddedConn:Disconnect();
		p32.childAddedConn = nil;
	end;
	if p32.childRemovedConn then
		p32.childRemovedConn:Disconnect();
		p32.childRemovedConn = nil;
	end;
	p32.char = p33;
	p32.trackedLimbs = {};
	local function v59(p35)
		if p35:IsA("BasePart") then
			if u7[p35.Name] then
				p32.trackedLimbs[p35] = true;
			end;
			if p35.Name == "Torso" or p35.Name == "UpperTorso" then
				p32.torsoPart = p35;
			end;
			if p35.Name == "Head" then
				p32.headPart = p35;
			end;
		end;
	end;
	p32.childAddedConn = p33.ChildAdded:Connect(v59);
	p32.childRemovedConn = p33.ChildRemoved:Connect(function(p36)
		p32.trackedLimbs[p36] = nil;
		p32:CheckTorsoReference();
	end);
	for v60, v61 in pairs(p32.char:GetChildren()) do
		v59(v61);
	end;
end;
local function u8(p37, ...)
	local v62 = {};
	local v63 = "";
	for v64, v65 in pairs({ ... }) do
		v62[v65] = true;
		if v63 == "" then
			local v66 = "";
		else
			v66 = " or ";
		end;
		v63 = v63 .. v66 .. v65;
	end;
	local v67 = type(p37);
	assert(v62[v67], v63 .. " type expected, got: " .. v67);
end;
function v3.SetMode(p38, p39)
	u8(p39, "number");
	for v68, v69 in pairs(u3) do
		if v69 == p39 then
			p38.mode = p39;
			p38.behaviorFunction = p38.behaviors[p38.mode];
			return;
		end;
	end;
	error("Invalid mode number");
end;
function v3.GetObscuredParts(p40)
	return p40.savedHits;
end;
function v3.Cleanup(p41)
	for v70, v71 in pairs(p41.savedHits) do
		v70.LocalTransparencyModifier = v71;
	end;
end;
function v3.Update(p42, p43, p44, p45)
	local v72 = nil;
	if not p42.enabled or not p42.char then
		return p44, p45;
	end;
	p42.camera = game.Workspace.CurrentCamera;
	if not p42.humanoidRootPart then
		local v73 = p42.char:FindFirstChildOfClass("Humanoid");
		if v73 and v73.RootPart then
			p42.humanoidRootPart = v73.RootPart;
		else
			p42.humanoidRootPart = p42.char:FindFirstChild("HumanoidRootPart");
			if not p42.humanoidRootPart then
				return p44, p45;
			end;
		end;
		local u9 = nil;
		u9 = p42.humanoidRootPart.AncestryChanged:Connect(function(p46, p47)
			if p46 == p42.humanoidRootPart and not p47 then
				p42.humanoidRootPart = nil;
				if u9 and u9.Connected then
					u9:Disconnect();
					u9 = nil;
				end;
			end;
		end);
	end;
	if not p42.torsoPart then
		p42:CheckTorsoReference();
		if not p42.torsoPart then
			return p44, p45;
		end;
	end;
	local v74 = {};
	p42:behaviorFunction(v74);
	local v75 = { p42.char };
	local u10 = {};
	local function v76(p48)
		u10[p48] = true;
		if not p42.savedHits[p48] then
			p42.savedHits[p48] = p48.LocalTransparencyModifier;
		end;
	end;
	local v77 = 0;
	local v78 = {};
	local v79 = 0.75;
	local v80 = 0.75;
	local v81 = p42.camera:GetPartsObscuringTarget({ p42.headPart and p42.headPart.CFrame.p or v74[1], p42.torsoPart and p42.torsoPart.CFrame.p or v74[2] }, v75);
	for v82 = 1, #v81 do
		local v83 = v81[v82];
		v72 = v77 + 1;
		v78[v83] = true;
		for v84, v85 in pairs(v83:GetChildren()) do
			if v85:IsA("Decal") then
				v72 = v72 + 1;
				break;
			end;
			if v85:IsA("Texture") then
				v72 = v72 + 1;
				break;
			end;
		end;
	end;
	if v72 > 0 then
		v79 = math.pow(0.375 + 0.375 / v72, 1 / v72);
		v80 = math.pow(0.25 + 0.25 / v72, 1 / v72);
	end;
	local v86 = p42.camera:GetPartsObscuringTarget(v74, v75);
	local v87 = {};
	for v88 = 1, #v86 do
		local v89 = v86[v88];
		v87[v89] = v78[v89] and v79 or v80;
		if v89.Transparency < v87[v89] then
			v76(v89);
		end;
		for v90, v91 in pairs(v89:GetChildren()) do
			if (v91:IsA("Decal") or v91:IsA("Texture")) and v91.Transparency < v87[v89] then
				v87[v91] = v87[v89];
				v76(v91);
			end;
		end;
	end;
	for v92, v93 in pairs(p42.savedHits) do
		if u10[v92] then
			v92.LocalTransparencyModifier = v92.Transparency < 1 and (v87[v92] - v92.Transparency) / (1 - v92.Transparency) or 0;
		else
			v92.LocalTransparencyModifier = v93;
			p42.savedHits[v92] = nil;
		end;
	end;
	return p44, p45;
end;
return v3;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX168"><Properties><string name="Name">OrbitalCamera</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = Vector3.new(0, 0, 1);
local v2 = {
	InitialDistance = 25, 
	MinDistance = 10, 
	MaxDistance = 100, 
	InitialElevation = 35, 
	MinElevation = 35, 
	MaxElevation = 35, 
	ReferenceAzimuth = -45, 
	CWAzimuthTravel = 90, 
	CCWAzimuthTravel = 90, 
	UseAzimuthLimits = false
};
local v3 = require(script.Parent:WaitForChild("BaseCamera"));
local v4 = setmetatable({}, v3);
v4.__index = v4;
function v4.new()
	local v5 = setmetatable(v3.new(), v4);
	v5.lastUpdate = tick();
	v5.changedSignalConnections = {};
	v5.refAzimuthRad = nil;
	v5.curAzimuthRad = nil;
	v5.minAzimuthAbsoluteRad = nil;
	v5.maxAzimuthAbsoluteRad = nil;
	v5.useAzimuthLimits = nil;
	v5.curElevationRad = nil;
	v5.minElevationRad = nil;
	v5.maxElevationRad = nil;
	v5.curDistance = nil;
	v5.minDistance = nil;
	v5.maxDistance = nil;
	v5.gamepadDollySpeedMultiplier = 1;
	v5.lastUserPanCamera = tick();
	v5.externalProperties = {};
	v5.externalProperties.InitialDistance = 25;
	v5.externalProperties.MinDistance = 10;
	v5.externalProperties.MaxDistance = 100;
	v5.externalProperties.InitialElevation = 35;
	v5.externalProperties.MinElevation = 35;
	v5.externalProperties.MaxElevation = 35;
	v5.externalProperties.ReferenceAzimuth = -45;
	v5.externalProperties.CWAzimuthTravel = 90;
	v5.externalProperties.CCWAzimuthTravel = 90;
	v5.externalProperties.UseAzimuthLimits = false;
	v5:LoadNumberValueParameters();
	return v5;
end;
function v4.LoadOrCreateNumberValueParameter(p1, p2, p3, p4)
	local v6 = script:FindFirstChild(p2);
	if v6 and v6:isA(p3) then
		p1.externalProperties[p2] = v6.Value;
	else
		if p1.externalProperties[p2] == nil then
			return;
		end;
		v6 = Instance.new(p3);
		v6.Name = p2;
		v6.Parent = script;
		v6.Value = p1.externalProperties[p2];
	end;
	if p4 then
		if p1.changedSignalConnections[p2] then
			p1.changedSignalConnections[p2]:Disconnect();
		end;
		p1.changedSignalConnections[p2] = v6.Changed:Connect(function(p5)
			p1.externalProperties[p2] = p5;
			p4(p1);
		end);
	end;
end;
function v4.SetAndBoundsCheckAzimuthValues(p6)
	p6.minAzimuthAbsoluteRad = math.rad(p6.externalProperties.ReferenceAzimuth) - math.abs(math.rad(p6.externalProperties.CWAzimuthTravel));
	p6.maxAzimuthAbsoluteRad = math.rad(p6.externalProperties.ReferenceAzimuth) + math.abs(math.rad(p6.externalProperties.CCWAzimuthTravel));
	p6.useAzimuthLimits = p6.externalProperties.UseAzimuthLimits;
	if p6.useAzimuthLimits then
		p6.curAzimuthRad = math.max(p6.curAzimuthRad, p6.minAzimuthAbsoluteRad);
		p6.curAzimuthRad = math.min(p6.curAzimuthRad, p6.maxAzimuthAbsoluteRad);
	end;
end;
function v4.SetAndBoundsCheckElevationValues(p7)
	local v7 = math.max(p7.externalProperties.MinElevation, -80);
	local v8 = math.min(p7.externalProperties.MaxElevation, 80);
	p7.minElevationRad = math.rad(math.min(v7, v8));
	p7.maxElevationRad = math.rad(math.max(v7, v8));
	p7.curElevationRad = math.max(p7.curElevationRad, p7.minElevationRad);
	p7.curElevationRad = math.min(p7.curElevationRad, p7.maxElevationRad);
end;
function v4.SetAndBoundsCheckDistanceValues(p8)
	p8.minDistance = p8.externalProperties.MinDistance;
	p8.maxDistance = p8.externalProperties.MaxDistance;
	p8.curDistance = math.max(p8.curDistance, p8.minDistance);
	p8.curDistance = math.min(p8.curDistance, p8.maxDistance);
end;
function v4.LoadNumberValueParameters(p9)
	p9:LoadOrCreateNumberValueParameter("InitialElevation", "NumberValue", nil);
	p9:LoadOrCreateNumberValueParameter("InitialDistance", "NumberValue", nil);
	p9:LoadOrCreateNumberValueParameter("ReferenceAzimuth", "NumberValue", p9.SetAndBoundsCheckAzimuthValue);
	p9:LoadOrCreateNumberValueParameter("CWAzimuthTravel", "NumberValue", p9.SetAndBoundsCheckAzimuthValues);
	p9:LoadOrCreateNumberValueParameter("CCWAzimuthTravel", "NumberValue", p9.SetAndBoundsCheckAzimuthValues);
	p9:LoadOrCreateNumberValueParameter("MinElevation", "NumberValue", p9.SetAndBoundsCheckElevationValues);
	p9:LoadOrCreateNumberValueParameter("MaxElevation", "NumberValue", p9.SetAndBoundsCheckElevationValues);
	p9:LoadOrCreateNumberValueParameter("MinDistance", "NumberValue", p9.SetAndBoundsCheckDistanceValues);
	p9:LoadOrCreateNumberValueParameter("MaxDistance", "NumberValue", p9.SetAndBoundsCheckDistanceValues);
	p9:LoadOrCreateNumberValueParameter("UseAzimuthLimits", "BoolValue", p9.SetAndBoundsCheckAzimuthValues);
	p9.curAzimuthRad = math.rad(p9.externalProperties.ReferenceAzimuth);
	p9.curElevationRad = math.rad(p9.externalProperties.InitialElevation);
	p9.curDistance = p9.externalProperties.InitialDistance;
	p9:SetAndBoundsCheckAzimuthValues();
	p9:SetAndBoundsCheckElevationValues();
	p9:SetAndBoundsCheckDistanceValues();
end;
function v4.GetModuleName(p10)
	return "OrbitalCamera";
end;
local u1 = require(script.Parent:WaitForChild("CameraUtils"));
function v4.SetInitialOrientation(p11, p12)
	if not p12 or not p12.RootPart then
		warn("OrbitalCamera could not set initial orientation due to missing humanoid");
		return;
	end;
	local l__unit__9 = (p12.RootPart.CFrame.lookVector - Vector3.new(0, 0.23, 0)).unit;
	if not u1.IsFinite((u1.GetAngleBetweenXZVectors(l__unit__9, p11:GetCameraLookVector()))) then

	end;
	if not u1.IsFinite(math.asin(p11:GetCameraLookVector().y) - math.asin(l__unit__9.y)) then

	end;
end;
function v4.GetCameraToSubjectDistance(p13)
	return p13.curDistance;
end;
local l__Players__2 = game:GetService("Players");
function v4.SetCameraToSubjectDistance(p14, p15)
	if l__Players__2.LocalPlayer then
		p14.currentSubjectDistance = math.clamp(p15, p14.minDistance, p14.maxDistance);
		p14.currentSubjectDistance = math.max(p14.currentSubjectDistance, p14.FIRST_PERSON_DISTANCE_THRESHOLD);
	end;
	p14.inFirstPerson = false;
	p14:UpdateMouseBehavior();
	return p14.currentSubjectDistance;
end;
local u3 = Vector3.new(0, 0, 0);
function v4.CalculateNewLookVector(p16, p17, p18)
	local v10 = p17 or p16:GetCameraLookVector();
	local v11 = math.asin(v10.y);
	local v12 = Vector2.new(p18.x, (math.clamp(p18.y, v11 - math.rad(80), v11 - math.rad(-80))));
	return (CFrame.Angles(0, -v12.x, 0) * CFrame.new(u3, v10) * CFrame.Angles(-v12.y, 0, 0)).lookVector;
end;
local u4 = require(script.Parent:WaitForChild("CameraInput"));
local l__VRService__5 = game:GetService("VRService");
local u6 = Vector3.new(1, 0, 1);
local u7 = 2 * math.pi;
function v4.Update(p19, p20)
	local v13 = tick();
	local v14 = v13 - p19.lastUpdate;
	local v15 = u4.getRotation() ~= Vector2.new();
	local l__CurrentCamera__16 = workspace.CurrentCamera;
	local v17 = l__CurrentCamera__16.CFrame;
	local l__Focus__18 = l__CurrentCamera__16.Focus;
	local v19 = l__CurrentCamera__16 and l__CurrentCamera__16.CameraSubject;
	local v20 = v19 and v19:IsA("VehicleSeat");
	local v21 = v19 and v19:IsA("SkateboardPlatform");
	if p19.lastUpdate == nil or v14 > 1 then
		p19.lastCameraTransform = nil;
	end;
	if v15 then
		p19.lastUserPanCamera = tick();
	end;
	local v22 = p19:GetSubjectPosition();
	if v22 and l__Players__2.LocalPlayer and l__CurrentCamera__16 then
		if p19.gamepadDollySpeedMultiplier ~= 1 then
			p19:SetCameraToSubjectDistance(p19.currentSubjectDistance * p19.gamepadDollySpeedMultiplier);
		end;
		local l__VREnabled__23 = l__VRService__5.VREnabled;
		local v24 = l__VREnabled__23 and p19:GetVRFocus(v22, v14) or CFrame.new(v22);
		local v25 = u4.getRotation();
		if l__VREnabled__23 and not p19:IsInFirstPerson() then
			local v26 = p19:GetCameraHeight();
			local v27 = v22 - l__CurrentCamera__16.CFrame.p;
			local l__magnitude__28 = v27.magnitude;
			if p19.currentSubjectDistance < l__magnitude__28 or v25.x ~= 0 then
				local v29 = p19:CalculateNewLookVector(v27.unit * u6, Vector2.new(v25.x, 0)) * math.min(l__magnitude__28, p19.currentSubjectDistance);
				local v30 = v24.p - v29;
				local v31 = l__CurrentCamera__16.CFrame.lookVector;
				if v25.x ~= 0 then
					v31 = v29;
				end;
				v17 = CFrame.new(v30, (Vector3.new(v30.x + v31.x, v30.y, v30.z + v31.z))) + Vector3.new(0, v26, 0);
			end;
		else
			p19.curAzimuthRad = p19.curAzimuthRad - v25.x;
			if p19.useAzimuthLimits then
				p19.curAzimuthRad = math.clamp(p19.curAzimuthRad, p19.minAzimuthAbsoluteRad, p19.maxAzimuthAbsoluteRad);
			else
				p19.curAzimuthRad = p19.curAzimuthRad ~= 0 and math.sign(p19.curAzimuthRad) * (math.abs(p19.curAzimuthRad) % u7) or 0;
			end;
			p19.curElevationRad = math.clamp(p19.curElevationRad + v25.y, p19.minElevationRad, p19.maxElevationRad);
			v17 = CFrame.new(v22 + p19.currentSubjectDistance * (CFrame.fromEulerAnglesYXZ(-p19.curElevationRad, p19.curAzimuthRad, 0) * v1), v22);
		end;
		p19.lastCameraTransform = v17;
		p19.lastCameraFocus = l__Focus__18;
		if (v20 or v21) and v19:IsA("BasePart") then
			p19.lastSubjectCFrame = v19.CFrame;
		else
			p19.lastSubjectCFrame = nil;
		end;
	end;
	p19.lastUpdate = v13;
	return v17, l__Focus__18;
end;
return v4;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX175"><Properties><string name="Name">BaseCamera</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent:WaitForChild("CameraUtils"));
local v2 = {};
v2.__index = v2;
local l__LocalPlayer__1 = game:GetService("Players").LocalPlayer;
local u2 = Vector3.new(0, 0, 0);
local l__UserGameSettings__3 = UserSettings():GetService("UserGameSettings");
function v2.new()
	local v3 = setmetatable({}, v2);
	v3.FIRST_PERSON_DISTANCE_THRESHOLD = 1;
	v3.cameraType = nil;
	v3.cameraMovementMode = nil;
	v3.lastCameraTransform = nil;
	v3.lastUserPanCamera = tick();
	v3.humanoidRootPart = nil;
	v3.humanoidCache = {};
	v3.lastSubject = nil;
	v3.lastSubjectPosition = Vector3.new(0, 5, 0);
	v3.lastSubjectCFrame = CFrame.new(v3.lastSubjectPosition);
	v3.defaultSubjectDistance = math.clamp(12.5, l__LocalPlayer__1.CameraMinZoomDistance, l__LocalPlayer__1.CameraMaxZoomDistance);
	v3.currentSubjectDistance = math.clamp(12.5, l__LocalPlayer__1.CameraMinZoomDistance, l__LocalPlayer__1.CameraMaxZoomDistance);
	v3.inFirstPerson = false;
	v3.inMouseLockedMode = false;
	v3.portraitMode = false;
	v3.isSmallTouchScreen = false;
	v3.resetCameraAngle = true;
	v3.enabled = false;
	v3.PlayerGui = nil;
	v3.cameraChangedConn = nil;
	v3.viewportSizeChangedConn = nil;
	v3.shouldUseVRRotation = false;
	v3.VRRotationIntensityAvailable = false;
	v3.lastVRRotationIntensityCheckTime = 0;
	v3.lastVRRotationTime = 0;
	v3.vrRotateKeyCooldown = {};
	v3.cameraTranslationConstraints = Vector3.new(1, 1, 1);
	v3.humanoidJumpOrigin = nil;
	v3.trackingHumanoid = nil;
	v3.cameraFrozen = false;
	v3.subjectStateChangedConn = nil;
	v3.gamepadZoomPressConnection = nil;
	v3.mouseLockOffset = u2;
	if l__LocalPlayer__1.Character then
		v3:OnCharacterAdded(l__LocalPlayer__1.Character);
	end;
	l__LocalPlayer__1.CharacterAdded:Connect(function(p1)
		v3:OnCharacterAdded(p1);
	end);
	if v3.cameraChangedConn then
		v3.cameraChangedConn:Disconnect();
	end;
	v3.cameraChangedConn = workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		v3:OnCurrentCameraChanged();
	end);
	v3:OnCurrentCameraChanged();
	if v3.playerCameraModeChangeConn then
		v3.playerCameraModeChangeConn:Disconnect();
	end;
	v3.playerCameraModeChangeConn = l__LocalPlayer__1:GetPropertyChangedSignal("CameraMode"):Connect(function()
		v3:OnPlayerCameraPropertyChange();
	end);
	if v3.minDistanceChangeConn then
		v3.minDistanceChangeConn:Disconnect();
	end;
	v3.minDistanceChangeConn = l__LocalPlayer__1:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(function()
		v3:OnPlayerCameraPropertyChange();
	end);
	if v3.maxDistanceChangeConn then
		v3.maxDistanceChangeConn:Disconnect();
	end;
	v3.maxDistanceChangeConn = l__LocalPlayer__1:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(function()
		v3:OnPlayerCameraPropertyChange();
	end);
	if v3.playerDevTouchMoveModeChangeConn then
		v3.playerDevTouchMoveModeChangeConn:Disconnect();
	end;
	v3.playerDevTouchMoveModeChangeConn = l__LocalPlayer__1:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
		v3:OnDevTouchMovementModeChanged();
	end);
	v3:OnDevTouchMovementModeChanged();
	if v3.gameSettingsTouchMoveMoveChangeConn then
		v3.gameSettingsTouchMoveMoveChangeConn:Disconnect();
	end;
	v3.gameSettingsTouchMoveMoveChangeConn = l__UserGameSettings__3:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
		v3:OnGameSettingsTouchMovementModeChanged();
	end);
	v3:OnGameSettingsTouchMovementModeChanged();
	l__UserGameSettings__3:SetCameraYInvertVisible();
	l__UserGameSettings__3:SetGamepadCameraSensitivityVisible();
	v3.hasGameLoaded = game:IsLoaded();
	if not v3.hasGameLoaded then
		v3.gameLoadedConn = game.Loaded:Connect(function()
			v3.hasGameLoaded = true;
			v3.gameLoadedConn:Disconnect();
			v3.gameLoadedConn = nil;
		end);
	end;
	v3:OnPlayerCameraPropertyChange();
	return v3;
end;
function v2.GetModuleName(p2)
	return "BaseCamera";
end;
local l__UserInputService__4 = game:GetService("UserInputService");
function v2.OnCharacterAdded(p3, p4)
	p3.resetCameraAngle = p3.resetCameraAngle or p3:GetEnabled();
	p3.humanoidRootPart = nil;
	if l__UserInputService__4.TouchEnabled then
		p3.PlayerGui = l__LocalPlayer__1:WaitForChild("PlayerGui");
		for v4, v5 in ipairs(p4:GetChildren()) do
			if v5:IsA("Tool") then
				p3.isAToolEquipped = true;
			end;
		end;
		p4.ChildAdded:Connect(function(p5)
			if p5:IsA("Tool") then
				p3.isAToolEquipped = true;
			end;
		end);
		p4.ChildRemoved:Connect(function(p6)
			if p6:IsA("Tool") then
				p3.isAToolEquipped = false;
			end;
		end);
	end;
end;
function v2.GetHumanoidRootPart(p7)
	if not p7.humanoidRootPart and l__LocalPlayer__1.Character then
		local v6 = l__LocalPlayer__1.Character:FindFirstChildOfClass("Humanoid");
		if v6 then
			p7.humanoidRootPart = v6.RootPart;
		end;
	end;
	return p7.humanoidRootPart;
end;
function v2.GetBodyPartToFollow(p8, p9, p10)
	local v7 = nil;
	if p9:GetState() == Enum.HumanoidStateType.Dead then
		v7 = p9.Parent;
		if not v7 or not v7:IsA("Model") then
			return p9.RootPart;
		end;
	else
		return p9.RootPart;
	end;
	return v7:FindFirstChild("Head") or p9.RootPart;
end;
local l__VRService__5 = game:GetService("VRService");
local u6 = Vector3.new(0, 1.5, 0);
local u7 = Vector3.new(2, 2, 1);
local u8 = Vector3.new(0, 2, 0);
local u9 = Vector3.new(0, 1.5, 0);
function v2.GetSubjectCFrame(p11)
	local v8 = p11.lastSubjectCFrame;
	local l__CurrentCamera__9 = workspace.CurrentCamera;
	local v10 = l__CurrentCamera__9 and l__CurrentCamera__9.CameraSubject;
	if not v10 then
		return v8;
	end;
	if v10:IsA("Humanoid") then
		local v11 = v10:GetState() == Enum.HumanoidStateType.Dead;
		if l__VRService__5.VREnabled and v11 and v10 == p11.lastSubject then
			v8 = p11.lastSubjectCFrame;
		else
			local v12 = v10.RootPart;
			if v11 and v10.Parent and v10.Parent:IsA("Model") then
				v12 = v10.Parent:FindFirstChild("Head") and v12;
			end;
			if v12 and v12:IsA("BasePart") then
				if v10.RigType == Enum.HumanoidRigType.R15 then
					if v10.AutomaticScalingEnabled then
						local v13 = u6;
						local l__RootPart__14 = v10.RootPart;
						if v12 == l__RootPart__14 then
							v13 = v13 + Vector3.new(0, (l__RootPart__14.Size.Y - u7.Y) / 2, 0);
						end;
					else
						v13 = u8;
					end;
				else
					v13 = u9;
				end;
				if v11 then
					v13 = u2;
				end;
				v8 = v12.CFrame * CFrame.new(v13 + v10.CameraOffset);
			end;
		end;
	elseif v10:IsA("BasePart") then
		v8 = v10.CFrame;
	elseif v10:IsA("Model") then
		if v10.PrimaryPart then
			v8 = v10:GetPrimaryPartCFrame();
		else
			v8 = CFrame.new();
		end;
	end;
	if v8 then
		p11.lastSubjectCFrame = v8;
	end;
	return v8;
end;
function v2.GetSubjectVelocity(p12)
	local l__CurrentCamera__15 = workspace.CurrentCamera;
	local v16 = l__CurrentCamera__15 and l__CurrentCamera__15.CameraSubject;
	if not v16 then
		return u2;
	end;
	if v16:IsA("BasePart") then
		return v16.Velocity;
	end;
	if v16:IsA("Humanoid") then
		local l__RootPart__17 = v16.RootPart;
		if l__RootPart__17 then
			return l__RootPart__17.Velocity;
		end;
	elseif v16:IsA("Model") then
		local l__PrimaryPart__18 = v16.PrimaryPart;
		if l__PrimaryPart__18 then
			return l__PrimaryPart__18.Velocity;
		end;
	end;
	return u2;
end;
function v2.GetSubjectRotVelocity(p13)
	local l__CurrentCamera__19 = workspace.CurrentCamera;
	local v20 = l__CurrentCamera__19 and l__CurrentCamera__19.CameraSubject;
	if not v20 then
		return u2;
	end;
	if v20:IsA("BasePart") then
		return v20.RotVelocity;
	end;
	if v20:IsA("Humanoid") then
		local l__RootPart__21 = v20.RootPart;
		if l__RootPart__21 then
			return l__RootPart__21.RotVelocity;
		end;
	elseif v20:IsA("Model") then
		local l__PrimaryPart__22 = v20.PrimaryPart;
		if l__PrimaryPart__22 then
			return l__PrimaryPart__22.RotVelocity;
		end;
	end;
	return u2;
end;
local u10 = require(script.Parent:WaitForChild("CameraInput"));
local u11 = require(script.Parent:WaitForChild("ZoomController"));
function v2.StepZoom(p14)
	local l__currentSubjectDistance__23 = p14.currentSubjectDistance;
	local v24 = u10.getZoomDelta();
	if math.abs(v24) > 0 then
		if v24 > 0 then
			local v25 = math.max(l__currentSubjectDistance__23 + v24 * (1 + l__currentSubjectDistance__23 * 0.5), p14.FIRST_PERSON_DISTANCE_THRESHOLD);
		else
			v25 = math.max((l__currentSubjectDistance__23 + v24) / (1 - v24 * 0.5), 0.5);
		end;
		if v25 < p14.FIRST_PERSON_DISTANCE_THRESHOLD then
			v25 = 0.5;
		end;
		p14:SetCameraToSubjectDistance(v25);
	end;
	return u11.GetZoomRadius();
end;
local u12 = Vector3.new(0, 5, 0);
local u13 = Vector3.new(0, 4, 0);
function v2.GetSubjectPosition(p15)
	local v26 = p15.lastSubjectPosition;
	local l__CurrentCamera__27 = game.Workspace.CurrentCamera;
	local v28 = l__CurrentCamera__27 and l__CurrentCamera__27.CameraSubject;
	if not v28 then
		return;
	end;
	if v28:IsA("Humanoid") then
		local v29 = v28:GetState() == Enum.HumanoidStateType.Dead;
		if l__VRService__5.VREnabled and v29 and v28 == p15.lastSubject then
			v26 = p15.lastSubjectPosition;
		else
			local v30 = v28.RootPart;
			if v29 and v28.Parent and v28.Parent:IsA("Model") then
				v30 = v28.Parent:FindFirstChild("Head") and v30;
			end;
			if v30 and v30:IsA("BasePart") then
				if v28.RigType == Enum.HumanoidRigType.R15 then
					if v28.AutomaticScalingEnabled then
						local v31 = u6;
						if v30 == v28.RootPart then
							v31 = v31 + Vector3.new(0, v28.RootPart.Size.Y / 2 - u7.Y / 2, 0);
						end;
					else
						v31 = u8;
					end;
				else
					v31 = u9;
				end;
				if v29 then
					v31 = u2;
				end;
				v26 = v30.CFrame.p + v30.CFrame:vectorToWorldSpace(v31 + v28.CameraOffset);
			end;
		end;
	elseif v28:IsA("VehicleSeat") then
		local v32 = u12;
		if l__VRService__5.VREnabled then
			v32 = u13;
		end;
		v26 = v28.CFrame.p + v28.CFrame:vectorToWorldSpace(v32);
	elseif v28:IsA("SkateboardPlatform") then
		v26 = v28.CFrame.p + u12;
	elseif v28:IsA("BasePart") then
		v26 = v28.CFrame.p;
	elseif v28:IsA("Model") then
		if v28.PrimaryPart then
			v26 = v28:GetPrimaryPartCFrame().p;
		else
			v26 = v28:GetModelCFrame().p;
		end;
	end;
	p15.lastSubject = v28;
	p15.lastSubjectPosition = v26;
	return v26;
end;
function v2.UpdateDefaultSubjectDistance(p16)
	if p16.portraitMode then
		p16.defaultSubjectDistance = math.clamp(25, l__LocalPlayer__1.CameraMinZoomDistance, l__LocalPlayer__1.CameraMaxZoomDistance);
		return;
	end;
	p16.defaultSubjectDistance = math.clamp(12.5, l__LocalPlayer__1.CameraMinZoomDistance, l__LocalPlayer__1.CameraMaxZoomDistance);
end;
function v2.OnViewportSizeChanged(p17)
	local l__ViewportSize__33 = game.Workspace.CurrentCamera.ViewportSize;
	p17.portraitMode = l__ViewportSize__33.X < l__ViewportSize__33.Y;
	local v34 = l__UserInputService__4.TouchEnabled;
	if v34 then
		v34 = true;
		if not (l__ViewportSize__33.Y < 500) then
			v34 = l__ViewportSize__33.X < 700;
		end;
	end;
	p17.isSmallTouchScreen = v34;
	p17:UpdateDefaultSubjectDistance();
end;
function v2.OnCurrentCameraChanged(p18)
	if l__UserInputService__4.TouchEnabled then
		if p18.viewportSizeChangedConn then
			p18.viewportSizeChangedConn:Disconnect();
			p18.viewportSizeChangedConn = nil;
		end;
		local l__CurrentCamera__35 = game.Workspace.CurrentCamera;
		if l__CurrentCamera__35 then
			p18:OnViewportSizeChanged();
			p18.viewportSizeChangedConn = l__CurrentCamera__35:GetPropertyChangedSignal("ViewportSize"):Connect(function()
				p18:OnViewportSizeChanged();
			end);
		end;
	end;
	if p18.cameraSubjectChangedConn then
		p18.cameraSubjectChangedConn:Disconnect();
		p18.cameraSubjectChangedConn = nil;
	end;
	local l__CurrentCamera__36 = game.Workspace.CurrentCamera;
	if l__CurrentCamera__36 then
		p18.cameraSubjectChangedConn = l__CurrentCamera__36:GetPropertyChangedSignal("CameraSubject"):Connect(function()
			p18:OnNewCameraSubject();
		end);
		p18:OnNewCameraSubject();
	end;
end;
function v2.OnDynamicThumbstickEnabled(p19)
	if l__UserInputService__4.TouchEnabled then
		p19.isDynamicThumbstickEnabled = true;
	end;
end;
function v2.OnDynamicThumbstickDisabled(p20)
	p20.isDynamicThumbstickEnabled = false;
end;
function v2.OnGameSettingsTouchMovementModeChanged(p21)
	if l__LocalPlayer__1.DevTouchMovementMode == Enum.DevTouchMovementMode.UserChoice then
		if l__UserGameSettings__3.TouchMovementMode ~= Enum.TouchMovementMode.DynamicThumbstick and l__UserGameSettings__3.TouchMovementMode ~= Enum.TouchMovementMode.Default then
			p21:OnDynamicThumbstickDisabled();
			return;
		end;
	else
		return;
	end;
	p21:OnDynamicThumbstickEnabled();
end;
function v2.OnDevTouchMovementModeChanged(p22)
	if l__LocalPlayer__1.DevTouchMovementMode == Enum.DevTouchMovementMode.DynamicThumbstick then
		p22:OnDynamicThumbstickEnabled();
		return;
	end;
	p22:OnGameSettingsTouchMovementModeChanged();
end;
function v2.OnPlayerCameraPropertyChange(p23)
	p23:SetCameraToSubjectDistance(p23.currentSubjectDistance);
end;
local u14 = math.rad(15);
function v2.GetCameraHeight(p24)
	if not l__VRService__5.VREnabled or not (not p24.inFirstPerson) then
		return 0;
	end;
	return math.sin(u14) * p24.currentSubjectDistance;
end;
function v2.InputTranslationToCameraAngleChange(p25, p26, p27)
	return p26 * p27;
end;
function v2.GamepadZoomPress(p28)
	local v37 = p28:GetCameraToSubjectDistance();
	if v37 > 15 then
		p28:SetCameraToSubjectDistance(10);
		return;
	end;
	if v37 > 5 then
		p28:SetCameraToSubjectDistance(0);
		return;
	end;
	p28:SetCameraToSubjectDistance(20);
end;
function v2.Enable(p29, p30)
	if p29.enabled ~= p30 then
		p29.enabled = p30;
		if p29.enabled then
			u10.setInputEnabled(true);
			p29.gamepadZoomPressConnection = u10.gamepadZoomPress:Connect(function()
				p29:GamepadZoomPress();
			end);
			if l__LocalPlayer__1.CameraMode == Enum.CameraMode.LockFirstPerson then
				p29.currentSubjectDistance = 0.5;
				if not p29.inFirstPerson then
					p29:EnterFirstPerson();
					return;
				end;
			end;
		else
			u10.setInputEnabled(false);
			if p29.gamepadZoomPressConnection then
				p29.gamepadZoomPressConnection:Disconnect();
				p29.gamepadZoomPressConnection = nil;
			end;
			p29:Cleanup();
		end;
	end;
end;
function v2.GetEnabled(p31)
	return p31.enabled;
end;
function v2.Cleanup(p32)
	if p32.subjectStateChangedConn then
		p32.subjectStateChangedConn:Disconnect();
		p32.subjectStateChangedConn = nil;
	end;
	if p32.viewportSizeChangedConn then
		p32.viewportSizeChangedConn:Disconnect();
		p32.viewportSizeChangedConn = nil;
	end;
	p32.lastCameraTransform = nil;
	p32.lastSubjectCFrame = nil;
	if l__UserInputService__4.MouseBehavior ~= Enum.MouseBehavior.LockCenter then
		l__UserInputService__4.MouseBehavior = Enum.MouseBehavior.Default;
	end;
end;
local u15 = require(script.Parent:WaitForChild("CameraUI"));
local u16 = require(script.Parent:WaitForChild("CameraToggleStateController"));
function v2.UpdateMouseBehavior(p33)
	if p33.isCameraToggle and l__UserGameSettings__3.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove == false then
		u15.setCameraModeToastEnabled(true);
		u10.enableCameraToggleInput();
		u16(p33.inFirstPerson);
		return;
	end;
	u15.setCameraModeToastEnabled(false);
	u10.disableCameraToggleInput();
	if not p33.inFirstPerson and not p33.inMouseLockedMode then
		l__UserGameSettings__3.RotationType = Enum.RotationType.MovementRelative;
		l__UserInputService__4.MouseBehavior = Enum.MouseBehavior.Default;
		return;
	end;
	l__UserGameSettings__3.RotationType = Enum.RotationType.CameraRelative;
	l__UserInputService__4.MouseBehavior = Enum.MouseBehavior.LockCenter;
end;
function v2.UpdateForDistancePropertyChange(p34)
	p34:SetCameraToSubjectDistance(p34.currentSubjectDistance);
end;
function v2.SetCameraToSubjectDistance(p35, p36)
	if l__LocalPlayer__1.CameraMode == Enum.CameraMode.LockFirstPerson then
		p35.currentSubjectDistance = 0.5;
		if not p35.inFirstPerson then
			p35:EnterFirstPerson();
		end;
	else
		local v38 = math.clamp(p36, l__LocalPlayer__1.CameraMinZoomDistance, l__LocalPlayer__1.CameraMaxZoomDistance);
		if v38 < 1 then
			p35.currentSubjectDistance = 0.5;
			if not p35.inFirstPerson then
				p35:EnterFirstPerson();
			end;
		else
			p35.currentSubjectDistance = v38;
			if p35.inFirstPerson then
				p35:LeaveFirstPerson();
			end;
		end;
	end;
	u11.SetZoomParameters(p35.currentSubjectDistance, math.sign(p36 - p35.currentSubjectDistance));
	return p35.currentSubjectDistance;
end;
function v2.SetCameraType(p37, p38)
	p37.cameraType = p38;
end;
function v2.GetCameraType(p39)
	return p39.cameraType;
end;
function v2.SetCameraMovementMode(p40, p41)
	p40.cameraMovementMode = p41;
end;
function v2.GetCameraMovementMode(p42)
	return p42.cameraMovementMode;
end;
function v2.SetIsMouseLocked(p43, p44)
	p43.inMouseLockedMode = p44;
end;
function v2.GetIsMouseLocked(p45)
	return p45.inMouseLockedMode;
end;
function v2.SetMouseLockOffset(p46, p47)
	p46.mouseLockOffset = p47;
end;
function v2.GetMouseLockOffset(p48)
	return p48.mouseLockOffset;
end;
function v2.InFirstPerson(p49)
	return p49.inFirstPerson;
end;
function v2.EnterFirstPerson(p50)

end;
function v2.LeaveFirstPerson(p51)

end;
function v2.GetCameraToSubjectDistance(p52)
	return p52.currentSubjectDistance;
end;
function v2.GetMeasuredDistanceToFocus(p53)
	local l__CurrentCamera__39 = game.Workspace.CurrentCamera;
	if not l__CurrentCamera__39 then
		return nil;
	end;
	return (l__CurrentCamera__39.CoordinateFrame.p - l__CurrentCamera__39.Focus.p).magnitude;
end;
local u17 = Vector3.new(0, 0, 1);
function v2.GetCameraLookVector(p54)
	return game.Workspace.CurrentCamera and game.Workspace.CurrentCamera.CFrame.lookVector or u17;
end;
local u18 = math.rad(80);
local u19 = math.rad(-80);
function v2.CalculateNewLookCFrameFromArg(p55, p56, p57)
	local v40 = p56 or p55:GetCameraLookVector();
	local v41 = math.asin(v40.y);
	local v42 = Vector2.new(p57.x, (math.clamp(p57.y, -u18 + v41, -u19 + v41)));
	return CFrame.Angles(0, -v42.x, 0) * CFrame.new(u2, v40) * CFrame.Angles(-v42.y, 0, 0);
end;
function v2.CalculateNewLookVectorFromArg(p58, p59, p60)
	return p58:CalculateNewLookCFrameFromArg(p59, p60).lookVector;
end;
local u20 = Vector3.new(1, 0, 1);
function v2.CalculateNewLookVectorVRFromArg(p61, p62)
	local v43 = Vector2.new(p62.x, 0);
	return ((CFrame.Angles(0, -v43.x, 0) * CFrame.new(u2, ((p61:GetSubjectPosition() - game.Workspace.CurrentCamera.CFrame.p) * u20).unit) * CFrame.Angles(-v43.y, 0, 0)).lookVector * u20).unit;
end;
function v2.GetHumanoid(p63)
	local v44 = l__LocalPlayer__1 and l__LocalPlayer__1.Character;
	if not v44 then
		return nil;
	end;
	local v45 = p63.humanoidCache[l__LocalPlayer__1];
	if v45 and v45.Parent == v44 then
		return v45;
	end;
	p63.humanoidCache[l__LocalPlayer__1] = nil;
	local v46 = v44:FindFirstChildOfClass("Humanoid");
	if v46 then
		p63.humanoidCache[l__LocalPlayer__1] = v46;
	end;
	return v46;
end;
function v2.GetHumanoidPartToFollow(p64, p65, p66)
	if p66 ~= Enum.HumanoidStateType.Dead then
		return p65.Torso;
	end;
	local l__Parent__47 = p65.Parent;
	if not l__Parent__47 then
		return p65.Torso;
	end;
	return l__Parent__47:FindFirstChild("Head") or p65.Torso;
end;
function v2.ApplyVRTransform(p67)
	if not l__VRService__5.VREnabled then
		return;
	end;
	local v48 = p67.humanoidRootPart and p67.humanoidRootPart:FindFirstChild("RootJoint");
	if not v48 then
		return;
	end;
	local l__CameraSubject__49 = game.Workspace.CurrentCamera.CameraSubject;
	if not p67.inFirstPerson or not (not l__CameraSubject__49) and not (not l__CameraSubject__49:IsA("VehicleSeat")) then
		v48.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0);
		return;
	end;
	local v50 = l__VRService__5:GetUserCFrame(Enum.UserCFrame.Head);
	v48.C0 = CFrame.new((v50 - v50.p):vectorToObjectSpace(v50.p)) * CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0);
end;
function v2.IsInFirstPerson(p68)
	return p68.inFirstPerson;
end;
local l__StarterGui__21 = game:GetService("StarterGui");
function v2.ShouldUseVRRotation(p69)
	if not l__VRService__5.VREnabled then
		return false;
	end;
	if not p69.VRRotationIntensityAvailable and tick() - p69.lastVRRotationIntensityCheckTime < 1 then
		return false;
	end;
	local v51, v52 = pcall(function()
		return l__StarterGui__21:GetCore("VRRotationIntensity");
	end);
	p69.VRRotationIntensityAvailable = v51 and v52 ~= nil;
	p69.lastVRRotationIntensityCheckTime = tick();
	local v53 = v51;
	if v53 then
		v53 = false;
		if v52 ~= nil then
			v53 = v52 ~= "Smooth";
		end;
	end;
	p69.shouldUseVRRotation = v53;
	return p69.shouldUseVRRotation;
end;
local u22 = Vector2.new(0, 0);
function v2.GetVRRotationInput(p70)
	local v54 = u22;
	local v55, v56 = pcall(function()
		return l__StarterGui__21:GetCore("VRRotationIntensity");
	end);
	if not v55 then
		return;
	end;
	local v57 = p70:GetRepeatDelayValue(v56) <= tick() - p70.lastVRRotationTime;
	if p70:GetActivateValue() <= math.abs(u22.x) then
		if v57 or not p70.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] then
			local v58 = 1;
			if u22.x < 0 then
				v58 = -1;
			end;
			v54 = v54 + p70:GetRotateAmountValue(v56) * v58;
			p70.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = true;
		end;
	elseif math.abs(u22.x) < p70:GetActivateValue() - 0.1 then
		p70.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = nil;
	end;
	p70.vrRotateKeyCooldown[Enum.KeyCode.Left] = nil;
	p70.vrRotateKeyCooldown[Enum.KeyCode.Right] = nil;
	if v54 ~= u22 then
		p70.lastVRRotationTime = tick();
	end;
	return v54;
end;
function v2.CancelCameraFreeze(p71, p72)
	if not p72 then
		p71.cameraTranslationConstraints = Vector3.new(p71.cameraTranslationConstraints.x, 1, p71.cameraTranslationConstraints.z);
	end;
	if p71.cameraFrozen then
		p71.trackingHumanoid = nil;
		p71.cameraFrozen = false;
	end;
end;
function v2.StartCameraFreeze(p73, p74, p75)
	if not p73.cameraFrozen then
		p73.humanoidJumpOrigin = p74;
		p73.trackingHumanoid = p75;
		p73.cameraTranslationConstraints = Vector3.new(p73.cameraTranslationConstraints.x, 0, p73.cameraTranslationConstraints.z);
		p73.cameraFrozen = true;
	end;
end;
function v2.OnNewCameraSubject(p76)
	if p76.subjectStateChangedConn then
		p76.subjectStateChangedConn:Disconnect();
		p76.subjectStateChangedConn = nil;
	end;
	local v59 = workspace.CurrentCamera and workspace.CurrentCamera.CameraSubject;
	if p76.trackingHumanoid ~= v59 then
		p76:CancelCameraFreeze();
	end;
	if v59 and v59:IsA("Humanoid") then
		p76.subjectStateChangedConn = v59.StateChanged:Connect(function(p77, p78)
			if l__VRService__5.VREnabled and p78 == Enum.HumanoidStateType.Jumping and not p76.inFirstPerson then
				p76:StartCameraFreeze(p76:GetSubjectPosition(), v59);
				return;
			end;
			if p78 ~= Enum.HumanoidStateType.Jumping and p78 ~= Enum.HumanoidStateType.Freefall then
				p76:CancelCameraFreeze(true);
			end;
		end);
	end;
end;
function v2.GetVRFocus(p79, p80, p81)
	local v60 = p79.LastCameraFocus and p80;
	if not p79.cameraFrozen then
		p79.cameraTranslationConstraints = Vector3.new(p79.cameraTranslationConstraints.x, math.min(1, p79.cameraTranslationConstraints.y + 0.42 * p81), p79.cameraTranslationConstraints.z);
	end;
	if p79.cameraFrozen and p79.humanoidJumpOrigin and v60.y < p79.humanoidJumpOrigin.y then
		local v61 = CFrame.new(Vector3.new(p80.x, math.min(p79.humanoidJumpOrigin.y, v60.y + 5 * p81), p80.z));
	else
		v61 = CFrame.new(Vector3.new(p80.x, v60.y, p80.z):lerp(p80, p79.cameraTranslationConstraints.y));
	end;
	if p79.cameraFrozen then
		if p79.inFirstPerson then
			p79:CancelCameraFreeze();
		end;
		if p79.humanoidJumpOrigin and p80.y < p79.humanoidJumpOrigin.y - 0.5 then
			p79:CancelCameraFreeze();
		end;
	end;
	return v61;
end;
local u23 = Vector2.new(math.rad(15), 0);
local u24 = Vector2.new(math.rad(45), 0);
function v2.GetRotateAmountValue(p82, p83)
	p83 = p83 or l__StarterGui__21:GetCore("VRRotationIntensity");
	if p83 then
		if p83 == "Low" then
			return u23;
		end;
		if p83 == "High" then
			return u24;
		end;
	end;
	return u22;
end;
function v2.GetRepeatDelayValue(p84, p85)
	p85 = p85 or l__StarterGui__21:GetCore("VRRotationIntensity");
	if p85 then
		if p85 == "Low" then
			return 0.1;
		end;
		if p85 == "High" then
			return 0.4;
		end;
	end;
	return 0;
end;
function v2.Update(p86, p87)
	error("BaseCamera:Update() This is a virtual function that should never be getting called.", 2);
end;
return v2;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX182"><Properties><string name="Name">CameraToggleStateController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local l__UserInputService__2 = game:GetService("UserInputService");
local l__UserGameSettings__3 = UserSettings():GetService("UserGameSettings");
local v4 = l__Players__1.LocalPlayer;
if not v4 then
	l__Players__1:GetPropertyChangedSignal("LocalPlayer"):Wait();
	v4 = l__Players__1.LocalPlayer;
end;
local l__mouse__5 = v4:GetMouse();
local v6 = require(script.Parent:WaitForChild("CameraInput"));
local v7 = require(script.Parent:WaitForChild("CameraUI"));
local v8 = tick();
v7.setCameraModeToastEnabled(false);
local u1 = false;
local u2 = false;
local u3 = v8;
local u4 = false;
local u5 = false;
return function(p1)
	local v9 = v6.getTogglePan();
	if p1 and v9 ~= u1 then
		u2 = true;
	end;
	if u1 ~= v9 or tick() - u3 > 3 then
		local v10 = v9 and tick() - u3 < 3;
		v7.setCameraModeToastOpen(v10);
		if v9 then
			u2 = false;
		end;
		u3 = tick();
		u1 = v9;
	end;
	if p1 ~= u4 then
		if p1 then
			u5 = v6.getTogglePan();
			v6.setTogglePan(true);
		elseif not u2 then
			v6.setTogglePan(u5);
		end;
	end;
	if p1 then
		if v6.getTogglePan() then
			l__mouse__5.Icon = "rbxasset://textures/Cursors/CrossMouseIcon.png";
			l__UserInputService__2.MouseBehavior = Enum.MouseBehavior.LockCenter;
			l__UserGameSettings__3.RotationType = Enum.RotationType.CameraRelative;
		else
			l__mouse__5.Icon = "";
			l__UserInputService__2.MouseBehavior = Enum.MouseBehavior.Default;
			l__UserGameSettings__3.RotationType = Enum.RotationType.CameraRelative;
		end;
	elseif v6.getTogglePan() then
		l__mouse__5.Icon = "rbxasset://textures/Cursors/CrossMouseIcon.png";
		l__UserInputService__2.MouseBehavior = Enum.MouseBehavior.LockCenter;
		l__UserGameSettings__3.RotationType = Enum.RotationType.MovementRelative;
	elseif v6.getHoldPan() then
		l__mouse__5.Icon = "";
		l__UserInputService__2.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition;
		l__UserGameSettings__3.RotationType = Enum.RotationType.MovementRelative;
	else
		l__mouse__5.Icon = "";
		l__UserInputService__2.MouseBehavior = Enum.MouseBehavior.Default;
		l__UserGameSettings__3.RotationType = Enum.RotationType.MovementRelative;
	end;
	u4 = p1;
end;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX189"><Properties><string name="Name">Poppercam</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local u1 = CFrame.new();
function v1.new()
	return setmetatable({
		lastCFrame = nil
	}, v1);
end;
local u2 = function(p1)
	local v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13 = p1:components();
	return CFrame.new(0, 0, 0, v5, v6, v7, v8, v9, v10, v11, v12, v13);
end;
local u3 = function(p2)
	local v14, v15 = p2:toAxisAngle();
	return v14 * v15;
end;
local u4 = function(p3)
	local l__magnitude__16 = p3.magnitude;
	if not (l__magnitude__16 > 1E-05) then
		return u1;
	end;
	return CFrame.fromAxisAngle(p3, l__magnitude__16);
end;
function v1.Step(p4, p5, p6)
	local v17 = p4.lastCFrame and p6;
	p4.lastCFrame = p6;
	local l__p__18 = p6.p;
	local v19 = u2(p6);
	local v20 = u3(v19 * u2(v17):inverse()) / p5;
	local u5 = (l__p__18 - v17.p) / p5;
	return {
		extrapolate = function(p7)
			return u4(v20 * p7) * v19 + (u5 * p7 + l__p__18);
		end, 
		posVelocity = u5, 
		rotVelocity = v20
	};
end;
function v1.Reset(p8)
	p8.lastCFrame = nil;
end;
u1 = require;
u4 = script;
u3 = u4.Parent;
u2 = "BaseOcclusion";
u4 = u3;
u3 = u3.WaitForChild;
u1 = u1(u3(u4, u2));
u3 = setmetatable;
u4 = {};
u2 = u1;
u3 = u3(u4, u2);
u3.__index = u3;
u4 = function()
	local v21 = setmetatable(u1.new(), u3);
	v21.focusExtrapolator = v1.new();
	return v21;
end;
u3.new = u4;
u4 = function(p9)
	return Enum.DevCameraOcclusionMode.Zoom;
end;
u3.GetOcclusionMode = u4;
u4 = function(p10, p11)
	p10.focusExtrapolator:Reset();
end;
u3.Enable = u4;
local u6 = require(script.Parent:WaitForChild("ZoomController"));
u4 = function(p12, p13, p14, p15, p16)
	local v22 = CFrame.new(p15.p, p14.p) * CFrame.new(0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0, -1);
	return v22 * CFrame.new(0, 0, (u6.Update(p13, v22, (p12.focusExtrapolator:Step(p13, v22))))), p15;
end;
u3.Update = u4;
u4 = function(p17, p18, p19)

end;
u3.CharacterAdded = u4;
u4 = function(p20, p21, p22)

end;
u3.CharacterRemoving = u4;
u4 = function(p23, p24)

end;
u3.OnCameraSubjectChanged = u4;
return u3;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX196"><Properties><string name="Name">ClassicCamera</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = Vector2.new(0, 0);
local v2 = require(script.Parent:WaitForChild("BaseCamera"));
local v3 = setmetatable({}, v2);
v3.__index = v3;
local u1 = require(script.Parent:WaitForChild("CameraUtils"));
function v3.new()
	local v4 = setmetatable(v2.new(), v3);
	v4.isFollowCamera = false;
	v4.isCameraToggle = false;
	v4.lastUpdate = tick();
	v4.cameraToggleSpring = u1.Spring.new(5, 0);
	return v4;
end;
local u2 = require(script.Parent:WaitForChild("CameraInput"));
function v3.GetCameraToggleOffset(p1, p2)
	if not p1.isCameraToggle then
		return Vector3.new();
	end;
	local l__currentSubjectDistance__5 = p1.currentSubjectDistance;
	if u2.getTogglePan() then
		p1.cameraToggleSpring.goal = math.clamp(u1.map(l__currentSubjectDistance__5, 0.5, p1.FIRST_PERSON_DISTANCE_THRESHOLD, 0, 1), 0, 1);
	else
		p1.cameraToggleSpring.goal = 0;
	end;
	return Vector3.new(0, p1.cameraToggleSpring:step(p2) * (math.clamp(u1.map(l__currentSubjectDistance__5, 0.5, 64, 0, 1), 0, 1) + 1), 0);
end;
function v3.SetCameraMovementMode(p3, p4)
	v2.SetCameraMovementMode(p3, p4);
	p3.isFollowCamera = p4 == Enum.ComputerCameraMovementMode.Follow;
	p3.isCameraToggle = p4 == Enum.ComputerCameraMovementMode.CameraToggle;
end;
local u3 = CFrame.fromOrientation(math.rad(-15), 0, 0);
local l__Players__4 = game:GetService("Players");
local u5 = math.rad(0);
local u6 = math.rad(220);
local u7 = math.rad(250);
local l__VRService__8 = game:GetService("VRService");
function v3.Update(p5)
	local v6 = tick();
	local v7 = v6 - p5.lastUpdate;
	local l__CurrentCamera__8 = workspace.CurrentCamera;
	local v9 = l__CurrentCamera__8.CFrame;
	local v10 = l__CurrentCamera__8.Focus;
	local v11 = nil;
	if p5.resetCameraAngle then
		local v12 = p5:GetHumanoidRootPart();
		if v12 then
			v11 = (v12.CFrame * u3).lookVector;
		else
			v11 = u3.lookVector;
		end;
		p5.resetCameraAngle = false;
	end;
	local v13 = p5:GetHumanoid();
	local l__CameraSubject__14 = l__CurrentCamera__8.CameraSubject;
	local v15 = l__CameraSubject__14 and l__CameraSubject__14:IsA("VehicleSeat");
	local v16 = l__CameraSubject__14 and l__CameraSubject__14:IsA("SkateboardPlatform");
	local v17 = v13 and v13:GetState() == Enum.HumanoidStateType.Climbing;
	if p5.lastUpdate == nil or v7 > 1 then
		p5.lastCameraTransform = nil;
	end;
	local v18 = u2.getRotation();
	p5:StepZoom();
	local v19 = p5:GetCameraHeight();
	if u2.getRotation() ~= Vector2.new() then
		u5 = 0;
		p5.lastUserPanCamera = tick();
	end;
	local v20 = v6 - p5.lastUserPanCamera < 2;
	local v21 = p5:GetSubjectPosition();
	if v21 and l__Players__4.LocalPlayer and l__CurrentCamera__8 then
		local v22 = p5:GetCameraToSubjectDistance();
		if v22 < 0.5 then
			v22 = 0.5;
		end;
		if p5:GetIsMouseLocked() and not p5:IsInFirstPerson() then
			local v23 = p5:CalculateNewLookCFrameFromArg(v11, v18);
			local v24 = p5:GetMouseLockOffset();
			local v25 = v24.X * v23.rightVector + v24.Y * v23.upVector + v24.Z * v23.lookVector;
			if u1.IsFiniteVector3(v25) then
				v21 = v21 + v25;
			end;
		elseif u2.getRotation() == Vector2.new() and p5.lastCameraTransform then
			local v26 = p5:IsInFirstPerson();
			if not v15 and not v16 then
				if p5.isFollowCamera and v17 and p5.lastUpdate and v13 and v13.Torso then
					if v26 then
						if p5.lastSubjectCFrame and ((v15 or v16) and l__CameraSubject__14:IsA("BasePart")) then
							local v27 = -u1.GetAngleBetweenXZVectors(p5.lastSubjectCFrame.lookVector, l__CameraSubject__14.CFrame.lookVector);
							if u1.IsFinite(v27) then
								v18 = v18 + Vector2.new(v27, 0);
							end;
							u5 = 0;
						end;
					elseif not v20 then
						u5 = math.clamp(u5 + u6 * v7, 0, u7);
						local v28 = math.clamp(u5 * v7, 0, 1);
						if p5:IsInFirstPerson() and (not p5.isFollowCamera or not p5.isClimbing) then
							v28 = 1;
						end;
						local v29 = u1.GetAngleBetweenXZVectors(v13.Torso.CFrame.lookVector, p5:GetCameraLookVector());
						if u1.IsFinite(v29) and math.abs(v29) > 0.0001 then
							v18 = v18 + Vector2.new(v29 * v28, 0);
						end;
					end;
				elseif p5.isFollowCamera and not v26 and not v20 and not l__VRService__8.VREnabled then
					local v30 = u1.GetAngleBetweenXZVectors(-(p5.lastCameraTransform.p - v21), p5:GetCameraLookVector());
					if u1.IsFinite(v30) and math.abs(v30) > 0.0001 and 0.4 * v7 < math.abs(v30) then
						v18 = v18 + Vector2.new(v30, 0);
					end;
				end;
			elseif p5.lastUpdate and v13 and v13.Torso then
				if v26 then
					if p5.lastSubjectCFrame and ((v15 or v16) and l__CameraSubject__14:IsA("BasePart")) then
						v27 = -u1.GetAngleBetweenXZVectors(p5.lastSubjectCFrame.lookVector, l__CameraSubject__14.CFrame.lookVector);
						if u1.IsFinite(v27) then
							v18 = v18 + Vector2.new(v27, 0);
						end;
						u5 = 0;
					end;
				elseif not v20 then
					u5 = math.clamp(u5 + u6 * v7, 0, u7);
					v28 = math.clamp(u5 * v7, 0, 1);
					if p5:IsInFirstPerson() and (not p5.isFollowCamera or not p5.isClimbing) then
						v28 = 1;
					end;
					v29 = u1.GetAngleBetweenXZVectors(v13.Torso.CFrame.lookVector, p5:GetCameraLookVector());
					if u1.IsFinite(v29) and math.abs(v29) > 0.0001 then
						v18 = v18 + Vector2.new(v29 * v28, 0);
					end;
				end;
			elseif p5.isFollowCamera and not v26 and not v20 and not l__VRService__8.VREnabled then
				v30 = u1.GetAngleBetweenXZVectors(-(p5.lastCameraTransform.p - v21), p5:GetCameraLookVector());
				if u1.IsFinite(v30) and math.abs(v30) > 0.0001 and 0.4 * v7 < math.abs(v30) then
					v18 = v18 + Vector2.new(v30, 0);
				end;
			end;
		end;
		if not p5.isFollowCamera then
			local l__VREnabled__31 = l__VRService__8.VREnabled;
			if l__VREnabled__31 then
				local v32 = p5:GetVRFocus(v21, v7);
			else
				v32 = CFrame.new(v21);
			end;
			local l__p__33 = v32.p;
			if l__VREnabled__31 and not p5:IsInFirstPerson() then
				local l__magnitude__34 = (v21 - l__CurrentCamera__8.CFrame.p).magnitude;
				if v22 < l__magnitude__34 or v18.x ~= 0 then
					local v35 = p5:CalculateNewLookVectorFromArg(nil, v18) * math.min(l__magnitude__34, v22);
					local v36 = l__p__33 - v35;
					local v37 = l__CurrentCamera__8.CFrame.lookVector;
					if v18.x ~= 0 then
						v37 = v35;
					end;
					local v38 = CFrame.new(v36, (Vector3.new(v36.x + v37.x, v36.y, v36.z + v37.z))) + Vector3.new(0, v19, 0);
				end;
			else
				v38 = CFrame.new(l__p__33 - v22 * p5:CalculateNewLookVectorFromArg(v11, v18), l__p__33);
			end;
		else
			if l__VRService__8.VREnabled then
				v32 = p5:GetVRFocus(v21, v7);
			else
				v32 = CFrame.new(v21);
			end;
			v38 = CFrame.new(v32.p - v22 * p5:CalculateNewLookVectorFromArg(v11, v18), v32.p) + Vector3.new(0, v19, 0);
		end;
		local v39 = p5:GetCameraToggleOffset(v7);
		v10 = v32 + v39;
		v9 = v38 + v39;
		p5.lastCameraTransform = v9;
		p5.lastCameraFocus = v10;
		if (v15 or v16) and l__CameraSubject__14:IsA("BasePart") then
			p5.lastSubjectCFrame = l__CameraSubject__14.CFrame;
		else
			p5.lastSubjectCFrame = nil;
		end;
	end;
	p5.lastUpdate = v6;
	return v9, v10;
end;
function v3.EnterFirstPerson(p6)
	p6.inFirstPerson = true;
	p6:UpdateMouseBehavior();
end;
function v3.LeaveFirstPerson(p7)
	p7.inFirstPerson = false;
	p7:UpdateMouseBehavior();
end;
return v3;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX203"><Properties><string name="Name">VehicleCamera</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = math.rad(80);
local v2 = math.rad(0);
local v3 = require(script.Parent:WaitForChild("BaseCamera"));
local v4 = require(script.Parent:WaitForChild("CameraInput"));
local v5 = require(script.Parent:WaitForChild("CameraUtils"));
local v6 = require(script.Parent:WaitForChild("ZoomController"));
local v7 = require(script:WaitForChild("VehicleCameraCore"));
local v8 = require(script:WaitForChild("VehicleCameraConfig"));
local l__LocalPlayer__9 = game:GetService("Players").LocalPlayer;
local l__map__10 = v5.map;
local u1 = 0.016666666666666666;
game:GetService("RunService").Stepped:Connect(function(p1, p2)
	u1 = p2;
end);
local v11 = setmetatable({}, v3);
v11.__index = v11;
function v11.new()
	local v12 = setmetatable(v3.new(), v11);
	v12:Reset();
	return v12;
end;
local l__Spring__2 = v5.Spring;
function v11.Reset(p3)
	p3.vehicleCameraCore = v7.new(p3:GetSubjectCFrame());
	p3.pitchSpring = l__Spring__2.new(0, -math.rad(v8.pitchBaseAngle));
	p3.yawSpring = l__Spring__2.new(0, v2);
	p3.lastPanTick = 0;
	local l__CurrentCamera__13 = workspace.CurrentCamera;
	local v14 = l__CurrentCamera__13 and l__CurrentCamera__13.CameraSubject;
	assert(l__CurrentCamera__13);
	assert(v14);
	assert(v14:IsA("VehicleSeat"));
	local v15, v16 = v5.getLooseBoundingSphere((v14:GetConnectedParts(true)));
	p3.assemblyRadius = math.max(v16, 0.001);
	p3.assemblyOffset = v14.CFrame:Inverse() * v15;
	p3:_StepInitialZoom();
end;
function v11._StepInitialZoom(p4)
	p4:SetCameraToSubjectDistance(math.max(v6.GetZoomRadius(), p4.assemblyRadius * v8.initialZoomRadiusMul));
end;
local l__sanitizeAngle__3 = v5.sanitizeAngle;
local l__mapClamp__4 = v5.mapClamp;
function v11._StepRotation(p5, p6, p7)
	local l__yawSpring__17 = p5.yawSpring;
	local l__pitchSpring__18 = p5.pitchSpring;
	local v19 = v4.getRotation(true);
	l__yawSpring__17.pos = l__sanitizeAngle__3(l__yawSpring__17.pos + -v19.X);
	l__pitchSpring__18.pos = l__sanitizeAngle__3(math.clamp(l__pitchSpring__18.pos + -v19.Y, -v1, v1));
	if v4.getRotationActivated() then
		p5.lastPanTick = os.clock();
	end;
	local v20 = -math.rad(v8.pitchBaseAngle);
	local v21 = math.rad(v8.pitchDeadzoneAngle);
	if v8.autocorrectDelay < os.clock() - p5.lastPanTick then
		local v22 = l__mapClamp__4(p7, v8.autocorrectMinCarSpeed, v8.autocorrectMaxCarSpeed, 0, v8.autocorrectResponse);
		l__yawSpring__17.freq = v22;
		l__pitchSpring__18.freq = v22;
		if l__yawSpring__17.freq < 0.001 then
			l__yawSpring__17.vel = 0;
		end;
		if l__pitchSpring__18.freq < 0.001 then
			l__pitchSpring__18.vel = 0;
		end;
		if math.abs(l__sanitizeAngle__3(v20 - l__pitchSpring__18.pos)) <= v21 then
			l__pitchSpring__18.goal = l__pitchSpring__18.pos;
		else
			l__pitchSpring__18.goal = v20;
		end;
	else
		l__yawSpring__17.freq = 0;
		l__yawSpring__17.vel = 0;
		l__pitchSpring__18.freq = 0;
		l__pitchSpring__18.vel = 0;
		l__pitchSpring__18.goal = v20;
	end;
	return CFrame.fromEulerAnglesYXZ(l__pitchSpring__18:step(p6), l__yawSpring__17:step(p6), 0);
end;
function v11._GetThirdPersonLocalOffset(p8)
	return p8.assemblyOffset + Vector3.new(0, p8.assemblyRadius * v8.verticalCenterOffset, 0);
end;
function v11._GetFirstPersonLocalOffset(p9, p10)
	local l__Character__23 = l__LocalPlayer__9.Character;
	if l__Character__23 and l__Character__23.Parent then
		local l__Head__24 = l__Character__23:FindFirstChild("Head");
		if l__Head__24 and l__Head__24:IsA("BasePart") then
			return p10:Inverse() * l__Head__24.Position;
		end;
	end;
	return p9:_GetThirdPersonLocalOffset();
end;
local function u5(p11, p12)
	return math.abs(p12.YVector:Dot(p11));
end;
local function u6(p13, p14)
	return math.abs(p14.XVector:Dot(p13));
end;
function v11.Update(p15)
	local l__CurrentCamera__25 = workspace.CurrentCamera;
	local v26 = l__CurrentCamera__25 and l__CurrentCamera__25.CameraSubject;
	local l__vehicleCameraCore__27 = p15.vehicleCameraCore;
	assert(l__CurrentCamera__25);
	assert(v26);
	assert(v26:IsA("VehicleSeat"));
	u1 = 0;
	local v28 = p15:GetSubjectCFrame();
	local v29 = p15:GetSubjectRotVelocity();
	local v30 = u5(v29, v28);
	local v31 = u6(v29, v28);
	local v32 = p15:StepZoom();
	local v33 = p15:_StepRotation(u1, (math.abs(p15:GetSubjectVelocity():Dot(v28.ZVector))));
	local v34 = l__mapClamp__4(v32, 0.5, p15.assemblyRadius, 1, 0);
	local v35 = p15:_GetThirdPersonLocalOffset():Lerp(p15:_GetFirstPersonLocalOffset(v28), v34);
	l__vehicleCameraCore__27:setTransform(v28);
	local v36 = CFrame.new(v28 * v35) * l__vehicleCameraCore__27:step(u1, v31, v30, v34) * v33;
	return v36 * CFrame.new(0, 0, v32), v36;
end;
function v11.ApplyVRTransform(p16)

end;
function v11.EnterFirstPerson(p17)
	p17.inFirstPerson = true;
	p17:UpdateMouseBehavior();
end;
function v11.LeaveFirstPerson(p18)
	p18.inFirstPerson = false;
	p18:UpdateMouseBehavior();
end;
return v11;
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX209"><Properties><string name="Name">VehicleCameraCore</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent.Parent.CameraUtils);
local l__sanitizeAngle__1 = v1.sanitizeAngle;
local v2 = {};
v2.__index = v2;
function v2.new(p1, p2, p3)
	return setmetatable({
		fRising = p1, 
		fFalling = p2, 
		g = p3, 
		p = p3, 
		v = p3 * 0
	}, v2);
end;
function v2.step(p4, p5)
	local l__g__3 = p4.g;
	local l__v__4 = p4.v;
	local v5 = 2 * math.pi * (l__v__4 > 0 and p4.fRising or p4.fFalling);
	local v6 = p4.p - l__g__3;
	local v7 = math.exp(-v5 * p5);
	local v8 = (v6 * (1 + v5 * p5) + l__v__4 * p5) * v7 + l__g__3;
	p4.p = v8;
	p4.v = (l__v__4 * (1 - v5 * p5) - v6 * (v5 * v5 * p5)) * v7;
	return v8;
end;
local v9 = {};
v9.__index = v9;
local function u2(p6)
	local v10, v11 = p6:toEulerAnglesYXZ();
	return l__sanitizeAngle__1(v11);
end;
local function u3(p7)
	return l__sanitizeAngle__1((p7:toEulerAnglesYXZ()));
end;
local u4 = require(script.Parent.VehicleCameraConfig);
function v9.new(p8)
	assert(typeof(p8) == "CFrame");
	return setmetatable({
		yawG = u2(p8), 
		yawP = u2(p8), 
		yawV = 0, 
		pitchG = u3(p8), 
		pitchP = u3(p8), 
		pitchV = 0, 
		fSpringYaw = v2.new(u4.yawReponseDampingRising, u4.yawResponseDampingFalling, 0), 
		fSpringPitch = v2.new(u4.pitchReponseDampingRising, u4.pitchResponseDampingFalling, 0)
	}, v9);
end;
function v9.setGoal(p9, p10)
	assert(typeof(p10) == "CFrame");
	p9.yawG = u2(p10);
	p9.pitchG = u3(p10);
end;
function v9.getCFrame(p11)
	return CFrame.fromEulerAnglesYXZ(p11.pitchP, p11.yawP, 0);
end;
local l__mapClamp__5 = v1.mapClamp;
local l__map__6 = v1.map;
local function u7(p12, p13, p14, p15, p16)
	local v12 = l__sanitizeAngle__1(p15 - p14);
	local v13 = math.exp(-p13 * p12);
	return l__sanitizeAngle__1((v12 * (1 + p13 * p12) + p16 * p12) * v13 + p14), (p16 * (1 - p13 * p12) - v12 * (p13 * p13 * p12)) * v13;
end;
function v9.step(p17, p18, p19, p20, p21)
	assert(typeof(p18) == "number");
	assert(typeof(p20) == "number");
	assert(typeof(p19) == "number");
	assert(typeof(p21) == "number");
	local l__fSpringYaw__14 = p17.fSpringYaw;
	local l__fSpringPitch__15 = p17.fSpringPitch;
	l__fSpringYaw__14.g = l__mapClamp__5(l__map__6(p21, 0, 1, p20, 0), math.rad(u4.cutoffMinAngularVelYaw), math.rad(u4.cutoffMaxAngularVelYaw), 1, 0);
	l__fSpringPitch__15.g = l__mapClamp__5(l__map__6(p21, 0, 1, p19, 0), math.rad(u4.cutoffMinAngularVelPitch), math.rad(u4.cutoffMaxAngularVelPitch), 1, 0);
	local v16 = l__fSpringPitch__15:step(p18);
	local v17 = l__map__6(p21, 0, 1, 1, u4.firstPersonResponseMul);
	local v18, v19 = u7(p18, 2 * math.pi * u4.yawStiffness * l__fSpringYaw__14:step(p18) * l__map__6(p21, 0, 1, 1, u4.firstPersonResponseMul), p17.yawG, p17.yawP, p17.yawV);
	p17.yawP = v18;
	p17.yawV = v19;
	local v20, v21 = u7(p18, 2 * math.pi * u4.pitchStiffness * v16 * v17, p17.pitchG, p17.pitchP, p17.pitchV);
	p17.pitchP = v20;
	p17.pitchV = v21;
	return p17:getCFrame();
end;
local v22 = {};
v22.__index = v22;
function v22.new(p22)
	return setmetatable({
		vrs = v9.new(p22)
	}, v22);
end;
function v22.step(p23, p24, p25, p26, p27)
	return p23.vrs:step(p24, p25, p26, p27);
end;
function v22.setTransform(p28, p29)
	p28.vrs:setGoal(p29);
end;
return v22;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX216"><Properties><string name="Name">VehicleCameraConfig</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

return {
	pitchStiffness = 0.5, 
	yawStiffness = 2.5, 
	autocorrectDelay = 1, 
	autocorrectMinCarSpeed = 16, 
	autocorrectMaxCarSpeed = 32, 
	autocorrectResponse = 0.5, 
	cutoffMinAngularVelYaw = 60, 
	cutoffMaxAngularVelYaw = 180, 
	cutoffMinAngularVelPitch = 15, 
	cutoffMaxAngularVelPitch = 60, 
	pitchBaseAngle = 18, 
	pitchDeadzoneAngle = 12, 
	firstPersonResponseMul = 10, 
	yawReponseDampingRising = 1, 
	yawResponseDampingFalling = 3, 
	pitchReponseDampingRising = 1, 
	pitchResponseDampingFalling = 3, 
	initialZoomRadiusMul = 3, 
	verticalCenterOffset = 0.33
};
]]></ProtectedString></Properties></Item></Item><Item class="ModuleScript" referent="RBX224"><Properties><string name="Name">MouseLockController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local v2 = {};
v2.__index = v2;
local l__GameSettings__1 = UserSettings().GameSettings;
function v2.new()
	local v3 = setmetatable({}, v2);
	v3.isMouseLocked = false;
	v3.savedMouseCursor = nil;
	v3.boundKeys = { Enum.KeyCode.LeftShift, Enum.KeyCode.RightShift };
	v3.mouseLockToggledEvent = Instance.new("BindableEvent");
	local v4 = script:FindFirstChild("BoundKeys");
	if not v4 or not v4:IsA("StringValue") then
		if v4 then
			v4:Destroy();
		end;
		v4 = Instance.new("StringValue");
		v4.Name = "BoundKeys";
		v4.Value = "LeftShift,RightShift";
		v4.Parent = script;
	end;
	if v4 then
		v4.Changed:Connect(function(p1)
			v3:OnBoundKeysObjectChanged(p1);
		end);
		v3:OnBoundKeysObjectChanged(v4.Value);
	end;
	l__GameSettings__1.Changed:Connect(function(p2)
		if p2 == "ControlMode" or p2 == "ComputerMovementMode" then
			v3:UpdateMouseLockAvailability();
		end;
	end);
	l__Players__1.LocalPlayer:GetPropertyChangedSignal("DevEnableMouseLock"):Connect(function()
		v3:UpdateMouseLockAvailability();
	end);
	l__Players__1.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function()
		v3:UpdateMouseLockAvailability();
	end);
	v3:UpdateMouseLockAvailability();
	return v3;
end;
function v2.GetIsMouseLocked(p3)
	return p3.isMouseLocked;
end;
function v2.GetBindableToggleEvent(p4)
	return p4.mouseLockToggledEvent.Event;
end;
function v2.GetMouseLockOffset(p5)
	local l__CameraOffset__5 = script:FindFirstChild("CameraOffset");
	if l__CameraOffset__5 and l__CameraOffset__5:IsA("Vector3Value") then
		return l__CameraOffset__5.Value;
	end;
	if l__CameraOffset__5 then
		l__CameraOffset__5:Destroy();
	end;
	local v6 = Instance.new("Vector3Value");
	v6.Name = "CameraOffset";
	v6.Value = Vector3.new(1.75, 0, 0);
	v6.Parent = script;
	if v6 and v6.Value then
		return v6.Value;
	end;
	return Vector3.new(1.75, 0, 0);
end;
function v2.UpdateMouseLockAvailability(p6)
	local v7 = l__Players__1.LocalPlayer.DevEnableMouseLock and (l__GameSettings__1.ControlMode == Enum.ControlMode.MouseLockSwitch and (l__GameSettings__1.ComputerMovementMode ~= Enum.ComputerMovementMode.ClickToMove and l__Players__1.LocalPlayer.DevComputerMovementMode ~= Enum.DevComputerMovementMode.Scriptable));
	if v7 ~= p6.enabled then
		p6:EnableMouseLock(v7);
	end;
end;
function v2.OnBoundKeysObjectChanged(p7, p8)
	p7.boundKeys = {};
	local v8, v9, v10 = string.gmatch(p8, "[^%s,]+");
	while true do
		local v11 = v8(v9, v10);
		if not v11 then
			break;
		end;
		for v12, v13 in pairs(Enum.KeyCode:GetEnumItems()) do
			if v11 == v13.Name then
				p7.boundKeys[#p7.boundKeys + 1] = v13;
				break;
			end;
		end;	
	end;
	p7:UnbindContextActions();
	p7:BindContextActions();
end;
local l__mouse__2 = l__Players__1.LocalPlayer:GetMouse();
function v2.OnMouseLockToggled(p9)
	p9.isMouseLocked = not p9.isMouseLocked;
	if p9.isMouseLocked then
		local l__CursorImage__14 = script:FindFirstChild("CursorImage");
		if l__CursorImage__14 and l__CursorImage__14:IsA("StringValue") and l__CursorImage__14.Value then
			p9.savedMouseCursor = l__mouse__2.Icon;
			l__mouse__2.Icon = l__CursorImage__14.Value;
		else
			if l__CursorImage__14 then
				l__CursorImage__14:Destroy();
			end;
			local v15 = Instance.new("StringValue");
			v15.Name = "CursorImage";
			v15.Value = "rbxasset://textures/MouseLockedCursor.png";
			v15.Parent = script;
			p9.savedMouseCursor = l__mouse__2.Icon;
			l__mouse__2.Icon = "rbxasset://textures/MouseLockedCursor.png";
		end;
	elseif p9.savedMouseCursor then
		l__mouse__2.Icon = p9.savedMouseCursor;
		p9.savedMouseCursor = nil;
	end;
	p9.mouseLockToggledEvent:Fire();
end;
function v2.DoMouseLockSwitch(p10, p11, p12, p13)
	if p12 ~= Enum.UserInputState.Begin then
		return Enum.ContextActionResult.Pass;
	end;
	p10:OnMouseLockToggled();
	return Enum.ContextActionResult.Sink;
end;
local l__ContextActionService__3 = game:GetService("ContextActionService");
local l__Value__4 = Enum.ContextActionPriority.Default.Value;
function v2.BindContextActions(p14)
	l__ContextActionService__3:BindActionAtPriority("MouseLockSwitchAction", function(p15, p16, p17)
		return p14:DoMouseLockSwitch(p15, p16, p17);
	end, false, l__Value__4, unpack(p14.boundKeys));
end;
function v2.UnbindContextActions(p18)
	l__ContextActionService__3:UnbindAction("MouseLockSwitchAction");
end;
function v2.IsMouseLocked(p19)
	return p19.enabled and p19.isMouseLocked;
end;
function v2.EnableMouseLock(p20, p21)
	if p21 ~= p20.enabled then
		p20.enabled = p21;
		if p20.enabled then
			p20:BindContextActions();
			return;
		end;
		if l__mouse__2.Icon ~= "" then
			l__mouse__2.Icon = "";
		end;
		p20:UnbindContextActions();
		if p20.isMouseLocked then
			p20.mouseLockToggledEvent:Fire();
		end;
		p20.isMouseLocked = false;
	end;
end;
return v2;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX231"><Properties><string name="Name">ZoomController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script:WaitForChild("Popper"));
local u1 = nil;
local u2 = game:GetService("Players").LocalPlayer;
local u3 = nil;
local function v2()
	u1 = u2.CameraMinZoomDistance;
	u3 = u2.CameraMaxZoomDistance;
end;
v2();
u2:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(v2);
u2:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(v2);
u2 = {};
u2.__index = u2;
local l__math_clamp__4 = math.clamp;
function u2.new(p1, p2, p3, p4)
	p2 = l__math_clamp__4(p2, p3, p4);
	return setmetatable({
		freq = p1, 
		x = p2, 
		v = 0, 
		minValue = p3, 
		maxValue = p4, 
		goal = p2
	}, u2);
end;
local l__math_pi__5 = math.pi;
local l__math_exp__6 = math.exp;
function u2.Step(p5, p6)
	local v3 = p5.freq * 2 * l__math_pi__5;
	local l__v__4 = p5.v;
	local l__minValue__5 = p5.minValue;
	local l__maxValue__6 = p5.maxValue;
	local l__goal__7 = p5.goal;
	local v8 = l__goal__7 - p5.x;
	local v9 = v3 * p6;
	local v10 = l__math_exp__6(-v9);
	local v11 = l__goal__7 + (l__v__4 * p6 - v8 * (v9 + 1)) * v10;
	local v12 = ((v8 * v3 - l__v__4) * v9 + l__v__4) * v10;
	if v11 < l__minValue__5 then
		v11 = l__minValue__5;
		v12 = 0;
	elseif l__maxValue__6 < v11 then
		v11 = l__maxValue__6;
		v12 = 0;
	end;
	p5.x = v11;
	p5.v = v12;
	return v11;
end;
local v13 = {};
local u7 = u2.new(4.5, 12.5, 0.5, u3);
local function u8(p7, p8, p9, p10)
	p7 = l__math_clamp__4(p7 + p8 * (1 + p7 * 0.0375), p9, p10);
	if p7 < 1 then
		p7 = p8 <= 0 and p9 or 1;
	end;
	return p7;
end;
local u9 = 0;
local l__math_max__10 = math.max;
local l__math_min__11 = math.min;
function v13.Update(p11, p12, p13)
	local v14 = math.huge;
	if u7.goal > 1 then
		v14 = v1(p12 * CFrame.new(0, 0, 0.5), l__math_max__10(u7.x, u8(u7.goal, u9, u1, u3)) - 0.5, p13) + 0.5;
	end;
	u7.minValue = 0.5;
	u7.maxValue = l__math_min__11(u3, v14);
	return u7:Step(p11);
end;
function v13.GetZoomRadius()
	return u7.x;
end;
function v13.SetZoomParameters(p14, p15)
	u7.goal = p14;
	u9 = p15;
end;
return v13;
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX237"><Properties><string name="Name">Popper</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local l__CurrentCamera__1 = game.Workspace.CurrentCamera;
local l__math_rad__2 = math.rad;
local u3 = nil;
local l__math_tan__4 = math.tan;
local u5 = nil;
local function v2()
	local l__ViewportSize__3 = l__CurrentCamera__1.ViewportSize;
	u3 = 2 * l__math_tan__4(l__math_rad__2(l__CurrentCamera__1.FieldOfView) / 2);
	u5 = l__ViewportSize__3.X / l__ViewportSize__3.Y * u3;
end;
l__CurrentCamera__1:GetPropertyChangedSignal("FieldOfView"):Connect(v2);
l__CurrentCamera__1:GetPropertyChangedSignal("ViewportSize"):Connect(v2);
v2();
local u6 = l__CurrentCamera__1.NearPlaneZ;
l__CurrentCamera__1:GetPropertyChangedSignal("NearPlaneZ"):Connect(function()
	u6 = l__CurrentCamera__1.NearPlaneZ;
end);
local u7 = {};
local u8 = {};
local u9 = function()
	local v4 = 1;
	u7 = {};
	for v5, v6 in pairs(u8) do
		u7[v4] = v6;
		v4 = v4 + 1;
	end;
end;
local function v7(p1)
	local function v8(p2)
		u8[p1] = p2;
		u9();
	end;
	p1.CharacterAdded:Connect(v8);
	p1.CharacterRemoving:Connect(function()
		u8[p1] = nil;
		u9();
	end);
	if p1.Character then
		v8(p1.Character);
	end;
end;
l__Players__1.PlayerAdded:Connect(v7);
l__Players__1.PlayerRemoving:Connect(function(p3)
	u8[p3] = nil;
	u9();
end);
for v9, v10 in ipairs(l__Players__1:GetPlayers()) do
	v7(v10);
end;
u9();
u8 = nil;
u9 = nil;
l__CurrentCamera__1:GetPropertyChangedSignal("CameraSubject"):Connect(function()
	local l__CameraSubject__11 = l__CurrentCamera__1.CameraSubject;
	if l__CameraSubject__11:IsA("Humanoid") then
		u9 = l__CameraSubject__11.RootPart;
		return;
	end;
	if l__CameraSubject__11:IsA("BasePart") then
		u9 = l__CameraSubject__11;
		return;
	end;
	u9 = nil;
end);
local function u10(p4)
	return 1 - (1 - p4.Transparency) * (1 - p4.LocalTransparencyModifier);
end;
local l__Ray_new__11 = Ray.new;
local function u12(p5, p6)
	for v12 = #p5, p6 + 1, -1 do
		p5[v12] = nil;
	end;
end;
local l__math_huge__13 = math.huge;
local function u14(p7)
	local v13 = false;
	if u10(p7) < 0.25 then
		v13 = p7.CanCollide;
		if v13 then
			v13 = false;
			if u8 ~= (p7:GetRootPart() and p7) then
				v13 = not p7:IsA("TrussPart");
			end;
		end;
	end;
	return v13;
end;
local function u15(p8, p9, p10, p11)
	debug.profilebegin("queryPoint");
	p10 = p10 + u6;
	local v14 = p8 + p9 * p10;
	local v15 = l__math_huge__13;
	local v16 = l__math_huge__13;
	local v17 = p8;
	local v18 = 0;
	while true do
		local v19, v20 = workspace:FindPartOnRayWithIgnoreList(l__Ray_new__11(v17, v14 - v17), u7, false, true);
		v18 = v18 + 1;
		if v19 then
			local v21 = v18 >= 64;
			if u14(v19) or v21 then
				local v22 = { v19 };
				local l__Magnitude__23 = (v20 - p8).Magnitude;
				if workspace:FindPartOnRayWithWhitelist(l__Ray_new__11(v14, v20 - v14), v22, true) and not v21 then
					local v24 = false;
					if p11 then
						v24 = workspace:FindPartOnRayWithWhitelist(l__Ray_new__11(p11, v14 - p11), v22, true) or workspace:FindPartOnRayWithWhitelist(l__Ray_new__11(v14, p11 - v14), v22, true);
					end;
					if v24 then
						v16 = l__Magnitude__23;
					elseif p10 < v15 then
						v15 = l__Magnitude__23;
					end;
				else
					v16 = l__Magnitude__23;
				end;
			end;
			u7[#u7 + 1] = v19;
			v17 = v20 - p9 * 0.001;
		end;
		if v16 < l__math_huge__13 then
			break;
		end;
		if not v19 then
			break;
		end;	
	end;
	u12(u7, #u7);
	debug.profileend();
	return v15 - u6, v16 - u6;
end;
local function u16(p12, p13)
	local v25 = #u7;
	while true do
		local v26, v27 = workspace:FindPartOnRayWithIgnoreList(l__Ray_new__11(p12, p13), u7, false, true);
		if v26 then
			if v26.CanCollide then
				u12(u7, v25);
				return v27, true;
			end;
			u7[#u7 + 1] = v26;
		end;
		if not v26 then
			break;
		end;	
	end;
	u12(u7, v25);
	return p12 + p13, false;
end;
local l__math_min__17 = math.min;
local u18 = { Vector2.new(0.4, 0), Vector2.new(-0.4, 0), Vector2.new(0, -0.4), Vector2.new(0, 0.4), Vector2.new(0, 0.2) };
local function u19(p14, p15)
	debug.profilebegin("queryViewport");
	local l__p__28 = p14.p;
	local l__rightVector__29 = p14.rightVector;
	local l__upVector__30 = p14.upVector;
	local v31 = -p14.lookVector;
	local l__ViewportSize__32 = l__CurrentCamera__1.ViewportSize;
	local v33 = l__math_huge__13;
	local v34 = l__math_huge__13;
	for v35 = 0, 1 do
		local v36 = l__rightVector__29 * ((v35 - 0.5) * u5);
		for v37 = 0, 1 do
			local v38, v39 = u15(l__p__28 + u6 * (v36 + l__upVector__30 * ((v37 - 0.5) * u3)), v31, p15, l__CurrentCamera__1:ViewportPointToRay(l__ViewportSize__32.x * v35, l__ViewportSize__32.y * v37).Origin);
			if v39 < v33 then
				v33 = v39;
			end;
			if v38 < v34 then
				v34 = v38;
			end;
		end;
	end;
	debug.profileend();
	return v34, v33;
end;
local function u20(p16, p17, p18)
	debug.profilebegin("testPromotion");
	local l__p__40 = p16.p;
	local l__rightVector__41 = p16.rightVector;
	local l__upVector__42 = p16.upVector;
	local v43 = -p16.lookVector;
	debug.profilebegin("extrapolate");
	for v44 = 0, l__math_min__17(1.25, p18.rotVelocity.magnitude + (u16(l__p__40, p18.posVelocity * 1.25) - l__p__40).Magnitude / p18.posVelocity.magnitude), 0.0625 do
		local v45 = p18.extrapolate(v44);
		if p17 <= u15(v45.p, -v45.lookVector, p17) then
			return false;
		end;
	end;
	debug.profileend();
	debug.profilebegin("testOffsets");
	for v46, v47 in ipairs(u18) do
		local v48 = u16(l__p__40, l__rightVector__41 * v47.x + l__upVector__42 * v47.y);
		if u15(v48, (l__p__40 + v43 * p17 - v48).Unit, p17) == l__math_huge__13 then
			return false;
		end;
	end;
	debug.profileend();
	debug.profileend();
	return true;
end;
return function(p19, p20, p21)
	debug.profilebegin("popper");
	u8 = u9 and u9:GetRootPart() or u9;
	local v49 = p20;
	local v50, v51 = u19(p19, p20);
	if v51 < v49 then
		v49 = v51;
	end;
	if v50 < v49 and u20(p19, p20, p21) then
		v49 = v50;
	end;
	u8 = nil;
	debug.profileend();
	return v49;
end;
]]></ProtectedString></Properties></Item></Item></Item><Item class="ModuleScript" referent="RBX246"><Properties><string name="Name">ControlModule</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local l__Players__2 = game:GetService("Players");
local l__RunService__3 = game:GetService("RunService");
local l__UserInputService__4 = game:GetService("UserInputService");
local l__Workspace__5 = game:GetService("Workspace");
local l__UserGameSettings__6 = UserSettings():GetService("UserGameSettings");
local v7 = require(script:WaitForChild("Keyboard"));
local v8 = require(script:WaitForChild("Gamepad"));
local v9 = require(script:WaitForChild("DynamicThumbstick"));
local v10, v11 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserMakeThumbstickDynamic");
end);
local v12 = (v10 or v11) and v9 or require(script:WaitForChild("TouchThumbstick"));
local v13 = require(script:WaitForChild("ClickToMoveController"));
local u1 = require(script:WaitForChild("VehicleController"));
local l__Value__2 = Enum.ContextActionPriority.Default.Value;
function v1.new()
	local v14 = setmetatable({}, v1);
	v14.controllers = {};
	v14.activeControlModule = nil;
	v14.activeController = nil;
	v14.touchJumpController = nil;
	v14.moveFunction = l__Players__2.LocalPlayer.Move;
	v14.humanoid = nil;
	v14.lastInputType = Enum.UserInputType.None;
	v14.humanoidSeatedConn = nil;
	v14.vehicleController = nil;
	v14.touchControlFrame = nil;
	v14.vehicleController = u1.new(l__Value__2);
	l__Players__2.LocalPlayer.CharacterAdded:Connect(function(p1)
		v14:OnCharacterAdded(p1);
	end);
	l__Players__2.LocalPlayer.CharacterRemoving:Connect(function(p2)
		v14:OnCharacterRemoving(p2);
	end);
	if l__Players__2.LocalPlayer.Character then
		v14:OnCharacterAdded(l__Players__2.LocalPlayer.Character);
	end;
	l__RunService__3:BindToRenderStep("ControlScriptRenderstep", Enum.RenderPriority.Input.Value, function(p3)
		v14:OnRenderStepped(p3);
	end);
	l__UserInputService__4.LastInputTypeChanged:Connect(function(p4)
		v14:OnLastInputTypeChanged(p4);
	end);
	l__UserGameSettings__6:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
		v14:OnTouchMovementModeChange();
	end);
	l__Players__2.LocalPlayer:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
		v14:OnTouchMovementModeChange();
	end);
	l__UserGameSettings__6:GetPropertyChangedSignal("ComputerMovementMode"):Connect(function()
		v14:OnComputerMovementModeChange();
	end);
	l__Players__2.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function()
		v14:OnComputerMovementModeChange();
	end);
	v14.playerGui = nil;
	v14.touchGui = nil;
	v14.playerGuiAddedConn = nil;
	l__UserInputService__4:GetPropertyChangedSignal("ModalEnabled"):Connect(function()
		v14:UpdateTouchGuiVisibility();
	end);
	if not l__UserInputService__4.TouchEnabled then
		v14:OnLastInputTypeChanged(l__UserInputService__4:GetLastInputType());
		return v14;
	end;
	v14.playerGui = l__Players__2.LocalPlayer:FindFirstChildOfClass("PlayerGui");
	if not v14.playerGui then
		v14.playerGuiAddedConn = l__Players__2.LocalPlayer.ChildAdded:Connect(function(p5)
			if p5:IsA("PlayerGui") then
				v14.playerGui = p5;
				v14:CreateTouchGuiContainer();
				v14.playerGuiAddedConn:Disconnect();
				v14.playerGuiAddedConn = nil;
				v14:OnLastInputTypeChanged(l__UserInputService__4:GetLastInputType());
			end;
		end);
		return v14;
	end;
	v14:CreateTouchGuiContainer();
	v14:OnLastInputTypeChanged(l__UserInputService__4:GetLastInputType());
	return v14;
end;
function v1.GetMoveVector(p6)
	if not p6.activeController then
		return Vector3.new(0, 0, 0);
	end;
	return p6.activeController:GetMoveVector();
end;
function v1.GetActiveController(p7)
	return p7.activeController;
end;
function v1.EnableActiveControlModule(p8)
	if p8.activeControlModule == v13 then
		p8.activeController:Enable(true, l__Players__2.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.UserChoice, p8.touchJumpController);
		return;
	end;
	if not p8.touchControlFrame then
		p8.activeController:Enable(true);
		return;
	end;
	p8.activeController:Enable(true, p8.touchControlFrame);
end;
function v1.Enable(p9, p10)
	if not p9.activeController then
		return;
	end;
	if p10 == nil then
		p10 = true;
	end;
	if p10 then
		p9:EnableActiveControlModule();
		return;
	end;
	p9:Disable();
end;
function v1.Disable(p11)
	if p11.activeController then
		p11.activeController:Enable(false);
		if p11.moveFunction then
			p11.moveFunction(l__Players__2.LocalPlayer, Vector3.new(0, 0, 0), true);
		end;
	end;
end;
local u3 = {
	[Enum.UserInputType.Keyboard] = v7, 
	[Enum.UserInputType.MouseButton1] = v7, 
	[Enum.UserInputType.MouseButton2] = v7, 
	[Enum.UserInputType.MouseButton3] = v7, 
	[Enum.UserInputType.MouseWheel] = v7, 
	[Enum.UserInputType.MouseMovement] = v7, 
	[Enum.UserInputType.Gamepad1] = v8, 
	[Enum.UserInputType.Gamepad2] = v8, 
	[Enum.UserInputType.Gamepad3] = v8, 
	[Enum.UserInputType.Gamepad4] = v8
};
local u4 = nil;
local u5 = {
	[Enum.TouchMovementMode.DPad] = v9, 
	[Enum.DevTouchMovementMode.DPad] = v9, 
	[Enum.TouchMovementMode.Thumbpad] = v9, 
	[Enum.DevTouchMovementMode.Thumbpad] = v9, 
	[Enum.TouchMovementMode.Thumbstick] = v12, 
	[Enum.DevTouchMovementMode.Thumbstick] = v12, 
	[Enum.TouchMovementMode.DynamicThumbstick] = v9, 
	[Enum.DevTouchMovementMode.DynamicThumbstick] = v9, 
	[Enum.TouchMovementMode.ClickToMove] = v13, 
	[Enum.DevTouchMovementMode.ClickToMove] = v13, 
	[Enum.TouchMovementMode.Default] = v9, 
	[Enum.ComputerMovementMode.Default] = v7, 
	[Enum.ComputerMovementMode.KeyboardMouse] = v7, 
	[Enum.DevComputerMovementMode.KeyboardMouse] = v7, 
	[Enum.DevComputerMovementMode.Scriptable] = nil, 
	[Enum.ComputerMovementMode.ClickToMove] = v13, 
	[Enum.DevComputerMovementMode.ClickToMove] = v13
};
function v1.SelectComputerMovementModule(p12)
	if not l__UserInputService__4.KeyboardEnabled and not l__UserInputService__4.GamepadEnabled then
		return nil, false;
	end;
	local l__DevComputerMovementMode__15 = l__Players__2.LocalPlayer.DevComputerMovementMode;
	if l__DevComputerMovementMode__15 == Enum.DevComputerMovementMode.UserChoice then
		local v16 = u3[u4];
		if l__UserGameSettings__6.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove and v16 == v7 then
			v16 = v13;
		end;
	else
		v16 = u5[l__DevComputerMovementMode__15];
		if not v16 and l__DevComputerMovementMode__15 ~= Enum.DevComputerMovementMode.Scriptable then
			warn("No character control module is associated with DevComputerMovementMode ", l__DevComputerMovementMode__15);
		end;
	end;
	if v16 then
		return v16, true;
	end;
	if l__DevComputerMovementMode__15 == Enum.DevComputerMovementMode.Scriptable then
		return nil, true;
	end;
	return nil, false;
end;
function v1.SelectTouchModule(p13)
	if not l__UserInputService__4.TouchEnabled then
		return nil, false;
	end;
	local l__DevTouchMovementMode__17 = l__Players__2.LocalPlayer.DevTouchMovementMode;
	if l__DevTouchMovementMode__17 == Enum.DevTouchMovementMode.UserChoice then
		local v18 = u5[l__UserGameSettings__6.TouchMovementMode];
	else
		if l__DevTouchMovementMode__17 == Enum.DevTouchMovementMode.Scriptable then
			return nil, true;
		end;
		v18 = u5[l__DevTouchMovementMode__17];
	end;
	return v18, true;
end;
local function u6(p14, p15)
	local l__CurrentCamera__19 = l__Workspace__5.CurrentCamera;
	if not l__CurrentCamera__19 then
		return p15;
	end;
	if p14:GetState() == Enum.HumanoidStateType.Swimming then
		return l__CurrentCamera__19.CFrame:VectorToWorldSpace(p15);
	end;
	local v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31 = l__CurrentCamera__19.CFrame:GetComponents();
	if v28 < 1 and v28 > -1 then
		local v32 = v31;
		local v33 = v25;
	else
		v32 = v23;
		v33 = -v24 * math.sign(v28);
	end;
	local v34 = math.sqrt(v32 * v32 + v33 * v33);
	return Vector3.new((v32 * p15.x + v33 * p15.z) / v34, 0, (v32 * p15.z - v33 * p15.x) / v34);
end;
function v1.OnRenderStepped(p16, p17)
	if p16.activeController and p16.activeController.enabled and p16.humanoid then
		p16.activeController:OnRenderStepped(p17);
		local v35 = p16.activeController:GetMoveVector();
		local v36 = p16.activeController:IsMoveVectorCameraRelative();
		local v37 = p16:GetClickToMoveController();
		if p16.activeController ~= v37 then
			if v35.magnitude > 0 then
				v37:CleanupPath();
			else
				v37:OnRenderStepped(p17);
				v35 = v37:GetMoveVector();
				v36 = v37:IsMoveVectorCameraRelative();
			end;
		end;
		if p16.vehicleController then
			local v38, v39 = p16.vehicleController:Update(v35, v36, p16.activeControlModule == v8);
			v35 = v38;
		end;
		if v36 then
			v35 = u6(p16.humanoid, v35);
		end;
		p16.moveFunction(l__Players__2.LocalPlayer, v35, false);
		p16.humanoid.Jump = p16.activeController:GetIsJumping() or p16.touchJumpController and p16.touchJumpController:GetIsJumping();
	end;
end;
function v1.OnHumanoidSeated(p18, p19, p20)
	if p19 then
		if p20 and p20:IsA("VehicleSeat") then
			if not p18.vehicleController then
				p18.vehicleController = p18.vehicleController.new(l__Value__2);
			end;
			p18.vehicleController:Enable(true, p20);
			return;
		end;
	elseif p18.vehicleController then
		p18.vehicleController:Enable(false, p20);
	end;
end;
function v1.OnCharacterAdded(p21, p22)
	p21.humanoid = p22:FindFirstChildOfClass("Humanoid");
	while not p21.humanoid do
		p22.ChildAdded:wait();
		p21.humanoid = p22:FindFirstChildOfClass("Humanoid");	
	end;
	p21:UpdateTouchGuiVisibility();
	if p21.humanoidSeatedConn then
		p21.humanoidSeatedConn:Disconnect();
		p21.humanoidSeatedConn = nil;
	end;
	p21.humanoidSeatedConn = p21.humanoid.Seated:Connect(function(p23, p24)
		p21:OnHumanoidSeated(p23, p24);
	end);
end;
function v1.OnCharacterRemoving(p25, p26)
	p25.humanoid = nil;
	p25:UpdateTouchGuiVisibility();
end;
function v1.UpdateTouchGuiVisibility(p27)
	if p27.touchGui then
		p27.touchGui.Enabled = not (not p27.humanoid) and not l__UserInputService__4.ModalEnabled;
	end;
end;
local u7 = require(script:WaitForChild("TouchJump"));
function v1.SwitchToController(p28, p29)
	if not p29 then
		if p28.activeController then
			p28.activeController:Enable(false);
		end;
		p28.activeController = nil;
		p28.activeControlModule = nil;
		return;
	end;
	if not p28.controllers[p29] then
		p28.controllers[p29] = p29.new(l__Value__2);
	end;
	if p28.activeController ~= p28.controllers[p29] then
		if p28.activeController then
			p28.activeController:Enable(false);
		end;
		p28.activeController = p28.controllers[p29];
		p28.activeControlModule = p29;
		if p28.touchControlFrame and (p28.activeControlModule == v13 or p28.activeControlModule == v12 or p28.activeControlModule == v9) then
			if not p28.controllers[u7] then
				p28.controllers[u7] = u7.new();
			end;
			p28.touchJumpController = p28.controllers[u7];
			p28.touchJumpController:Enable(true, p28.touchControlFrame);
		elseif p28.touchJumpController then
			p28.touchJumpController:Enable(false);
		end;
		p28:EnableActiveControlModule();
	end;
end;
function v1.OnLastInputTypeChanged(p30, p31)
	if u4 == p31 then
		warn("LastInputType Change listener called with current type.");
	end;
	u4 = p31;
	if u4 == Enum.UserInputType.Touch then
		local v40, v41 = p30:SelectTouchModule();
		if v41 then
			while not p30.touchControlFrame do
				wait();			
			end;
			p30:SwitchToController(v40);
		end;
	elseif u3[u4] ~= nil then
		local v42 = p30:SelectComputerMovementModule();
		if v42 then
			p30:SwitchToController(v42);
		end;
	end;
	p30:UpdateTouchGuiVisibility();
end;
function v1.OnComputerMovementModeChange(p32)
	local v43, v44 = p32:SelectComputerMovementModule();
	if v44 then
		p32:SwitchToController(v43);
	end;
end;
function v1.OnTouchMovementModeChange(p33)
	local v45, v46 = p33:SelectTouchModule();
	if v46 then
		while not p33.touchControlFrame do
			wait();		
		end;
		p33:SwitchToController(v45);
	end;
end;
function v1.CreateTouchGuiContainer(p34)
	if p34.touchGui then
		p34.touchGui:Destroy();
	end;
	p34.touchGui = Instance.new("ScreenGui");
	p34.touchGui.Name = "TouchGui";
	p34.touchGui.ResetOnSpawn = false;
	p34.touchGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
	p34:UpdateTouchGuiVisibility();
	p34.touchControlFrame = Instance.new("Frame");
	p34.touchControlFrame.Name = "TouchControlFrame";
	p34.touchControlFrame.Size = UDim2.new(1, 0, 1, 0);
	p34.touchControlFrame.BackgroundTransparency = 1;
	p34.touchControlFrame.Parent = p34.touchGui;
	p34.touchGui.Parent = p34.playerGui;
end;
function v1.GetClickToMoveController(p35)
	if not p35.controllers[v13] then
		p35.controllers[v13] = v13.new(l__Value__2);
	end;
	return p35.controllers[v13];
end;
return v1.new();
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX252"><Properties><string name="Name">TouchJump</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v2 = setmetatable({}, v1);
v2.__index = v2;
function v2.new()
	local v3 = setmetatable(v1.new(), v2);
	v3.parentUIFrame = nil;
	v3.jumpButton = nil;
	v3.characterAddedConn = nil;
	v3.humanoidStateEnabledChangedConn = nil;
	v3.humanoidJumpPowerConn = nil;
	v3.humanoidParentConn = nil;
	v3.externallyEnabled = false;
	v3.jumpPower = 0;
	v3.jumpStateEnabled = true;
	v3.isJumping = false;
	v3.humanoid = nil;
	return v3;
end;
local l__Players__1 = game:GetService("Players");
function v2.EnableButton(p1, p2)
	if p2 then
		if not p1.jumpButton then
			p1:Create();
		end;
		local v4 = l__Players__1.LocalPlayer.Character and l__Players__1.LocalPlayer.Character:FindFirstChildOfClass("Humanoid");
		if v4 and p1.externallyEnabled and p1.externallyEnabled and v4.JumpPower > 0 then
			p1.jumpButton.Visible = true;
			return;
		end;
	else
		p1.jumpButton.Visible = false;
		p1.isJumping = false;
		p1.jumpButton.ImageRectOffset = Vector2.new(1, 146);
	end;
end;
function v2.UpdateEnabled(p3)
	if p3.jumpPower > 0 and p3.jumpStateEnabled then
		p3:EnableButton(true);
		return;
	end;
	p3:EnableButton(false);
end;
function v2.HumanoidChanged(p4, p5)
	local v5 = l__Players__1.LocalPlayer.Character and l__Players__1.LocalPlayer.Character:FindFirstChildOfClass("Humanoid");
	if v5 then
		if p5 == "JumpPower" then
			p4.jumpPower = v5.JumpPower;
			p4:UpdateEnabled();
			return;
		end;
		if p5 == "Parent" and not v5.Parent then
			p4.humanoidChangeConn:Disconnect();
		end;
	end;
end;
function v2.HumanoidStateEnabledChanged(p6, p7, p8)
	if p7 == Enum.HumanoidStateType.Jumping then
		p6.jumpStateEnabled = p8;
		p6:UpdateEnabled();
	end;
end;
function v2.CharacterAdded(p9, p10)
	if p9.humanoidChangeConn then
		p9.humanoidChangeConn:Disconnect();
		p9.humanoidChangeConn = nil;
	end;
	p9.humanoid = p10:FindFirstChildOfClass("Humanoid");
	while not p9.humanoid do
		p10.ChildAdded:wait();
		p9.humanoid = p10:FindFirstChildOfClass("Humanoid");	
	end;
	p9.humanoidJumpPowerConn = p9.humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
		p9.jumpPower = p9.humanoid.JumpPower;
		p9:UpdateEnabled();
	end);
	p9.humanoidParentConn = p9.humanoid:GetPropertyChangedSignal("Parent"):Connect(function()
		if not p9.humanoid.Parent then
			p9.humanoidJumpPowerConn:Disconnect();
			p9.humanoidJumpPowerConn = nil;
			p9.humanoidParentConn:Disconnect();
			p9.humanoidParentConn = nil;
		end;
	end);
	p9.humanoidStateEnabledChangedConn = p9.humanoid.StateEnabledChanged:Connect(function(p11, p12)
		p9:HumanoidStateEnabledChanged(p11, p12);
	end);
	p9.jumpPower = p9.humanoid.JumpPower;
	p9.jumpStateEnabled = p9.humanoid:GetStateEnabled(Enum.HumanoidStateType.Jumping);
	p9:UpdateEnabled();
end;
function v2.SetupCharacterAddedFunction(p13)
	p13.characterAddedConn = l__Players__1.LocalPlayer.CharacterAdded:Connect(function(p14)
		p13:CharacterAdded(p14);
	end);
	if l__Players__1.LocalPlayer.Character then
		p13:CharacterAdded(l__Players__1.LocalPlayer.Character);
	end;
end;
function v2.Enable(p15, p16, p17)
	if p17 then
		p15.parentUIFrame = p17;
	end;
	p15.externallyEnabled = p16;
	p15:EnableButton(p16);
end;
local l__GuiService__2 = game:GetService("GuiService");
function v2.Create(p18)
	if not p18.parentUIFrame then
		return;
	end;
	if p18.jumpButton then
		p18.jumpButton:Destroy();
		p18.jumpButton = nil;
	end;
	local v6 = math.min(p18.parentUIFrame.AbsoluteSize.x, p18.parentUIFrame.AbsoluteSize.y) <= 500;
	if v6 then
		local v7 = 70;
	else
		v7 = 120;
	end;
	p18.jumpButton = Instance.new("ImageButton");
	p18.jumpButton.Name = "JumpButton";
	p18.jumpButton.Visible = false;
	p18.jumpButton.BackgroundTransparency = 1;
	p18.jumpButton.Image = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png";
	p18.jumpButton.ImageRectOffset = Vector2.new(1, 146);
	p18.jumpButton.ImageRectSize = Vector2.new(144, 144);
	p18.jumpButton.Size = UDim2.new(0, v7, 0, v7);
	p18.jumpButton.Position = v6 and UDim2.new(1, -(v7 * 1.5 - 10), 1, -v7 - 20) or UDim2.new(1, -(v7 * 1.5 - 10), 1, -v7 * 1.75);
	local u3 = nil;
	p18.jumpButton.InputBegan:connect(function(p19)
		if not (not u3) or p19.UserInputType ~= Enum.UserInputType.Touch or p19.UserInputState ~= Enum.UserInputState.Begin then
			return;
		end;
		u3 = p19;
		p18.jumpButton.ImageRectOffset = Vector2.new(146, 146);
		p18.isJumping = true;
	end);
	local function u4()
		u3 = nil;
		p18.isJumping = false;
		p18.jumpButton.ImageRectOffset = Vector2.new(1, 146);
	end;
	p18.jumpButton.InputEnded:connect(function(p20)
		if p20 == u3 then
			u4();
		end;
	end);
	l__GuiService__2.MenuOpened:connect(function()
		if u3 then
			u4();
		end;
	end);
	if not p18.characterAddedConn then
		p18:SetupCharacterAddedFunction();
	end;
	p18.jumpButton.Parent = p18.parentUIFrame;
end;
return v2;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX259"><Properties><string name="Name">Keyboard</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v2 = setmetatable({}, v1);
v2.__index = v2;
function v2.new(p1)
	local v3 = setmetatable(v1.new(), v2);
	v3.CONTROL_ACTION_PRIORITY = p1;
	v3.textFocusReleasedConn = nil;
	v3.textFocusGainedConn = nil;
	v3.windowFocusReleasedConn = nil;
	v3.forwardValue = 0;
	v3.backwardValue = 0;
	v3.leftValue = 0;
	v3.rightValue = 0;
	v3.jumpEnabled = true;
	return v3;
end;
local l__UserInputService__1 = game:GetService("UserInputService");
local u2 = Vector3.new(0, 0, 0);
function v2.Enable(p2, p3)
	if not l__UserInputService__1.KeyboardEnabled then
		return false;
	end;
	if p3 == p2.enabled then
		return true;
	end;
	p2.forwardValue = 0;
	p2.backwardValue = 0;
	p2.leftValue = 0;
	p2.rightValue = 0;
	p2.moveVector = u2;
	p2.jumpRequested = false;
	p2:UpdateJump();
	if p3 then
		p2:BindContextActions();
		p2:ConnectFocusEventListeners();
	else
		p2:UnbindContextActions();
		p2:DisconnectFocusEventListeners();
	end;
	p2.enabled = p3;
	return true;
end;
function v2.UpdateMovement(p4, p5)
	if p5 == Enum.UserInputState.Cancel then
		p4.moveVector = u2;
		return;
	end;
	p4.moveVector = Vector3.new(p4.leftValue + p4.rightValue, 0, p4.forwardValue + p4.backwardValue);
end;
function v2.UpdateJump(p6)
	p6.isJumping = p6.jumpRequested;
end;
local l__ContextActionService__3 = game:GetService("ContextActionService");
function v2.BindContextActions(p7)
	l__ContextActionService__3:BindActionAtPriority("moveForwardAction", function(p8, p9, p10)
		if p9 == Enum.UserInputState.Begin then
			local v4 = -1;
		else
			v4 = 0;
		end;
		p7.forwardValue = v4;
		p7:UpdateMovement(p9);
		return Enum.ContextActionResult.Pass;
	end, false, p7.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterForward);
	l__ContextActionService__3:BindActionAtPriority("moveBackwardAction", function(p11, p12, p13)
		if p12 == Enum.UserInputState.Begin then
			local v5 = 1;
		else
			v5 = 0;
		end;
		p7.backwardValue = v5;
		p7:UpdateMovement(p12);
		return Enum.ContextActionResult.Pass;
	end, false, p7.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterBackward);
	l__ContextActionService__3:BindActionAtPriority("moveLeftAction", function(p14, p15, p16)
		if p15 == Enum.UserInputState.Begin then
			local v6 = -1;
		else
			v6 = 0;
		end;
		p7.leftValue = v6;
		p7:UpdateMovement(p15);
		return Enum.ContextActionResult.Pass;
	end, false, p7.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterLeft);
	l__ContextActionService__3:BindActionAtPriority("moveRightAction", function(p17, p18, p19)
		if p18 == Enum.UserInputState.Begin then
			local v7 = 1;
		else
			v7 = 0;
		end;
		p7.rightValue = v7;
		p7:UpdateMovement(p18);
		return Enum.ContextActionResult.Pass;
	end, false, p7.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterRight);
	l__ContextActionService__3:BindActionAtPriority("jumpAction", function(p20, p21, p22)
		local v8 = p7.jumpEnabled and p21 == Enum.UserInputState.Begin;
		p7.jumpRequested = v8;
		p7:UpdateJump();
		return Enum.ContextActionResult.Pass;
	end, false, p7.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterJump);
end;
function v2.UnbindContextActions(p23)
	l__ContextActionService__3:UnbindAction("moveForwardAction");
	l__ContextActionService__3:UnbindAction("moveBackwardAction");
	l__ContextActionService__3:UnbindAction("moveLeftAction");
	l__ContextActionService__3:UnbindAction("moveRightAction");
	l__ContextActionService__3:UnbindAction("jumpAction");
end;
function v2.ConnectFocusEventListeners(p24)
	local function v9()
		p24.moveVector = u2;
		p24.forwardValue = 0;
		p24.backwardValue = 0;
		p24.leftValue = 0;
		p24.rightValue = 0;
		p24.jumpRequested = false;
		p24:UpdateJump();
	end;
	p24.textFocusReleasedConn = l__UserInputService__1.TextBoxFocusReleased:Connect(v9);
	p24.textFocusGainedConn = l__UserInputService__1.TextBoxFocused:Connect(function(p25)
		p24.jumpRequested = false;
		p24:UpdateJump();
	end);
	p24.windowFocusReleasedConn = l__UserInputService__1.WindowFocused:Connect(v9);
end;
function v2.DisconnectFocusEventListeners(p26)
	if p26.textFocusReleasedConn then
		p26.textFocusReleasedConn:Disconnect();
		p26.textFocusReleasedConn = nil;
	end;
	if p26.textFocusGainedConn then
		p26.textFocusGainedConn:Disconnect();
		p26.textFocusGainedConn = nil;
	end;
	if p26.windowFocusReleasedConn then
		p26.windowFocusReleasedConn:Disconnect();
		p26.windowFocusReleasedConn = nil;
	end;
end;
return v2;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX266"><Properties><string name="Name">Gamepad</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v2 = setmetatable({}, v1);
v2.__index = v2;
local l__Enum_UserInputType_None__1 = Enum.UserInputType.None;
function v2.new(p1)
	local v3 = setmetatable(v1.new(), v2);
	v3.CONTROL_ACTION_PRIORITY = p1;
	v3.forwardValue = 0;
	v3.backwardValue = 0;
	v3.leftValue = 0;
	v3.rightValue = 0;
	v3.activeGamepad = l__Enum_UserInputType_None__1;
	v3.gamepadConnectedConn = nil;
	v3.gamepadDisconnectedConn = nil;
	return v3;
end;
local l__UserInputService__2 = game:GetService("UserInputService");
local u3 = Vector3.new(0, 0, 0);
function v2.Enable(p2, p3)
	if not l__UserInputService__2.GamepadEnabled then
		return false;
	end;
	if p3 == p2.enabled then
		return true;
	end;
	p2.forwardValue = 0;
	p2.backwardValue = 0;
	p2.leftValue = 0;
	p2.rightValue = 0;
	p2.moveVector = u3;
	p2.isJumping = false;
	if p3 then
		p2.activeGamepad = p2:GetHighestPriorityGamepad();
		if p2.activeGamepad == l__Enum_UserInputType_None__1 then
			return false;
		end;
		p2:BindContextActions();
		p2:ConnectGamepadConnectionListeners();
	else
		p2:UnbindContextActions();
		p2:DisconnectGamepadConnectionListeners();
		p2.activeGamepad = l__Enum_UserInputType_None__1;
	end;
	p2.enabled = p3;
	return true;
end;
function v2.GetHighestPriorityGamepad(p4)
	local v4 = l__Enum_UserInputType_None__1;
	for v5, v6 in pairs((l__UserInputService__2:GetConnectedGamepads())) do
		if v6.Value < v4.Value then
			v4 = v6;
		end;
	end;
	return v4;
end;
local l__ContextActionService__4 = game:GetService("ContextActionService");
function v2.BindContextActions(p5)
	if p5.activeGamepad == l__Enum_UserInputType_None__1 then
		return false;
	end;
	l__ContextActionService__4:BindActivate(p5.activeGamepad, Enum.KeyCode.ButtonR2);
	l__ContextActionService__4:BindActionAtPriority("jumpAction", function(p6, p7, p8)
		p5.isJumping = p7 == Enum.UserInputState.Begin;
		return Enum.ContextActionResult.Sink;
	end, false, p5.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonA);
	l__ContextActionService__4:BindActionAtPriority("moveThumbstick", function(p9, p10, p11)
		if p10 == Enum.UserInputState.Cancel then
			p5.moveVector = u3;
			return Enum.ContextActionResult.Sink;
		end;
		if p5.activeGamepad ~= p11.UserInputType then
			return Enum.ContextActionResult.Pass;
		end;
		if p11.KeyCode ~= Enum.KeyCode.Thumbstick1 then
			return;
		end;
		if p11.Position.magnitude > 0.2 then
			p5.moveVector = Vector3.new(p11.Position.X, 0, -p11.Position.Y);
		else
			p5.moveVector = u3;
		end;
		return Enum.ContextActionResult.Sink;
	end, false, p5.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Thumbstick1);
	return true;
end;
function v2.UnbindContextActions(p12)
	if p12.activeGamepad ~= l__Enum_UserInputType_None__1 then
		l__ContextActionService__4:UnbindActivate(p12.activeGamepad, Enum.KeyCode.ButtonR2);
	end;
	l__ContextActionService__4:UnbindAction("moveThumbstick");
	l__ContextActionService__4:UnbindAction("jumpAction");
end;
function v2.OnNewGamepadConnected(p13)
	local v7 = p13:GetHighestPriorityGamepad();
	if v7 == p13.activeGamepad then
		return;
	end;
	if v7 == l__Enum_UserInputType_None__1 then
		warn("Gamepad:OnNewGamepadConnected found no connected gamepads");
		p13:UnbindContextActions();
		return;
	end;
	if p13.activeGamepad ~= l__Enum_UserInputType_None__1 then
		p13:UnbindContextActions();
	end;
	p13.activeGamepad = v7;
	p13:BindContextActions();
end;
function v2.OnCurrentGamepadDisconnected(p14)
	if p14.activeGamepad ~= l__Enum_UserInputType_None__1 then
		l__ContextActionService__4:UnbindActivate(p14.activeGamepad, Enum.KeyCode.ButtonR2);
	end;
	local v8 = p14:GetHighestPriorityGamepad();
	if p14.activeGamepad ~= l__Enum_UserInputType_None__1 and v8 == p14.activeGamepad then
		warn("Gamepad:OnCurrentGamepadDisconnected found the supposedly disconnected gamepad in connectedGamepads.");
		p14:UnbindContextActions();
		p14.activeGamepad = l__Enum_UserInputType_None__1;
		return;
	end;
	if v8 == l__Enum_UserInputType_None__1 then
		p14:UnbindContextActions();
		p14.activeGamepad = l__Enum_UserInputType_None__1;
		return;
	end;
	p14.activeGamepad = v8;
	l__ContextActionService__4:BindActivate(p14.activeGamepad, Enum.KeyCode.ButtonR2);
end;
function v2.ConnectGamepadConnectionListeners(p15)
	p15.gamepadConnectedConn = l__UserInputService__2.GamepadConnected:Connect(function(p16)
		p15:OnNewGamepadConnected();
	end);
	p15.gamepadDisconnectedConn = l__UserInputService__2.GamepadDisconnected:Connect(function(p17)
		if p15.activeGamepad == p17 then
			p15:OnCurrentGamepadDisconnected();
		end;
	end);
end;
function v2.DisconnectGamepadConnectionListeners(p18)
	if p18.gamepadConnectedConn then
		p18.gamepadConnectedConn:Disconnect();
		p18.gamepadConnectedConn = nil;
	end;
	if p18.gamepadDisconnectedConn then
		p18.gamepadDisconnectedConn:Disconnect();
		p18.gamepadDisconnectedConn = nil;
	end;
end;
return v2;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX273"><Properties><string name="Name">ClickToMoveController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1, v2 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserExcludeNonCollidableForPathfinding");
end);
local l__Players__3 = game:GetService("Players");
local l__Debris__4 = game:GetService("Debris");
local v5 = {};
local u1 = function(p1)
	if not p1 then
		return;
	end;
	local v6 = p1:FindFirstChildOfClass("Humanoid");
	if v6 then
		return p1, v6;
	end;
	return u1(p1.Parent);
end;
v5.FindCharacterAncestor = u1;
local l__Workspace__2 = game:GetService("Workspace");
local u3 = function(p2, p3, p4)
	p4 = p4 or {};
	local v7, v8, v9, v10 = l__Workspace__2:FindPartOnRayWithIgnoreList(p2, p4);
	if not v7 then
		return nil, nil;
	end;
	if p3 and v7.CanCollide == false then
		local v11, v12 = u1(v7);
		if v12 ~= nil then
			return v7, v8, v9, v10;
		end;
	else
		return v7, v8, v9, v10;
	end;
	table.insert(p4, v7);
	return u3(p2, p3, p4);
end;
v5.Raycast = u3;
u1 = {};
u3 = function(p5)
	local v13 = p5 and p5.Character;
	if not v13 then
		return;
	end;
	local v14 = u1[p5];
	if v14 and v14.Parent == v13 then
		return v14;
	end;
	u1[p5] = nil;
	local v15 = v13:FindFirstChildOfClass("Humanoid");
	if v15 then
		u1[p5] = v15;
	end;
	return v15;
end;
local l__LocalPlayer__4 = l__Players__3.LocalPlayer;
local u5 = nil;
local u6 = nil;
local u7 = nil;
local u8 = nil;
local function u9()
	return l__LocalPlayer__4 and l__LocalPlayer__4.Character;
end;
local l__CollectionService__10 = game:GetService("CollectionService");
local function u11(p6, p7)
	return Vector3.new(math.min(p6.X, p7.X), math.min(p6.Y, p7.Y), math.min(p6.Z, p7.Z));
end;
local function u12(p8, p9)
	return Vector3.new(math.max(p8.X, p9.X), math.max(p8.Y, p9.Y), math.max(p8.Z, p9.Z));
end;
local u13 = false;
local u14 = Vector3.new(0, 0, 0);
local u15 = 1;
local u16 = v1 or v2;
local function u17(p10)
	if p10 == nil or p10.PrimaryPart == nil then
		return;
	end;
	local v16 = p10.PrimaryPart.CFrame:inverse();
	local v17 = Vector3.new(math.huge, math.huge, math.huge);
	local v18 = Vector3.new(-math.huge, -math.huge, -math.huge);
	for v19, v20 in pairs(p10:GetDescendants()) do
		if v20:IsA("BasePart") and v20.CanCollide then
			local v21 = v16 * v20.CFrame;
			local v22 = Vector3.new(v20.Size.X / 2, v20.Size.Y / 2, v20.Size.Z / 2);
			for v23, v24 in ipairs({ Vector3.new(v22.X, v22.Y, v22.Z), Vector3.new(v22.X, v22.Y, -v22.Z), Vector3.new(v22.X, -v22.Y, v22.Z), Vector3.new(v22.X, -v22.Y, -v22.Z), Vector3.new(-v22.X, v22.Y, v22.Z), Vector3.new(-v22.X, v22.Y, -v22.Z), Vector3.new(-v22.X, -v22.Y, v22.Z), Vector3.new(-v22.X, -v22.Y, -v22.Z) }) do
				local v25 = v21 * v24;
				v17 = u11(v17, v25);
				v18 = u12(v18, v25);
			end;
		end;
	end;
	local v26 = v18 - v17;
	if not (v26.X < 0) and not (v26.Y < 0) and not (v26.Z < 0) then
		return v26;
	end;
	return nil;
end;
local l__PathfindingService__18 = game:GetService("PathfindingService");
local u19 = true;
local u20 = require(script.Parent:WaitForChild("ClickToMoveDisplay"));
local u21 = 8;
local function u22()
	if u8 then
		return u8;
	end;
	u8 = {};
	table.insert(u8, u9());
	return u8;
end;
local u23 = nil;
local u24 = nil;
local u25 = nil;
local function u26()
	if u23 then
		u23:Cancel();
		u23 = nil;
	end;
	if u24 then
		u24:Disconnect();
		u24 = nil;
	end;
	if u25 then
		u25:Disconnect();
		u25 = nil;
	end;
end;
local function u27(p11)
	if p11 ~= nil then
		for v27, v28 in pairs(p11:GetChildren()) do
			if v28:IsA("Tool") then
				return v28;
			end;
		end;
	end;
end;
local u28 = true;
local function u29()
	local v29 = u3(l__LocalPlayer__4);
	local v30 = false;
	if v29 ~= nil then
		v30 = v29.Health > 0;
	end;
	return v30;
end;
local l__StarterGui__30 = game:GetService("StarterGui");
local function u31(p12, p13, p14)
	local v31 = {};
	if p14 ~= nil then
		local v32 = p14;
		local v33 = p14;
	else
		v32 = u13;
		v33 = true;
	end;
	v31.Cancelled = false;
	v31.Started = false;
	v31.Finished = Instance.new("BindableEvent");
	v31.PathFailed = Instance.new("BindableEvent");
	v31.PathComputing = false;
	v31.PathComputed = false;
	v31.OriginalTargetPoint = p12;
	v31.TargetPoint = p12;
	v31.TargetSurfaceNormal = p13;
	v31.DiedConn = nil;
	v31.SeatedConn = nil;
	v31.BlockedConn = nil;
	v31.TeleportedConn = nil;
	v31.CurrentPoint = 0;
	v31.HumanoidOffsetFromPath = u14;
	v31.CurrentWaypointPosition = nil;
	v31.CurrentWaypointPlaneNormal = u14;
	v31.CurrentWaypointPlaneDistance = 0;
	v31.CurrentWaypointNeedsJump = false;
	v31.CurrentHumanoidPosition = u14;
	v31.CurrentHumanoidVelocity = 0;
	v31.NextActionMoveDirection = u14;
	v31.NextActionJump = false;
	v31.Timeout = 0;
	v31.Humanoid = u3(l__LocalPlayer__4);
	v31.OriginPoint = nil;
	v31.AgentCanFollowPath = false;
	v31.DirectPath = false;
	v31.DirectPathRiseFirst = false;
	local v34 = v31.Humanoid and v31.Humanoid.RootPart;
	if v34 then
		v31.OriginPoint = v34.CFrame.p;
		local v35 = 2;
		local v36 = 5;
		local v37 = true;
		local l__SeatPart__38 = v31.Humanoid.SeatPart;
		if l__SeatPart__38 and l__SeatPart__38:IsA("VehicleSeat") then
			local v39 = l__SeatPart__38:FindFirstAncestorOfClass("Model");
			if v39 then
				v39.PrimaryPart = l__SeatPart__38;
				if v33 then
					local v40 = v39:GetExtentsSize();
					v35 = u15 * 0.5 * math.sqrt(v40.X * v40.X + v40.Z * v40.Z);
					v36 = u15 * v40.Y;
					v37 = false;
					v31.AgentCanFollowPath = true;
					v31.DirectPath = v33;
				end;
				v39.PrimaryPart = v39.PrimaryPart;
			end;
		else
			local v41 = nil;
			if u16 then
				local v42 = u9();
				if v42 ~= nil then
					v41 = u17(v42);
				end;
			end;
			if v41 == nil then
				v41 = u9():GetExtentsSize();
			end;
			v35 = u15 * 0.5 * math.sqrt(v41.X * v41.X + v41.Z * v41.Z);
			v36 = u15 * v41.Y;
			v37 = v31.Humanoid.JumpPower > 0;
			v31.AgentCanFollowPath = true;
			v31.DirectPath = v32;
			v31.DirectPathRiseFirst = v31.Humanoid.Sit;
		end;
		v31.pathResult = l__PathfindingService__18:CreatePath({
			AgentRadius = v35, 
			AgentHeight = v36, 
			AgentCanJump = v37
		});
	end;
	function v31.Cleanup(p15)
		if v31.stopTraverseFunc then
			v31.stopTraverseFunc();
			v31.stopTraverseFunc = nil;
		end;
		if v31.MoveToConn then
			v31.MoveToConn:Disconnect();
			v31.MoveToConn = nil;
		end;
		if v31.BlockedConn then
			v31.BlockedConn:Disconnect();
			v31.BlockedConn = nil;
		end;
		if v31.DiedConn then
			v31.DiedConn:Disconnect();
			v31.DiedConn = nil;
		end;
		if v31.SeatedConn then
			v31.SeatedConn:Disconnect();
			v31.SeatedConn = nil;
		end;
		if v31.TeleportedConn then
			v31.TeleportedConn:Disconnect();
			v31.TeleportedConn = nil;
		end;
		v31.Started = false;
	end;
	function v31.Cancel(p16)
		v31.Cancelled = true;
		v31:Cleanup();
	end;
	function v31.IsActive(p17)
		return v31.AgentCanFollowPath and (v31.Started and not v31.Cancelled);
	end;
	function v31.OnPathInterrupted(p18)
		v31.Cancelled = true;
		v31:OnPointReached(false);
	end;
	function v31.ComputePath(p19)
		if v31.OriginPoint then
			if v31.PathComputed or v31.PathComputing then
				return;
			end;
			v31.PathComputing = true;
			if v31.AgentCanFollowPath then
				if v31.DirectPath then
					v31.pointList = { PathWaypoint.new(v31.OriginPoint, Enum.PathWaypointAction.Walk), PathWaypoint.new(v31.TargetPoint, v31.DirectPathRiseFirst and Enum.PathWaypointAction.Jump or Enum.PathWaypointAction.Walk) };
					v31.PathComputed = true;
				else
					v31.pathResult:ComputeAsync(v31.OriginPoint, v31.TargetPoint);
					v31.pointList = v31.pathResult:GetWaypoints();
					v31.BlockedConn = v31.pathResult.Blocked:Connect(function(p20)
						v31:OnPathBlocked(p20);
					end);
					v31.PathComputed = v31.pathResult.Status == Enum.PathStatus.Success;
				end;
			end;
			v31.PathComputing = false;
		end;
	end;
	function v31.IsValidPath(p21)
		v31:ComputePath();
		return v31.PathComputed and v31.AgentCanFollowPath;
	end;
	v31.Recomputing = false;
	function v31.OnPathBlocked(p22, p23)
		if not (v31.CurrentPoint <= p23) or v31.Recomputing then
			return;
		end;
		v31.Recomputing = true;
		if v31.stopTraverseFunc then
			v31.stopTraverseFunc();
			v31.stopTraverseFunc = nil;
		end;
		v31.OriginPoint = v31.Humanoid.RootPart.CFrame.p;
		v31.pathResult:ComputeAsync(v31.OriginPoint, v31.TargetPoint);
		v31.pointList = v31.pathResult:GetWaypoints();
		if #v31.pointList > 0 then
			v31.HumanoidOffsetFromPath = v31.pointList[1].Position - v31.OriginPoint;
		end;
		v31.PathComputed = v31.pathResult.Status == Enum.PathStatus.Success;
		if u19 then
			local v43, v44 = u20.CreatePathDisplay(v31.pointList);
			v31.stopTraverseFunc = v43;
			v31.setPointFunc = v44;
		end;
		if v31.PathComputed then
			v31.CurrentPoint = 1;
			v31:OnPointReached(true);
		else
			v31.PathFailed:Fire();
			v31:Cleanup();
		end;
		v31.Recomputing = false;
	end;
	function v31.OnRenderStepped(p24, p25)
		if v31.Started and not v31.Cancelled then
			v31.Timeout = v31.Timeout + p25;
			if u21 < v31.Timeout then
				v31:OnPointReached(false);
				return;
			end;
			v31.CurrentHumanoidPosition = v31.Humanoid.RootPart.Position + v31.HumanoidOffsetFromPath;
			v31.CurrentHumanoidVelocity = v31.Humanoid.RootPart.Velocity;
			while v31.Started and v31:IsCurrentWaypointReached() do
				v31:OnPointReached(true);			
			end;
			if v31.Started then
				v31.NextActionMoveDirection = v31.CurrentWaypointPosition - v31.CurrentHumanoidPosition;
				if v31.NextActionMoveDirection.Magnitude > 1E-06 then
					v31.NextActionMoveDirection = v31.NextActionMoveDirection.Unit;
				else
					v31.NextActionMoveDirection = u14;
				end;
				if v31.CurrentWaypointNeedsJump then
					v31.NextActionJump = true;
					v31.CurrentWaypointNeedsJump = false;
					return;
				end;
				v31.NextActionJump = false;
			end;
		end;
	end;
	function v31.IsCurrentWaypointReached(p26)
		if v31.CurrentWaypointPlaneNormal ~= u14 then
			local v45 = v31.CurrentWaypointPlaneNormal:Dot(v31.CurrentHumanoidPosition) - v31.CurrentWaypointPlaneDistance < math.max(1, 0.0625 * -v31.CurrentWaypointPlaneNormal:Dot(v31.CurrentHumanoidVelocity));
		else
			v45 = true;
		end;
		if v45 then
			v31.CurrentWaypointPosition = nil;
			v31.CurrentWaypointPlaneNormal = u14;
			v31.CurrentWaypointPlaneDistance = 0;
		end;
		return v45;
	end;
	function v31.OnPointReached(p27, p28)
		if not p28 or not (not v31.Cancelled) then
			v31.PathFailed:Fire();
			v31:Cleanup();
			return;
		end;
		if v31.setPointFunc then
			v31.setPointFunc(v31.CurrentPoint);
		end;
		local v46 = v31.CurrentPoint + 1;
		if #v31.pointList < v46 then
			if v31.stopTraverseFunc then
				v31.stopTraverseFunc();
			end;
			v31.Finished:Fire();
			v31:Cleanup();
			return;
		end;
		local v47 = v31.pointList[v31.CurrentPoint];
		local v48 = v31.pointList[v46];
		local v49 = v31.Humanoid:GetState();
		local v50 = true;
		if v49 ~= Enum.HumanoidStateType.FallingDown then
			v50 = true;
			if v49 ~= Enum.HumanoidStateType.Freefall then
				v50 = v49 == Enum.HumanoidStateType.Jumping;
			end;
		end;
		if v50 then
			local v51 = v48.Action == Enum.PathWaypointAction.Jump;
			if not v51 and v31.CurrentPoint > 1 then
				local v52 = v47.Position - v31.pointList[v31.CurrentPoint - 1].Position;
				local v53 = v48.Position - v47.Position;
				v51 = Vector2.new(v52.x, v52.z).Unit:Dot(Vector2.new(v53.x, v53.z).Unit) < 0.996;
			end;
			if v51 then
				v31.Humanoid.FreeFalling:Wait();
				wait(0.1);
			end;
		end;
		v31:MoveToNextWayPoint(v47, v48, v46);
	end;
	function v31.MoveToNextWayPoint(p29, p30, p31, p32)
		v31.CurrentWaypointPlaneNormal = p30.Position - p31.Position;
		v31.CurrentWaypointPlaneNormal = Vector3.new(v31.CurrentWaypointPlaneNormal.X, 0, v31.CurrentWaypointPlaneNormal.Z);
		if v31.CurrentWaypointPlaneNormal.Magnitude > 1E-06 then
			v31.CurrentWaypointPlaneNormal = v31.CurrentWaypointPlaneNormal.Unit;
			v31.CurrentWaypointPlaneDistance = v31.CurrentWaypointPlaneNormal:Dot(p31.Position);
		else
			v31.CurrentWaypointPlaneNormal = u14;
			v31.CurrentWaypointPlaneDistance = 0;
		end;
		v31.CurrentWaypointNeedsJump = p31.Action == Enum.PathWaypointAction.Jump;
		v31.CurrentWaypointPosition = p31.Position;
		v31.CurrentPoint = p32;
		v31.Timeout = 0;
	end;
	function v31.Start(p33, p34)
		if not v31.AgentCanFollowPath then
			v31.PathFailed:Fire();
			return;
		end;
		if v31.Started then
			return;
		end;
		v31.Started = true;
		u20.CancelFailureAnimation();
		if u19 and (p34 == nil or p34) then
			local v54, v55 = u20.CreatePathDisplay(v31.pointList, v31.OriginalTargetPoint);
			v31.stopTraverseFunc = v54;
			v31.setPointFunc = v55;
		end;
		if not (#v31.pointList > 0) then
			v31.PathFailed:Fire();
			if v31.stopTraverseFunc then
				v31.stopTraverseFunc();
			end;
			return;
		end;
		v31.HumanoidOffsetFromPath = Vector3.new(0, v31.pointList[1].Position.Y - v31.OriginPoint.Y, 0);
		v31.CurrentHumanoidPosition = v31.Humanoid.RootPart.Position + v31.HumanoidOffsetFromPath;
		v31.CurrentHumanoidVelocity = v31.Humanoid.RootPart.Velocity;
		v31.SeatedConn = v31.Humanoid.Seated:Connect(function(p35, p36)
			v31:OnPathInterrupted();
		end);
		v31.DiedConn = v31.Humanoid.Died:Connect(function()
			v31:OnPathInterrupted();
		end);
		v31.TeleportedConn = v31.Humanoid.RootPart:GetPropertyChangedSignal("CFrame"):Connect(function()
			v31:OnPathInterrupted();
		end);
		v31.CurrentPoint = 1;
		v31:OnPointReached(true);
	end;
	local v56, v57 = l__Workspace__2:FindPartOnRayWithIgnoreList(Ray.new(v31.TargetPoint + v31.TargetSurfaceNormal * 1.5, Vector3.new(0, -1, 0) * 50), u22());
	if v56 then
		v31.TargetPoint = v57;
	end;
	v31:ComputePath();
	return v31;
end;
local function u32(p37, p38, p39, p40, p41)
	if u23 then
		u26();
	end;
	u23 = p37;
	p37:Start(p41);
	u24 = p37.Finished.Event:Connect(function()
		u26();
		if p39 then
			local v58 = u27(p40);
			if v58 then
				v58:Activate();
			end;
		end;
	end);
	u25 = p37.PathFailed.Event:Connect(function()
		u26();
		if p41 == nil or p41 then
			if u28 and (not u23 or not u23:IsActive()) then
				u20.PlayFailureAnimation();
			end;
			u20.DisplayFailureWaypoint(p38);
		end;
	end);
end;
local function u33(p42)
	if u23 and u23:IsActive() then
		u23:Cancel();
	end;
	if u28 then
		u20.PlayFailureAnimation();
	end;
	u20.DisplayFailureWaypoint(p42);
end;
function OnTap(p43, p44, p45)
	local l__CurrentCamera__59 = l__Workspace__2.CurrentCamera;
	local l__Character__60 = l__LocalPlayer__4.Character;
	if not u29() then
		return;
	end;
	if #p43 ~= 1 then
		if p44 then
			if l__CurrentCamera__59 then
				local v61 = l__CurrentCamera__59:ScreenPointToRay(p43[1].x, p43[1].y);
				local v62 = u3(l__LocalPlayer__4);
				local v63, v64, v65 = v5.Raycast(Ray.new(v61.Origin, v61.Direction * 1000), true, u22());
				local v66, v67 = v5.FindCharacterAncestor(v63);
				if p45 then
					if v67 then
						if l__StarterGui__30:GetCore("AvatarContextMenuEnabled") then
							if l__Players__3:GetPlayerFromCharacter(v67.Parent) then
								u26();
								return;
							end;
						end;
					end;
				end;
				if p44 then
					v64 = p44;
					v66 = nil;
				end;
				if v64 then
					if l__Character__60 then
						u26();
						local v68 = u31(v64, v65);
						if v68:IsValidPath() then
							u32(v68, v64, v66, l__Character__60);
							return;
						else
							v68:Cleanup();
							u33(v64);
							return;
						end;
					end;
				end;
			end;
		elseif 2 <= #p43 then
			if l__CurrentCamera__59 then
				local v69 = u27(l__Character__60);
				if v69 then
					v69:Activate();
				end;
			end;
		end;
	elseif l__CurrentCamera__59 then
		v61 = l__CurrentCamera__59:ScreenPointToRay(p43[1].x, p43[1].y);
		v62 = u3(l__LocalPlayer__4);
		v63, v64, v65 = v5.Raycast(Ray.new(v61.Origin, v61.Direction * 1000), true, u22());
		v66, v67 = v5.FindCharacterAncestor(v63);
		if p45 then
			if v67 then
				if l__StarterGui__30:GetCore("AvatarContextMenuEnabled") then
					if l__Players__3:GetPlayerFromCharacter(v67.Parent) then
						u26();
						return;
					end;
				end;
			end;
		end;
		if p44 then
			v64 = p44;
			v66 = nil;
		end;
		if v64 then
			if l__Character__60 then
				u26();
				v68 = u31(v64, v65);
				if v68:IsValidPath() then
					u32(v68, v64, v66, l__Character__60);
					return;
				else
					v68:Cleanup();
					u33(v64);
					return;
				end;
			end;
		end;
	end;
end;
local v70 = require(script.Parent:WaitForChild("Keyboard"));
local v71 = setmetatable({}, v70);
v71.__index = v71;
function v71.new(p46)
	local v72 = setmetatable(v70.new(p46), v71);
	v72.fingerTouches = {};
	v72.numUnsunkTouches = 0;
	v72.mouse1Down = tick();
	v72.mouse1DownPos = Vector2.new();
	v72.mouse2DownTime = tick();
	v72.mouse2DownPos = Vector2.new();
	v72.mouse2UpTime = tick();
	v72.keyboardMoveVector = u14;
	v72.tapConn = nil;
	v72.inputBeganConn = nil;
	v72.inputChangedConn = nil;
	v72.inputEndedConn = nil;
	v72.humanoidDiedConn = nil;
	v72.characterChildAddedConn = nil;
	v72.onCharacterAddedConn = nil;
	v72.characterChildRemovedConn = nil;
	v72.renderSteppedConn = nil;
	v72.menuOpenedConnection = nil;
	v72.running = false;
	v72.wasdEnabled = false;
	return v72;
end;
local function u34(p47)
	if p47 then
		p47:Disconnect();
	end;
end;
function v71.DisconnectEvents(p48)
	u34(p48.tapConn);
	u34(p48.inputBeganConn);
	u34(p48.inputChangedConn);
	u34(p48.inputEndedConn);
	u34(p48.humanoidDiedConn);
	u34(p48.characterChildAddedConn);
	u34(p48.onCharacterAddedConn);
	u34(p48.renderSteppedConn);
	u34(p48.characterChildRemovedConn);
	u34(p48.menuOpenedConnection);
end;
function v71.OnTouchBegan(p49, p50, p51)
	if p49.fingerTouches[p50] == nil and not p51 then
		p49.numUnsunkTouches = p49.numUnsunkTouches + 1;
	end;
	p49.fingerTouches[p50] = p51;
end;
function v71.OnTouchChanged(p52, p53, p54)
	if p52.fingerTouches[p53] == nil then
		p52.fingerTouches[p53] = p54;
		if not p54 then
			p52.numUnsunkTouches = p52.numUnsunkTouches + 1;
		end;
	end;
end;
function v71.OnTouchEnded(p55, p56, p57)
	if p55.fingerTouches[p56] ~= nil and p55.fingerTouches[p56] == false then
		p55.numUnsunkTouches = p55.numUnsunkTouches - 1;
	end;
	p55.fingerTouches[p56] = nil;
end;
local l__UserInputService__35 = game:GetService("UserInputService");
local u36 = {
	[Enum.KeyCode.W] = true, 
	[Enum.KeyCode.A] = true, 
	[Enum.KeyCode.S] = true, 
	[Enum.KeyCode.D] = true, 
	[Enum.KeyCode.Up] = true, 
	[Enum.KeyCode.Down] = true
};
local l__GuiService__37 = game:GetService("GuiService");
function v71.OnCharacterAdded(p58, p59)
	p58:DisconnectEvents();
	p58.inputBeganConn = l__UserInputService__35.InputBegan:Connect(function(p60, p61)
		if p60.UserInputType == Enum.UserInputType.Touch then
			p58:OnTouchBegan(p60, p61);
		end;
		if p58.wasdEnabled and p61 == false and p60.UserInputType == Enum.UserInputType.Keyboard and u36[p60.KeyCode] then
			u26();
			u20.CancelFailureAnimation();
		end;
		if p60.UserInputType == Enum.UserInputType.MouseButton1 then
			p58.mouse1DownTime = tick();
			p58.mouse1DownPos = p60.Position;
		end;
		if p60.UserInputType == Enum.UserInputType.MouseButton2 then
			p58.mouse2DownTime = tick();
			p58.mouse2DownPos = p60.Position;
		end;
	end);
	p58.inputChangedConn = l__UserInputService__35.InputChanged:Connect(function(p62, p63)
		if p62.UserInputType == Enum.UserInputType.Touch then
			p58:OnTouchChanged(p62, p63);
		end;
	end);
	p58.inputEndedConn = l__UserInputService__35.InputEnded:Connect(function(p64, p65)
		if p64.UserInputType == Enum.UserInputType.Touch then
			p58:OnTouchEnded(p64, p65);
		end;
		if p64.UserInputType == Enum.UserInputType.MouseButton2 then
			p58.mouse2UpTime = tick();
			local l__Position__73 = p64.Position;
			if p58.mouse2UpTime - p58.mouse2DownTime < 0.25 and (l__Position__73 - p58.mouse2DownPos).magnitude < 5 and (u23 or p58.keyboardMoveVector.Magnitude <= 0) then
				OnTap({ l__Position__73 });
			end;
		end;
	end);
	p58.tapConn = l__UserInputService__35.TouchTap:Connect(function(p66, p67)
		if not p67 then
			OnTap(p66, nil, true);
		end;
	end);
	p58.menuOpenedConnection = l__GuiService__37.MenuOpened:Connect(function()
		u26();
	end);
	local function u38(p68)
		if l__UserInputService__35.TouchEnabled and p68:IsA("Tool") then
			p68.ManualActivationOnly = true;
		end;
		if p68:IsA("Humanoid") then
			u34(p58.humanoidDiedConn);
			p58.humanoidDiedConn = p68.Died:Connect(function()

			end);
		end;
	end;
	p58.characterChildAddedConn = p59.ChildAdded:Connect(function(p69)
		u38(p69);
	end);
	p58.characterChildRemovedConn = p59.ChildRemoved:Connect(function(p70)
		if l__UserInputService__35.TouchEnabled and p70:IsA("Tool") then
			p70.ManualActivationOnly = false;
		end;
	end);
	for v74, v75 in pairs(p59:GetChildren()) do
		u38(v75);
	end;
end;
function v71.Start(p71)
	p71:Enable(true);
end;
function v71.Stop(p72)
	p72:Enable(false);
end;
function v71.CleanupPath(p73)
	u26();
end;
function v71.Enable(p74, p75, p76, p77)
	if p75 then
		if not p74.running then
			if l__LocalPlayer__4.Character then
				p74:OnCharacterAdded(l__LocalPlayer__4.Character);
			end;
			p74.onCharacterAddedConn = l__LocalPlayer__4.CharacterAdded:Connect(function(p78)
				p74:OnCharacterAdded(p78);
			end);
			p74.running = true;
		end;
		p74.touchJumpController = p77;
		if p74.touchJumpController then
			p74.touchJumpController:Enable(p74.jumpEnabled);
		end;
	else
		if p74.running then
			p74:DisconnectEvents();
			u26();
			if l__UserInputService__35.TouchEnabled then
				local l__Character__76 = l__LocalPlayer__4.Character;
				if l__Character__76 then
					for v77, v78 in pairs(l__Character__76:GetChildren()) do
						if v78:IsA("Tool") then
							v78.ManualActivationOnly = false;
						end;
					end;
				end;
			end;
			p74.running = false;
		end;
		if p74.touchJumpController and not p74.jumpEnabled then
			p74.touchJumpController:Enable(true);
		end;
		p74.touchJumpController = nil;
	end;
	if l__UserInputService__35.KeyboardEnabled and p75 ~= p74.enabled then
		p74.forwardValue = 0;
		p74.backwardValue = 0;
		p74.leftValue = 0;
		p74.rightValue = 0;
		p74.moveVector = u14;
		if p75 then
			p74:BindContextActions();
			p74:ConnectFocusEventListeners();
		else
			p74:UnbindContextActions();
			p74:DisconnectFocusEventListeners();
		end;
	end;
	p74.wasdEnabled = p75 and p76 or false;
	p74.enabled = p75;
end;
function v71.OnRenderStepped(p79, p80)
	p79.isJumping = false;
	if u23 then
		u23:OnRenderStepped(p80);
		if u23 then
			p79.moveVector = u23.NextActionMoveDirection;
			p79.moveVectorIsCameraRelative = false;
			if u23.NextActionJump then
				p79.isJumping = true;
			end;
		else
			p79.moveVector = p79.keyboardMoveVector;
			p79.moveVectorIsCameraRelative = true;
		end;
	else
		p79.moveVector = p79.keyboardMoveVector;
		p79.moveVectorIsCameraRelative = true;
	end;
	if p79.jumpRequested then
		p79.isJumping = true;
	end;
end;
function v71.UpdateMovement(p81, p82)
	if p82 == Enum.UserInputState.Cancel then
		p81.keyboardMoveVector = u14;
		return;
	end;
	if p81.wasdEnabled then
		p81.keyboardMoveVector = Vector3.new(p81.leftValue + p81.rightValue, 0, p81.forwardValue + p81.backwardValue);
	end;
end;
function v71.UpdateJump(p83)

end;
function v71.SetShowPath(p84, p85)
	u19 = p85;
end;
function v71.GetShowPath(p86)
	return u19;
end;
function v71.SetWaypointTexture(p87, p88)
	u20.SetWaypointTexture(p88);
end;
function v71.GetWaypointTexture(p89)
	return u20.GetWaypointTexture();
end;
function v71.SetWaypointRadius(p90, p91)
	u20.SetWaypointRadius(p91);
end;
function v71.GetWaypointRadius(p92)
	return u20.GetWaypointRadius();
end;
function v71.SetEndWaypointTexture(p93, p94)
	u20.SetEndWaypointTexture(p94);
end;
function v71.GetEndWaypointTexture(p95)
	return u20.GetEndWaypointTexture();
end;
function v71.SetWaypointsAlwaysOnTop(p96, p97)
	u20.SetWaypointsAlwaysOnTop(p97);
end;
function v71.GetWaypointsAlwaysOnTop(p98)
	return u20.GetWaypointsAlwaysOnTop();
end;
function v71.SetFailureAnimationEnabled(p99, p100)
	u28 = p100;
end;
function v71.GetFailureAnimationEnabled(p101)
	return u28;
end;
local function u39(p102)
	if p102 == u5 then
		return;
	end;
	if u6 then
		u6:Disconnect();
		u6 = nil;
	end;
	if u7 then
		u7:Disconnect();
		u7 = nil;
	end;
	u5 = p102;
	u8 = { u9() };
	if u5 ~= nil then
		for v79, v80 in ipairs((l__CollectionService__10:GetTagged(u5))) do
			table.insert(u8, v80);
		end;
		u6 = l__CollectionService__10:GetInstanceAddedSignal(u5):Connect(function(p103)
			table.insert(u8, p103);
		end);
		u7 = l__CollectionService__10:GetInstanceRemovedSignal(u5):Connect(function(p104)
			for v81 = 1, #u8 do
				if u8[v81] == p104 then
					u8[v81] = u8[#u8];
					table.remove(u8);
					return;
				end;
			end;
		end);
	end;
end;
function v71.SetIgnoredPartsTag(p105, p106)
	u39(p106);
end;
function v71.GetIgnoredPartsTag(p107)
	return u5;
end;
function v71.SetUseDirectPath(p108, p109)
	u13 = p109;
end;
function v71.GetUseDirectPath(p110)
	return u13;
end;
function v71.SetAgentSizeIncreaseFactor(p111, p112)
	u15 = 1 + p112 / 100;
end;
function v71.GetAgentSizeIncreaseFactor(p113)
	return (u15 - 1) * 100;
end;
function v71.SetUnreachableWaypointTimeout(p114, p115)
	u21 = p115;
end;
function v71.GetUnreachableWaypointTimeout(p116)
	return u21;
end;
function v71.SetUserJumpEnabled(p117, p118)
	p117.jumpEnabled = p118;
	if p117.touchJumpController then
		p117.touchJumpController:Enable(p118);
	end;
end;
function v71.GetUserJumpEnabled(p119)
	return p119.jumpEnabled;
end;
function v71.MoveTo(p120, p121, p122, p123)
	local l__Character__82 = l__LocalPlayer__4.Character;
	if l__Character__82 == nil then
		return false;
	end;
	local v83 = u31(p121, Vector3.new(0, 1, 0), p123);
	if not v83 or not v83:IsValidPath() then
		return false;
	end;
	u32(v83, p121, nil, l__Character__82, p122);
	return true;
end;
return v71;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX280"><Properties><string name="Name">VehicleController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local u1 = Vector3.new(0, 0, 0);
function v1.new(p1)
	local v2 = setmetatable({}, v1);
	v2.CONTROL_ACTION_PRIORITY = p1;
	v2.enabled = false;
	v2.vehicleSeat = nil;
	v2.throttle = 0;
	v2.steer = 0;
	v2.acceleration = 0;
	v2.decceleration = 0;
	v2.turningRight = 0;
	v2.turningLeft = 0;
	v2.vehicleMoveVector = u1;
	v2.autoPilot = {};
	v2.autoPilot.MaxSpeed = 0;
	v2.autoPilot.MaxSteeringAngle = 0;
	return v2;
end;
local l__ContextActionService__2 = game:GetService("ContextActionService");
function v1.BindContextActions(p2)
	l__ContextActionService__2:BindActionAtPriority("throttleAccel", function(p3, p4, p5)
		p2:OnThrottleAccel(p3, p4, p5);
		return Enum.ContextActionResult.Pass;
	end, false, p2.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonR2);
	l__ContextActionService__2:BindActionAtPriority("throttleDeccel", function(p6, p7, p8)
		p2:OnThrottleDeccel(p6, p7, p8);
		return Enum.ContextActionResult.Pass;
	end, false, p2.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonL2);
	l__ContextActionService__2:BindActionAtPriority("arrowSteerRight", function(p9, p10, p11)
		p2:OnSteerRight(p9, p10, p11);
		return Enum.ContextActionResult.Pass;
	end, false, p2.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Right);
	l__ContextActionService__2:BindActionAtPriority("arrowSteerLeft", function(p12, p13, p14)
		p2:OnSteerLeft(p12, p13, p14);
		return Enum.ContextActionResult.Pass;
	end, false, p2.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Left);
end;
function v1.Enable(p15, p16, p17)
	if p16 == p15.enabled and p17 == p15.vehicleSeat then
		return;
	end;
	p15.enabled = p16;
	p15.vehicleMoveVector = u1;
	if p16 then
		if not p17 then
			return;
		end;
	else
		l__ContextActionService__2:UnbindAction("throttleAccel");
		l__ContextActionService__2:UnbindAction("throttleDeccel");
		l__ContextActionService__2:UnbindAction("arrowSteerRight");
		l__ContextActionService__2:UnbindAction("arrowSteerLeft");
		p15.vehicleSeat = nil;
		return;
	end;
	p15.vehicleSeat = p17;
	p15:SetupAutoPilot();
	p15:BindContextActions();
end;
function v1.OnThrottleAccel(p18, p19, p20, p21)
	if p20 == Enum.UserInputState.End or p20 == Enum.UserInputState.Cancel then
		p18.acceleration = 0;
	else
		p18.acceleration = -1;
	end;
	p18.throttle = p18.acceleration + p18.decceleration;
end;
function v1.OnThrottleDeccel(p22, p23, p24, p25)
	if p24 == Enum.UserInputState.End or p24 == Enum.UserInputState.Cancel then
		p22.decceleration = 0;
	else
		p22.decceleration = 1;
	end;
	p22.throttle = p22.acceleration + p22.decceleration;
end;
function v1.OnSteerRight(p26, p27, p28, p29)
	if p28 == Enum.UserInputState.End or p28 == Enum.UserInputState.Cancel then
		p26.turningRight = 0;
	else
		p26.turningRight = 1;
	end;
	p26.steer = p26.turningRight + p26.turningLeft;
end;
function v1.OnSteerLeft(p30, p31, p32, p33)
	if p32 == Enum.UserInputState.End or p32 == Enum.UserInputState.Cancel then
		p30.turningLeft = 0;
	else
		p30.turningLeft = -1;
	end;
	p30.steer = p30.turningRight + p30.turningLeft;
end;
function v1.Update(p34, p35, p36, p37)
	if not p34.vehicleSeat then
		return p35, false;
	end;
	if p36 then
		p35 = p35 + Vector3.new(p34.steer, 0, p34.throttle);
		if p37 then

		end;
		p34.vehicleSeat.ThrottleFloat = -p35.Z;
		p34.vehicleSeat.SteerFloat = p35.X;
		return p35, true;
	end;
	local v3 = p34.vehicleSeat.Occupant.RootPart.CFrame:VectorToObjectSpace(p35);
	p34.vehicleSeat.ThrottleFloat = p34:ComputeThrottle(v3);
	p34.vehicleSeat.SteerFloat = p34:ComputeSteer(v3);
	return u1, true;
end;
function v1.ComputeThrottle(p38, p39)
	if p39 == u1 then
		return 0;
	end;
	return -p39.Z;
end;
function v1.ComputeSteer(p40, p41)
	if p41 == u1 then
		return 0;
	end;
	return -math.atan2(-p41.x, -p41.z) * (180 / math.pi) / p40.autoPilot.MaxSteeringAngle;
end;
function v1.SetupAutoPilot(p42)
	p42.autoPilot.MaxSpeed = p42.vehicleSeat.MaxSpeed;
	p42.autoPilot.MaxSteeringAngle = 35;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX287"><Properties><string name="Name">DynamicThumbstick</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = { 0.10999999999999999, 0.30000000000000004, 0.4, 0.5, 0.6, 0.7, 0.75 };
local l__Players__2 = game:GetService("Players");
local l__GuiService__3 = game:GetService("GuiService");
local l__UserInputService__4 = game:GetService("UserInputService");
local l__RunService__5 = game:GetService("RunService");
local v6 = l__Players__2.LocalPlayer;
if not v6 then
	l__Players__2:GetPropertyChangedSignal("LocalPlayer"):Wait();
	v6 = l__Players__2.LocalPlayer;
end;
local v7 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v8 = setmetatable({}, v7);
v8.__index = v8;
function v8.new()
	local v9 = setmetatable(v7.new(), v8);
	v9.moveTouchObject = nil;
	v9.moveTouchLockedIn = false;
	v9.moveTouchFirstChanged = false;
	v9.moveTouchStartPosition = nil;
	v9.startImage = nil;
	v9.endImage = nil;
	v9.middleImages = {};
	v9.startImageFadeTween = nil;
	v9.endImageFadeTween = nil;
	v9.middleImageFadeTweens = {};
	v9.isFirstTouch = true;
	v9.thumbstickFrame = nil;
	v9.onRenderSteppedConn = nil;
	v9.fadeInAndOutBalance = 0.5;
	v9.fadeInAndOutHalfDuration = 0.3;
	v9.hasFadedBackgroundInPortrait = false;
	v9.hasFadedBackgroundInLandscape = false;
	v9.tweenInAlphaStart = nil;
	v9.tweenOutAlphaStart = nil;
	return v9;
end;
function v8.GetIsJumping(p1)
	p1.isJumping = false;
	return p1.isJumping;
end;
local l__ContextActionService__1 = game:GetService("ContextActionService");
function v8.Enable(p2, p3, p4)
	if p3 == nil then
		return false;
	end;
	if p3 then
		local v10 = true;
	else
		v10 = false;
	end;
	p3 = v10;
	if p2.enabled == p3 then
		return true;
	end;
	if p3 then
		if not p2.thumbstickFrame then
			p2:Create(p4);
		end;
		p2:BindContextActions();
	else
		l__ContextActionService__1:UnbindAction("DynamicThumbstickAction");
		p2:OnInputEnded();
	end;
	p2.enabled = p3;
	p2.thumbstickFrame.Visible = p3;
end;
local u2 = Vector3.new(0, 0, 0);
function v8.OnInputEnded(p5)
	p5.moveTouchObject = nil;
	p5.moveVector = u2;
	p5:FadeThumbstick(false);
end;
local l__TweenService__3 = game:GetService("TweenService");
local u4 = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut);
function v8.FadeThumbstick(p6, p7)
	if not p7 and p6.moveTouchObject then
		return;
	end;
	if p6.isFirstTouch then
		return;
	end;
	if p6.startImageFadeTween then
		p6.startImageFadeTween:Cancel();
	end;
	if p6.endImageFadeTween then
		p6.endImageFadeTween:Cancel();
	end;
	for v11 = 1, #p6.middleImages do
		if p6.middleImageFadeTweens[v11] then
			p6.middleImageFadeTweens[v11]:Cancel();
		end;
	end;
	if not p7 then
		p6.startImageFadeTween = l__TweenService__3:Create(p6.startImage, u4, {
			ImageTransparency = 1
		});
		p6.startImageFadeTween:Play();
		p6.endImageFadeTween = l__TweenService__3:Create(p6.endImage, u4, {
			ImageTransparency = 1
		});
		p6.endImageFadeTween:Play();
		for v12 = 1, #p6.middleImages do
			p6.middleImageFadeTweens[v12] = l__TweenService__3:Create(p6.middleImages[v12], u4, {
				ImageTransparency = 1
			});
			p6.middleImageFadeTweens[v12]:Play();
		end;
		return;
	end;
	p6.startImageFadeTween = l__TweenService__3:Create(p6.startImage, u4, {
		ImageTransparency = 0
	});
	p6.startImageFadeTween:Play();
	p6.endImageFadeTween = l__TweenService__3:Create(p6.endImage, u4, {
		ImageTransparency = 0.2
	});
	p6.endImageFadeTween:Play();
	for v13 = 1, #p6.middleImages do
		p6.middleImageFadeTweens[v13] = l__TweenService__3:Create(p6.middleImages[v13], u4, {
			ImageTransparency = v1[v13]
		});
		p6.middleImageFadeTweens[v13]:Play();
	end;
end;
function v8.FadeThumbstickFrame(p8, p9, p10)
	p8.fadeInAndOutHalfDuration = p9 * 0.5;
	p8.fadeInAndOutBalance = p10;
	p8.tweenInAlphaStart = tick();
end;
function v8.InputInFrame(p11, p12)
	local l__AbsolutePosition__14 = p11.thumbstickFrame.AbsolutePosition;
	local v15 = l__AbsolutePosition__14 + p11.thumbstickFrame.AbsoluteSize;
	local l__Position__16 = p12.Position;
	if l__AbsolutePosition__14.X <= l__Position__16.X and l__AbsolutePosition__14.Y <= l__Position__16.Y and l__Position__16.X <= v15.X and l__Position__16.Y <= v15.Y then
		return true;
	end;
	return false;
end;
function v8.DoFadeInBackground(p13)
	local v17 = v6:FindFirstChildOfClass("PlayerGui");
	local v18 = false;
	if v17 then
		if v17.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeLeft or v17.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight then
			v18 = p13.hasFadedBackgroundInLandscape;
			p13.hasFadedBackgroundInLandscape = true;
		elseif v17.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait then
			v18 = p13.hasFadedBackgroundInPortrait;
			p13.hasFadedBackgroundInPortrait = true;
		end;
	end;
	if not v18 then
		p13.fadeInAndOutHalfDuration = 0.3;
		p13.fadeInAndOutBalance = 0.5;
		p13.tweenInAlphaStart = tick();
	end;
end;
function v8.DoMove(p14, p15)
	if p15.magnitude < p14.radiusOfDeadZone then
		local v19 = u2;
	else
		local v20 = p15.unit * (1 - math.max(0, (p14.radiusOfMaxSpeed - p15.magnitude) / p14.radiusOfMaxSpeed));
		v19 = Vector3.new(v20.x, 0, v20.y);
	end;
	p14.moveVector = v19;
end;
local u5 = #v1;
function v8.LayoutMiddleImages(p16, p17, p18)
	local v21 = p16.thumbstickSize / 2 + p16.middleSize;
	local v22 = p18 - p17;
	local v23 = v22.magnitude - p16.thumbstickRingSize / 2 - p16.middleSize;
	local l__unit__24 = v22.unit;
	local v25 = p16.middleSpacing;
	if p16.middleSpacing * u5 < v23 then
		v25 = v23 / u5;
	end;
	for v26 = 1, u5 do
		local v27 = nil;
		v27 = p16.middleImages[v26];
		local v28 = v21 + v25 * (v26 - 1);
		if v21 + v25 * (v26 - 2) < v23 then
			local v29 = p18 - l__unit__24 * v28;
			local v30 = math.clamp(1 - (v28 - v23) / v25, 0, 1);
			v27.Visible = true;
			v27.Position = UDim2.new(0, v29.X, 0, v29.Y);
			v27.Size = UDim2.new(0, p16.middleSize * v30, 0, p16.middleSize * v30);
		else
			v27.Visible = false;
		end;
	end;
end;
function v8.MoveStick(p19, p20)
	local v31 = Vector2.new(p19.moveTouchStartPosition.X, p19.moveTouchStartPosition.Y) - p19.thumbstickFrame.AbsolutePosition;
	local v32 = Vector2.new(p20.X, p20.Y) - p19.thumbstickFrame.AbsolutePosition;
	p19.endImage.Position = UDim2.new(0, v32.X, 0, v32.Y);
	p19:LayoutMiddleImages(v31, v32);
end;
local l__Value__6 = Enum.ContextActionPriority.High.Value;
function v8.BindContextActions(p21)
	local function u7(p22)
		if p21.moveTouchObject then
			return Enum.ContextActionResult.Pass;
		end;
		if not p21:InputInFrame(p22) then
			return Enum.ContextActionResult.Pass;
		end;
		if p21.isFirstTouch then
			p21.isFirstTouch = false;
			local v33 = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0);
			l__TweenService__3:Create(p21.startImage, v33, {
				Size = UDim2.new(0, 0, 0, 0)
			}):Play();
			l__TweenService__3:Create(p21.endImage, v33, {
				Size = UDim2.new(0, p21.thumbstickSize, 0, p21.thumbstickSize), 
				ImageColor3 = Color3.new(0, 0, 0)
			}):Play();
		end;
		p21.moveTouchLockedIn = false;
		p21.moveTouchObject = p22;
		p21.moveTouchStartPosition = p22.Position;
		p21.moveTouchFirstChanged = true;
		p21:DoFadeInBackground();
		return Enum.ContextActionResult.Pass;
	end;
	local function u8(p23)
		if p23 ~= p21.moveTouchObject then
			return Enum.ContextActionResult.Pass;
		end;
		if p21.moveTouchFirstChanged then
			p21.moveTouchFirstChanged = false;
			local v34 = Vector2.new(p23.Position.X - p21.thumbstickFrame.AbsolutePosition.X, p23.Position.Y - p21.thumbstickFrame.AbsolutePosition.Y);
			p21.startImage.Visible = true;
			p21.startImage.Position = UDim2.new(0, v34.X, 0, v34.Y);
			p21.endImage.Visible = true;
			p21.endImage.Position = p21.startImage.Position;
			p21:FadeThumbstick(true);
			p21:MoveStick(p23.Position);
		end;
		p21.moveTouchLockedIn = true;
		local v35 = Vector2.new(p23.Position.x - p21.moveTouchStartPosition.x, p23.Position.y - p21.moveTouchStartPosition.y);
		if math.abs(v35.x) > 0 or math.abs(v35.y) > 0 then
			p21:DoMove(v35);
			p21:MoveStick(p23.Position);
		end;
		return Enum.ContextActionResult.Sink;
	end;
	local function u9(p24)
		if p24 == p21.moveTouchObject then
			p21:OnInputEnded();
			if p21.moveTouchLockedIn then
				return Enum.ContextActionResult.Sink;
			end;
		end;
		return Enum.ContextActionResult.Pass;
	end;
	l__ContextActionService__1:BindActionAtPriority("DynamicThumbstickAction", function(p25, p26, p27)
		if p26 == Enum.UserInputState.Begin then
			return u7(p27);
		end;
		if p26 == Enum.UserInputState.Change then
			return u8(p27);
		end;
		if p26 == Enum.UserInputState.End then
			return u9(p27);
		end;
		if p26 == Enum.UserInputState.Cancel then
			p21:OnInputEnded();
		end;
	end, false, l__Value__6, Enum.UserInputType.Touch);
end;
function v8.Create(p28, p29)
	if p28.thumbstickFrame then
		p28.thumbstickFrame:Destroy();
		p28.thumbstickFrame = nil;
		if p28.onRenderSteppedConn then
			p28.onRenderSteppedConn:Disconnect();
			p28.onRenderSteppedConn = nil;
		end;
	end;
	p28.thumbstickSize = 45;
	p28.thumbstickRingSize = 20;
	p28.middleSize = 10;
	p28.middleSpacing = p28.middleSize + 4;
	p28.radiusOfDeadZone = 2;
	p28.radiusOfMaxSpeed = 20;
	local l__AbsoluteSize__36 = p29.AbsoluteSize;
	if math.min(l__AbsoluteSize__36.x, l__AbsoluteSize__36.y) > 500 then
		p28.thumbstickSize = p28.thumbstickSize * 2;
		p28.thumbstickRingSize = p28.thumbstickRingSize * 2;
		p28.middleSize = p28.middleSize * 2;
		p28.middleSpacing = p28.middleSpacing * 2;
		p28.radiusOfDeadZone = p28.radiusOfDeadZone * 2;
		p28.radiusOfMaxSpeed = p28.radiusOfMaxSpeed * 2;
	end;
	local function v37(p30)
		if p30 then
			p28.thumbstickFrame.Size = UDim2.new(1, 0, 0.4, 0);
			p28.thumbstickFrame.Position = UDim2.new(0, 0, 0.6, 0);
			return;
		end;
		p28.thumbstickFrame.Size = UDim2.new(0.4, 0, 0.6666666666666666, 0);
		p28.thumbstickFrame.Position = UDim2.new(0, 0, 0.3333333333333333, 0);
	end;
	p28.thumbstickFrame = Instance.new("Frame");
	p28.thumbstickFrame.BorderSizePixel = 0;
	p28.thumbstickFrame.Name = "DynamicThumbstickFrame";
	p28.thumbstickFrame.Visible = false;
	p28.thumbstickFrame.BackgroundTransparency = 1;
	p28.thumbstickFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
	p28.thumbstickFrame.Active = false;
	v37(false);
	p28.startImage = Instance.new("ImageLabel");
	p28.startImage.Name = "ThumbstickStart";
	p28.startImage.Visible = true;
	p28.startImage.BackgroundTransparency = 1;
	p28.startImage.Image = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png";
	p28.startImage.ImageRectOffset = Vector2.new(1, 1);
	p28.startImage.ImageRectSize = Vector2.new(144, 144);
	p28.startImage.ImageColor3 = Color3.new(0, 0, 0);
	p28.startImage.AnchorPoint = Vector2.new(0.5, 0.5);
	p28.startImage.Position = UDim2.new(0, p28.thumbstickRingSize * 3.3, 1, -p28.thumbstickRingSize * 2.8);
	p28.startImage.Size = UDim2.new(0, p28.thumbstickRingSize * 3.7, 0, p28.thumbstickRingSize * 3.7);
	p28.startImage.ZIndex = 10;
	p28.startImage.Parent = p28.thumbstickFrame;
	p28.endImage = Instance.new("ImageLabel");
	p28.endImage.Name = "ThumbstickEnd";
	p28.endImage.Visible = true;
	p28.endImage.BackgroundTransparency = 1;
	p28.endImage.Image = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png";
	p28.endImage.ImageRectOffset = Vector2.new(1, 1);
	p28.endImage.ImageRectSize = Vector2.new(144, 144);
	p28.endImage.AnchorPoint = Vector2.new(0.5, 0.5);
	p28.endImage.Position = p28.startImage.Position;
	p28.endImage.Size = UDim2.new(0, p28.thumbstickSize * 0.8, 0, p28.thumbstickSize * 0.8);
	p28.endImage.ZIndex = 10;
	p28.endImage.Parent = p28.thumbstickFrame;
	for v38 = 1, u5 do
		p28.middleImages[v38] = Instance.new("ImageLabel");
		p28.middleImages[v38].Name = "ThumbstickMiddle";
		p28.middleImages[v38].Visible = false;
		p28.middleImages[v38].BackgroundTransparency = 1;
		p28.middleImages[v38].Image = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png";
		p28.middleImages[v38].ImageRectOffset = Vector2.new(1, 1);
		p28.middleImages[v38].ImageRectSize = Vector2.new(144, 144);
		p28.middleImages[v38].ImageTransparency = v1[v38];
		p28.middleImages[v38].AnchorPoint = Vector2.new(0.5, 0.5);
		p28.middleImages[v38].ZIndex = 9;
		p28.middleImages[v38].Parent = p28.thumbstickFrame;
	end;
	local u10 = nil;
	local function v39()
		if u10 then
			u10:Disconnect();
			u10 = nil;
		end;
		local l__CurrentCamera__40 = workspace.CurrentCamera;
		if l__CurrentCamera__40 then
			local function v41()
				local l__ViewportSize__42 = l__CurrentCamera__40.ViewportSize;
				v37(l__ViewportSize__42.X < l__ViewportSize__42.Y);
			end;
			u10 = l__CurrentCamera__40:GetPropertyChangedSignal("ViewportSize"):Connect(v41);
			v41();
		end;
	end;
	workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(v39);
	if workspace.CurrentCamera then
		v39();
	end;
	p28.moveTouchStartPosition = nil;
	p28.startImageFadeTween = nil;
	p28.endImageFadeTween = nil;
	p28.middleImageFadeTweens = {};
	p28.onRenderSteppedConn = l__RunService__5.RenderStepped:Connect(function()
		if p28.tweenInAlphaStart ~= nil then
			local v43 = tick() - p28.tweenInAlphaStart;
			local v44 = p28.fadeInAndOutHalfDuration * 2 * p28.fadeInAndOutBalance;
			p28.thumbstickFrame.BackgroundTransparency = 1 - 0.35 * math.min(v43 / v44, 1);
			if v44 < v43 then
				p28.tweenOutAlphaStart = tick();
				p28.tweenInAlphaStart = nil;
				return;
			end;
		elseif p28.tweenOutAlphaStart ~= nil then
			local v45 = tick() - p28.tweenOutAlphaStart;
			local v46 = p28.fadeInAndOutHalfDuration * 2 - p28.fadeInAndOutHalfDuration * 2 * p28.fadeInAndOutBalance;
			p28.thumbstickFrame.BackgroundTransparency = 0.65 + 0.35 * math.min(v45 / v46, 1);
			if v46 < v45 then
				p28.tweenOutAlphaStart = nil;
			end;
		end;
	end);
	p28.onTouchEndedConn = l__UserInputService__4.TouchEnded:connect(function(p31)
		if p31 == p28.moveTouchObject then
			p28:OnInputEnded();
		end;
	end);
	l__GuiService__3.MenuOpened:connect(function()
		if p28.moveTouchObject then
			p28:OnInputEnded();
		end;
	end);
	local v47 = v6:FindFirstChildOfClass("PlayerGui");
	while not v47 do
		v6.ChildAdded:wait();
		v47 = v6:FindFirstChildOfClass("PlayerGui");	
	end;
	local v48 = true;
	if v47.CurrentScreenOrientation ~= Enum.ScreenOrientation.LandscapeLeft then
		v48 = v47.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight;
	end;
	local u11 = nil;
	local function u12()
		p28.fadeInAndOutHalfDuration = 2.5;
		p28.fadeInAndOutBalance = 0.05;
		p28.tweenInAlphaStart = tick();
	end;
	u11 = v47:GetPropertyChangedSignal("CurrentScreenOrientation"):Connect(function()
		if not (not v48) and v47.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait or not v48 and v47.CurrentScreenOrientation ~= Enum.ScreenOrientation.Portrait then
			u11:disconnect();
			u12();
			if v48 then
				p28.hasFadedBackgroundInPortrait = true;
				return;
			end;
			p28.hasFadedBackgroundInLandscape = true;
		end;
	end);
	p28.thumbstickFrame.Parent = p29;
	if game:IsLoaded() then
		u12();
	else
		coroutine.wrap(function()
			game.Loaded:Wait();
			u12();
		end)();
	end;
end;
return v8;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX294"><Properties><string name="Name">PathDisplay</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	spacing = 8, 
	image = "rbxasset://textures/Cursors/Gamepad/Pointer.png", 
	imageSize = Vector2.new(2, 2)
};
local v2 = Instance.new("Model");
v2.Name = "PathDisplayPoints";
local v3 = Instance.new("Part");
v3.Anchored = true;
v3.CanCollide = false;
v3.Transparency = 1;
v3.Name = "PathDisplayAdornee";
v3.CFrame = CFrame.new(0, 0, 0);
v3.Parent = v2;
local v4 = {};
for v5 = 1, 30 do
	local v6 = Instance.new("ImageHandleAdornment");
	v6.Archivable = false;
	v6.Adornee = v3;
	v6.Image = v1.image;
	v6.Size = v1.imageSize;
	v4[v5] = v6;
end;
local u1 = 30;
local function u2()
	local v7 = v4[1];
	if not v7 then
		return;
	end;
	v4[1] = v4[u1];
	v4[u1] = nil;
	u1 = u1 - 1;
	return v7;
end;
local u3 = {};
function v1.setCurrentPoints(p1)
	if typeof(p1) == "table" then
		u3 = p1;
		return;
	end;
	u3 = {};
end;
local u4 = {};
local function u5(p2)
	u1 = u1 + 1;
	v4[u1] = p2;
end;
function v1.clearRenderedPath()
	for v8, v9 in ipairs(u4) do
		v9.Parent = nil;
		u5(v9);
	end;
	u4 = {};
	v2.Parent = nil;
end;
local function u6(p3, p4)
	if u1 == 0 then
		return;
	end;
	local v10, v11, v12 = workspace:FindPartOnRayWithIgnoreList(Ray.new(p3 + Vector3.new(0, 2, 0), Vector3.new(0, -8, 0)), { game.Players.LocalPlayer.Character, workspace.CurrentCamera });
	if not v10 then
		return;
	end;
	local v13 = u2();
	v13.CFrame = CFrame.new(v11, v11 + v12);
	v13.Parent = v2;
	return v13;
end;
function v1.renderPath()
	v1.clearRenderedPath();
	if not u3 or #u3 == 0 then
		return;
	end;
	local v14 = #u3;
	local v15 = 0;
	u4[1] = u6(u3[v14], true);
	if not u4[1] then
		return;
	end;
	while true do
		local v16 = u3[v14];
		if v14 < 2 then
			break;
		end;
		local v17 = u3[v14 - 1] - v16;
		local l__magnitude__18 = v17.magnitude;
		if l__magnitude__18 < v15 then
			v15 = v15 - l__magnitude__18;
			v14 = v14 - 1;
		else
			local v19 = u6(v16 + v17.unit * v15, false);
			if v19 then
				u4[#u4 + 1] = v19;
			end;
			v15 = v15 + v1.spacing;
		end;	
	end;
	v2.Parent = workspace.CurrentCamera;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX301"><Properties><string name="Name">TouchThumbstick</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local v2 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v3 = setmetatable({}, v2);
v3.__index = v3;
function v3.new()
	local v4 = setmetatable(v2.new(), v3);
	v4.isFollowStick = false;
	v4.thumbstickFrame = nil;
	v4.moveTouchObject = nil;
	v4.onTouchMovedConn = nil;
	v4.onTouchEndedConn = nil;
	v4.screenPos = nil;
	v4.stickImage = nil;
	v4.thumbstickSize = nil;
	return v4;
end;
local u1 = Vector3.new(0, 0, 0);
function v3.Enable(p1, p2, p3)
	if p2 == nil then
		return false;
	end;
	if p2 then
		local v5 = true;
	else
		v5 = false;
	end;
	p2 = v5;
	if p1.enabled == p2 then
		return true;
	end;
	p1.moveVector = u1;
	p1.isJumping = false;
	if p2 then
		if not p1.thumbstickFrame then
			p1:Create(p3);
		end;
		p1.thumbstickFrame.Visible = true;
	else
		p1.thumbstickFrame.Visible = false;
		p1:OnInputEnded();
	end;
	p1.enabled = p2;
end;
function v3.OnInputEnded(p4)
	p4.thumbstickFrame.Position = p4.screenPos;
	p4.stickImage.Position = UDim2.new(0, p4.thumbstickFrame.Size.X.Offset / 2 - p4.thumbstickSize / 4, 0, p4.thumbstickFrame.Size.Y.Offset / 2 - p4.thumbstickSize / 4);
	p4.moveVector = u1;
	p4.isJumping = false;
	p4.thumbstickFrame.Position = p4.screenPos;
	p4.moveTouchObject = nil;
end;
local l__UserInputService__2 = game:GetService("UserInputService");
local l__GuiService__3 = game:GetService("GuiService");
function v3.Create(p5, p6)
	if p5.thumbstickFrame then
		p5.thumbstickFrame:Destroy();
		p5.thumbstickFrame = nil;
		if p5.onTouchMovedConn then
			p5.onTouchMovedConn:Disconnect();
			p5.onTouchMovedConn = nil;
		end;
		if p5.onTouchEndedConn then
			p5.onTouchEndedConn:Disconnect();
			p5.onTouchEndedConn = nil;
		end;
	end;
	local v6 = math.min(p6.AbsoluteSize.x, p6.AbsoluteSize.y) <= 500;
	if v6 then
		local v7 = 70;
	else
		v7 = 120;
	end;
	p5.thumbstickSize = v7;
	p5.screenPos = v6 and UDim2.new(0, p5.thumbstickSize / 2 - 10, 1, -p5.thumbstickSize - 20) or UDim2.new(0, p5.thumbstickSize / 2, 1, -p5.thumbstickSize * 1.75);
	p5.thumbstickFrame = Instance.new("Frame");
	p5.thumbstickFrame.Name = "ThumbstickFrame";
	p5.thumbstickFrame.Active = true;
	p5.thumbstickFrame.Visible = false;
	p5.thumbstickFrame.Size = UDim2.new(0, p5.thumbstickSize, 0, p5.thumbstickSize);
	p5.thumbstickFrame.Position = p5.screenPos;
	p5.thumbstickFrame.BackgroundTransparency = 1;
	local v8 = Instance.new("ImageLabel");
	v8.Name = "OuterImage";
	v8.Image = "rbxasset://textures/ui/TouchControlsSheet.png";
	v8.ImageRectOffset = Vector2.new();
	v8.ImageRectSize = Vector2.new(220, 220);
	v8.BackgroundTransparency = 1;
	v8.Size = UDim2.new(0, p5.thumbstickSize, 0, p5.thumbstickSize);
	v8.Position = UDim2.new(0, 0, 0, 0);
	v8.Parent = p5.thumbstickFrame;
	p5.stickImage = Instance.new("ImageLabel");
	p5.stickImage.Name = "StickImage";
	p5.stickImage.Image = "rbxasset://textures/ui/TouchControlsSheet.png";
	p5.stickImage.ImageRectOffset = Vector2.new(220, 0);
	p5.stickImage.ImageRectSize = Vector2.new(111, 111);
	p5.stickImage.BackgroundTransparency = 1;
	p5.stickImage.Size = UDim2.new(0, p5.thumbstickSize / 2, 0, p5.thumbstickSize / 2);
	p5.stickImage.Position = UDim2.new(0, p5.thumbstickSize / 2 - p5.thumbstickSize / 4, 0, p5.thumbstickSize / 2 - p5.thumbstickSize / 4);
	p5.stickImage.ZIndex = 2;
	p5.stickImage.Parent = p5.thumbstickFrame;
	local u4 = nil;
	p5.thumbstickFrame.InputBegan:Connect(function(p7)
		if not (not p5.moveTouchObject) or p7.UserInputType ~= Enum.UserInputType.Touch or p7.UserInputState ~= Enum.UserInputState.Begin then
			return;
		end;
		p5.moveTouchObject = p7;
		p5.thumbstickFrame.Position = UDim2.new(0, p7.Position.x - p5.thumbstickFrame.Size.X.Offset / 2, 0, p7.Position.y - p5.thumbstickFrame.Size.Y.Offset / 2);
		u4 = Vector2.new(p5.thumbstickFrame.AbsolutePosition.x + p5.thumbstickFrame.AbsoluteSize.x / 2, p5.thumbstickFrame.AbsolutePosition.y + p5.thumbstickFrame.AbsoluteSize.y / 2);
		local v9 = Vector2.new(p7.Position.x - u4.x, p7.Position.y - u4.y);
	end);
	local function u5(p8)
		local v10 = p8 / (p5.thumbstickSize / 2);
		local l__magnitude__11 = v10.magnitude;
		if l__magnitude__11 < 0.05 then
			local v12 = Vector3.new();
		else
			local v13 = v10.unit * ((l__magnitude__11 - 0.05) / 0.95);
			v12 = Vector3.new(v13.x, 0, v13.y);
		end;
		p5.moveVector = v12;
	end;
	local function u6(p9)
		local v14 = Vector2.new(p9.x - u4.x, p9.y - u4.y);
		local l__magnitude__15 = v14.magnitude;
		local v16 = p5.thumbstickFrame.AbsoluteSize.x / 2;
		if p5.isFollowStick and v16 < l__magnitude__15 then
			local v17 = v14.unit * v16;
			p5.thumbstickFrame.Position = UDim2.new(0, p9.x - p5.thumbstickFrame.AbsoluteSize.x / 2 - v17.x, 0, p9.y - p5.thumbstickFrame.AbsoluteSize.y / 2 - v17.y);
		else
			v14 = v14.unit * math.min(l__magnitude__15, v16);
		end;
		p5.stickImage.Position = UDim2.new(0, v14.x + p5.stickImage.AbsoluteSize.x / 2, 0, v14.y + p5.stickImage.AbsoluteSize.y / 2);
	end;
	p5.onTouchMovedConn = l__UserInputService__2.TouchMoved:Connect(function(p10, p11)
		if p10 == p5.moveTouchObject then
			u4 = Vector2.new(p5.thumbstickFrame.AbsolutePosition.x + p5.thumbstickFrame.AbsoluteSize.x / 2, p5.thumbstickFrame.AbsolutePosition.y + p5.thumbstickFrame.AbsoluteSize.y / 2);
			u5((Vector2.new(p10.Position.x - u4.x, p10.Position.y - u4.y)));
			u6(p10.Position);
		end;
	end);
	p5.onTouchEndedConn = l__UserInputService__2.TouchEnded:Connect(function(p12, p13)
		if p12 == p5.moveTouchObject then
			p5:OnInputEnded();
		end;
	end);
	l__GuiService__3.MenuOpened:Connect(function()
		if p5.moveTouchObject then
			p5:OnInputEnded();
		end;
	end);
	p5.thumbstickFrame.Parent = p6;
end;
return v3;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX308"><Properties><string name="Name">BaseCharacterController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local u1 = Vector3.new(0, 0, 0);
function v1.new()
	local v2 = setmetatable({}, v1);
	v2.enabled = false;
	v2.moveVector = u1;
	v2.moveVectorIsCameraRelative = true;
	v2.isJumping = false;
	return v2;
end;
function v1.OnRenderStepped(p1, p2)

end;
function v1.GetMoveVector(p3)
	return p3.moveVector;
end;
function v1.IsMoveVectorCameraRelative(p4)
	return p4.moveVectorIsCameraRelative;
end;
function v1.GetIsJumping(p5)
	return p5.isJumping;
end;
function v1.Enable(p6, p7)
	error("BaseCharacterController:Enable must be overridden in derived classes and should not be called.");
	return false;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX315"><Properties><string name="Name">ClickToMoveDisplay</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = Vector2.new(0, 1);
local v3 = Vector2.new(0.1, 0.5);
local v4 = Vector2.new(-0.1, 0.5);
local l__TweenService__5 = game:GetService("TweenService");
local l__RunService__6 = game:GetService("RunService");
local l__Workspace__7 = game:GetService("Workspace");
local l__LocalPlayer__8 = game:GetService("Players").LocalPlayer;
local u1 = Vector2.new(1.5, 1.5);
local u2 = false;
local u3 = "rbxasset://textures/ui/traildot.png";
local u4 = UDim2.new(0, 42, 0, 50);
local u5 = Vector2.new(0, 0.5);
local u6 = "rbxasset://textures/ui/waypoint.png";
local u7 = Vector2.new(0, 0.5);
local function v9()
	local v10 = Instance.new("Part");
	v10.Size = Vector3.new(1, 1, 1);
	v10.Anchored = true;
	v10.CanCollide = false;
	v10.Name = "TrailDot";
	v10.Transparency = 1;
	local v11 = Instance.new("ImageHandleAdornment");
	v11.Name = "TrailDotImage";
	v11.Size = u1;
	v11.SizeRelativeOffset = Vector3.new(0, 0, -0.1);
	v11.AlwaysOnTop = u2;
	v11.Image = u3;
	v11.Adornee = v10;
	v11.Parent = v10;
	local v12 = Instance.new("Part");
	v12.Size = Vector3.new(2, 2, 2);
	v12.Anchored = true;
	v12.CanCollide = false;
	v12.Name = "EndWaypoint";
	v12.Transparency = 1;
	local v13 = Instance.new("ImageHandleAdornment");
	v13.Name = "TrailDotImage";
	v13.Size = u1;
	v13.SizeRelativeOffset = Vector3.new(0, 0, -0.1);
	v13.AlwaysOnTop = u2;
	v13.Image = u3;
	v13.Adornee = v12;
	v13.Parent = v12;
	local v14 = Instance.new("BillboardGui");
	v14.Name = "EndWaypointBillboard";
	v14.Size = u4;
	v14.LightInfluence = 0;
	v14.SizeOffset = u5;
	v14.AlwaysOnTop = true;
	v14.Adornee = v12;
	v14.Parent = v12;
	local v15 = Instance.new("ImageLabel");
	v15.Image = u6;
	v15.BackgroundTransparency = 1;
	v15.Size = UDim2.new(1, 0, 1, 0);
	v15.Parent = v14;
	local v16 = Instance.new("Part");
	v16.Size = Vector3.new(2, 2, 2);
	v16.Anchored = true;
	v16.CanCollide = false;
	v16.Name = "FailureWaypoint";
	v16.Transparency = 1;
	local v17 = Instance.new("ImageHandleAdornment");
	v17.Name = "TrailDotImage";
	v17.Size = u1;
	v17.SizeRelativeOffset = Vector3.new(0, 0, -0.1);
	v17.AlwaysOnTop = u2;
	v17.Image = u3;
	v17.Adornee = v16;
	v17.Parent = v16;
	local v18 = Instance.new("BillboardGui");
	v18.Name = "FailureWaypointBillboard";
	v18.Size = u4;
	v18.LightInfluence = 0;
	v18.SizeOffset = u7;
	v18.AlwaysOnTop = true;
	v18.Adornee = v16;
	v18.Parent = v16;
	local v19 = Instance.new("Frame");
	v19.BackgroundTransparency = 1;
	v19.Size = UDim2.new(0, 0, 0, 0);
	v19.Position = UDim2.new(0.5, 0, 1, 0);
	v19.Parent = v18;
	local v20 = Instance.new("ImageLabel");
	v20.Image = u6;
	v20.BackgroundTransparency = 1;
	v20.Position = UDim2.new(0, -u4.X.Offset / 2, 0, -u4.Y.Offset);
	v20.Size = u4;
	v20.Parent = v19;
	return v10, v12, v16;
end;
local v21, v22, v23 = v9();
local function u8()
	local l__CurrentCamera__24 = l__Workspace__7.CurrentCamera;
	local v25 = l__CurrentCamera__24:FindFirstChild("ClickToMoveDisplay");
	if not v25 then
		v25 = Instance.new("Model");
		v25.Name = "ClickToMoveDisplay";
		v25.Parent = l__CurrentCamera__24;
	end;
	return v25;
end;
local v26 = {};
v26.__index = v26;
function v26.Destroy(p1)
	p1.DisplayModel:Destroy();
end;
local u9 = v21;
local function u10(p2, p3)
	local v27, v28, v29 = l__Workspace__7:FindPartOnRayWithIgnoreList(Ray.new(p3 + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0)), { l__Workspace__7.CurrentCamera, l__LocalPlayer__8.Character });
	if v27 then
		p2.CFrame = CFrame.new(v28, v28 + v29);
		p2.Parent = u8();
	end;
end;
function v26.NewDisplayModel(p4, p5)
	local v30 = u9:Clone();
	u10(v30, p5);
	return v30;
end;
function v26.new(p6, p7)
	local v31 = setmetatable({}, v26);
	v31.DisplayModel = v31:NewDisplayModel(p6);
	v31.ClosestWayPoint = p7;
	return v31;
end;
local v32 = {};
v32.__index = v32;
function v32.Destroy(p8)
	p8.Destroyed = true;
	p8.Tween:Cancel();
	p8.DisplayModel:Destroy();
end;
local u11 = v22;
function v32.NewDisplayModel(p9, p10)
	local v33 = u11:Clone();
	u10(v33, p10);
	return v33;
end;
function v32.CreateTween(p11)
	local v34 = l__TweenService__5:Create(p11.DisplayModel.EndWaypointBillboard, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, -1, true), {
		SizeOffset = v2
	});
	v34:Play();
	return v34;
end;
function v32.TweenInFrom(p12, p13)
	p12.DisplayModel.EndWaypointBillboard.StudsOffset = Vector3.new(0, (p13 - p12.DisplayModel.Position).Y, 0);
	local v35 = l__TweenService__5:Create(p12.DisplayModel.EndWaypointBillboard, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
		StudsOffset = Vector3.new(0, 0, 0)
	});
	v35:Play();
	return v35;
end;
function v32.new(p14, p15, p16)
	local v36 = setmetatable({}, v32);
	v36.DisplayModel = v36:NewDisplayModel(p14);
	v36.Destroyed = false;
	if p16 and (p16 - p14).magnitude > 5 then
		v36.Tween = v36:TweenInFrom(p16);
		coroutine.wrap(function()
			v36.Tween.Completed:Wait();
			if not v36.Destroyed then
				v36.Tween = v36:CreateTween();
			end;
		end)();
	else
		v36.Tween = v36:CreateTween();
	end;
	v36.ClosestWayPoint = p15;
	return v36;
end;
local v37 = {};
v37.__index = v37;
function v37.Hide(p17)
	p17.DisplayModel.Parent = nil;
end;
function v37.Destroy(p18)
	p18.DisplayModel:Destroy();
end;
local u12 = v23;
function v37.NewDisplayModel(p19, p20)
	local v38 = u12:Clone();
	u10(v38, p20);
	local v39, v40, v41 = l__Workspace__7:FindPartOnRayWithIgnoreList(Ray.new(p20 + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0)), { l__Workspace__7.CurrentCamera, l__LocalPlayer__8.Character });
	if v39 then
		v38.CFrame = CFrame.new(v40, v40 + v41);
		v38.Parent = u8();
	end;
	return v38;
end;
function v37.RunFailureTween(p21)
	wait(0.125);
	local v42 = TweenInfo.new(0.0625, Enum.EasingStyle.Sine, Enum.EasingDirection.Out);
	local v43 = l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard, v42, {
		SizeOffset = v3
	});
	v43:Play();
	l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard.Frame, v42, {
		Rotation = 10
	}):Play();
	v43.Completed:wait();
	local v44 = l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard, TweenInfo.new(0.125, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 3, true), {
		SizeOffset = v4
	});
	v44:Play();
	local v45 = TweenInfo.new(0.125, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 3, true);
	l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard.Frame.ImageLabel, v45, {
		ImageColor3 = Color3.new(0.75, 0.75, 0.75)
	}):Play();
	l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard.Frame, v45, {
		Rotation = -10
	}):Play();
	v44.Completed:wait();
	local v46 = TweenInfo.new(0.0625, Enum.EasingStyle.Sine, Enum.EasingDirection.Out);
	local v47 = l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard, v46, {
		SizeOffset = u7
	});
	v47:Play();
	l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard.Frame, v46, {
		Rotation = 0
	}):Play();
	v47.Completed:wait();
	wait(0.125);
end;
function v37.new(p22)
	local v48 = setmetatable({}, v37);
	v48.DisplayModel = v48:NewDisplayModel(p22);
	return v48;
end;
local v49 = Instance.new("Animation");
v49.AnimationId = "rbxassetid://2874840706";
local u13 = nil;
local u14 = 0;
local function u15(p23, p24)
	local v50 = {};
	local v51 = 1;
	for v52 = 1, #p23 - 1 do
		local v53 = false;
		if v52 % 2 == 0 then
			v53 = not ((p23[v52].Position - p23[#p23].Position).magnitude < 3);
		end;
		if v53 then
			v50[v51] = v26.new(p23[v52].Position, v52);
			v51 = v51 + 1;
		end;
	end;
	table.insert(v50, (v32.new(p23[#p23].Position, #p23, p24)));
	local v54 = {};
	local v55 = 1;
	for v56 = #v50, 1, -1 do
		v54[v55] = v50[v56];
		v55 = v55 + 1;
	end;
	return v54;
end;
local function u16(p25, p26)
	return p26 * (1 + 1.5 * (math.clamp(p25 - 10, 0, 90) / 90));
end;
function v1.CreatePathDisplay(p27, p28)
	u14 = u14 + 1;
	local u17 = u15(p27, p28);
	local u18 = "ClickToMoveResizeTrail" .. u14;
	l__RunService__6:BindToRenderStep(u18, Enum.RenderPriority.Camera.Value - 1, function()
		if #u17 == 0 then
			l__RunService__6:UnbindFromRenderStep(u18);
			return;
		end;
		local l__p__57 = l__Workspace__7.CurrentCamera.CFrame.p;
		for v58 = 1, #u17 do
			local l__TrailDotImage__59 = u17[v58].DisplayModel:FindFirstChild("TrailDotImage");
			if l__TrailDotImage__59 then
				l__TrailDotImage__59.Size = u16((u17[v58].DisplayModel.Position - l__p__57).magnitude, u1);
			end;
		end;
	end);
	local function u19(p29)
		for v60 = #u17, 1, -1 do
			local v61 = u17[v60];
			if not (v61.ClosestWayPoint <= p29) then
				break;
			end;
			v61:Destroy();
			u17[v60] = nil;
		end;
	end;
	return function()
		u19(#p27);
	end, u19;
end;
local u20 = nil;
function v1.DisplayFailureWaypoint(p30)
	if u20 then
		u20:Hide();
	end;
	local v62 = v37.new(p30);
	u20 = v62;
	local u21 = v62;
	coroutine.wrap(function()
		u21:RunFailureTween();
		u21:Destroy();
		u21 = nil;
	end)();
end;
function v1.CreateEndWaypoint(p31)
	return v32.new(p31);
end;
local function u22()
	local l__Character__63 = l__LocalPlayer__8.Character;
	if not l__Character__63 then
		return;
	end;
	return l__Character__63:FindFirstChildOfClass("Humanoid");
end;
local function u23(p32)
	if p32 == nil then
		return u13;
	end;
	u13 = p32:LoadAnimation(v49);
	u13.Priority = Enum.AnimationPriority.Action;
	u13.Looped = false;
	return u13;
end;
function v1.PlayFailureAnimation()
	local v64 = u22();
	if v64 then
		u23(v64):Play();
	end;
end;
function v1.CancelFailureAnimation()
	if u13 ~= nil and u13.IsPlaying then
		u13:Stop();
	end;
end;
function v1.SetWaypointTexture(p33)
	u3 = p33;
	local v65, v66, v67 = v9();
	u9 = v65;
	u11 = v66;
	u12 = v67;
end;
function v1.GetWaypointTexture()
	return u3;
end;
function v1.SetWaypointRadius(p34)
	u1 = Vector2.new(p34, p34);
	local v68, v69, v70 = v9();
	u9 = v68;
	u11 = v69;
	u12 = v70;
end;
function v1.GetWaypointRadius()
	return u1.X;
end;
function v1.SetEndWaypointTexture(p35)
	u6 = p35;
	local v71, v72, v73 = v9();
	u9 = v71;
	u11 = v72;
	u12 = v73;
end;
function v1.GetEndWaypointTexture()
	return u6;
end;
function v1.SetWaypointsAlwaysOnTop(p36)
	u2 = p36;
	local v74, v75, v76 = v9();
	u9 = v74;
	u11 = v75;
	u12 = v76;
end;
function v1.GetWaypointsAlwaysOnTop()
	return u2;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX322"><Properties><string name="Name">VRNavigation</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__VRService__1 = game:GetService("VRService");
local l__UserInputService__2 = game:GetService("UserInputService");
local l__RunService__3 = game:GetService("RunService");
local l__PathfindingService__4 = game:GetService("PathfindingService");
local l__ContextActionService__5 = game:GetService("ContextActionService");
local l__StarterGui__6 = game:GetService("StarterGui");
local l__LocalPlayer__7 = game:GetService("Players").LocalPlayer;
local v8 = Vector3.new(0, 0, 0);
local v9 = Vector3.new(1, 0, 1);
local function u1(p1)
	local v10 = false;
	if p1 == p1 then
		v10 = false;
		if p1 ~= (1 / 0) then
			v10 = p1 ~= (-1 / 0);
		end;
	end;
	return v10;
end;
local v11 = Instance.new("BindableEvent");
v11.Name = "MovementUpdate";
v11.Parent = script;
local u2 = nil;
coroutine.wrap(function()
	local l__PathDisplay__12 = script.Parent:WaitForChild("PathDisplay");
	if l__PathDisplay__12 then
		u2 = require(l__PathDisplay__12);
	end;
end)();
local v13 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v14 = setmetatable({}, v13);
v14.__index = v14;
function v14.new(p2)
	local v15 = setmetatable(v13.new(), v14);
	v15.CONTROL_ACTION_PRIORITY = p2;
	v15.navigationRequestedConn = nil;
	v15.heartbeatConn = nil;
	v15.currentDestination = nil;
	v15.currentPath = nil;
	v15.currentPoints = nil;
	v15.currentPointIdx = 0;
	v15.expectedTimeToNextPoint = 0;
	v15.timeReachedLastPoint = tick();
	v15.moving = false;
	v15.isJumpBound = false;
	v15.moveLatch = false;
	v15.userCFrameEnabledConn = nil;
	return v15;
end;
function v14.SetLaserPointerMode(p3, p4)
	pcall(function()
		l__StarterGui__6:SetCore("VRLaserPointerMode", p4);
	end);
end;
function v14.GetLocalHumanoid(p5)
	local l__Character__16 = l__LocalPlayer__7.Character;
	if not l__Character__16 then
		return;
	end;
	for v17, v18 in pairs(l__Character__16:GetChildren()) do
		if v18:IsA("Humanoid") then
			return v18;
		end;
	end;
	return nil;
end;
function v14.HasBothHandControllers(p6)
	return l__VRService__1:GetUserCFrameEnabled(Enum.UserCFrame.RightHand) and l__VRService__1:GetUserCFrameEnabled(Enum.UserCFrame.LeftHand);
end;
function v14.HasAnyHandControllers(p7)
	return l__VRService__1:GetUserCFrameEnabled(Enum.UserCFrame.RightHand) or l__VRService__1:GetUserCFrameEnabled(Enum.UserCFrame.LeftHand);
end;
function v14.IsMobileVR(p8)
	return l__UserInputService__2.TouchEnabled;
end;
function v14.HasGamepad(p9)
	return l__UserInputService__2.GamepadEnabled;
end;
function v14.ShouldUseNavigationLaser(p10)
	if p10:IsMobileVR() then
		return true;
	end;
	if p10:HasBothHandControllers() then
		return false;
	end;
	if p10:HasAnyHandControllers() then
		return true;
	end;
	return not p10:HasGamepad();
end;
function v14.StartFollowingPath(p11, p12)
	currentPath = p12;
	currentPoints = currentPath:GetPointCoordinates();
	currentPointIdx = 1;
	moving = true;
	timeReachedLastPoint = tick();
	local v19 = p11:GetLocalHumanoid();
	if v19 and v19.Torso and #currentPoints >= 1 then
		expectedTimeToNextPoint = (currentPoints[1] - v19.Torso.Position).magnitude / v19.WalkSpeed;
	end;
	v11:Fire("targetPoint", p11.currentDestination);
end;
function v14.GoToPoint(p13, p14)
	currentPath = true;
	currentPoints = { p14 };
	currentPointIdx = 1;
	moving = true;
	local v20 = p13:GetLocalHumanoid();
	timeReachedLastPoint = tick();
	expectedTimeToNextPoint = (v20.Torso.Position - p14).magnitude / v20.WalkSpeed;
	v11:Fire("targetPoint", p14);
end;
function v14.StopFollowingPath(p15)
	currentPath = nil;
	currentPoints = nil;
	currentPointIdx = 0;
	moving = false;
	p15.moveVector = v8;
end;
function v14.TryComputePath(p16, p17, p18)
	local v21 = nil;
	while not v21 and 0 < 5 do
		local v22 = l__PathfindingService__4:ComputeSmoothPathAsync(p17, p18, 200);
		if v22.Status == Enum.PathStatus.ClosestNoPath then
			return nil;
		end;
		if v22.Status == Enum.PathStatus.ClosestOutOfRange then
			return nil;
		end;
		if v22 and v22.Status == Enum.PathStatus.FailStartNotEmpty then
			p17 = p17 + (p18 - p17).unit;
			v22 = nil;
		end;
		if v21 and v21.Status == Enum.PathStatus.FailFinishNotEmpty then
			p18 = p18 + Vector3.new(0, 1, 0);
			v21 = nil;
		end;	
	end;
	return v21;
end;
local function u3(p19)
	return u1(p19.x) and (u1(p19.y) and u1(p19.z));
end;
function v14.OnNavigationRequest(p20, p21, p22)
	local l__p__23 = p21.p;
	local l__currentDestination__24 = p20.currentDestination;
	if not u3(l__p__23) then
		return;
	end;
	p20.currentDestination = l__p__23;
	local v25 = p20:GetLocalHumanoid();
	if not v25 or not v25.Torso then
		return;
	end;
	local l__Position__26 = v25.Torso.Position;
	if (p20.currentDestination - l__Position__26).magnitude < 12 then
		p20:GoToPoint(p20.currentDestination);
		return;
	end;
	if not l__currentDestination__24 or (p20.currentDestination - l__currentDestination__24).magnitude > 4 then
		local v27 = p20:TryComputePath(l__Position__26, p20.currentDestination);
		if v27 then
			p20:StartFollowingPath(v27);
			if u2 then
				u2.setCurrentPoints(p20.currentPoints);
				u2.renderPath();
				return;
			end;
		else
			p20:StopFollowingPath();
			if u2 then
				u2.clearRenderedPath();
				return;
			end;
		end;
	else
		if moving then
			p20.currentPoints[#currentPoints] = p20.currentDestination;
			return;
		end;
		p20:GoToPoint(p20.currentDestination);
	end;
end;
function v14.OnJumpAction(p23, p24, p25, p26)
	if p25 == Enum.UserInputState.Begin then
		p23.isJumping = true;
	end;
	return Enum.ContextActionResult.Sink;
end;
function v14.BindJumpAction(p27, p28)
	if p28 then
		if p27.isJumpBound then
			return;
		end;
	else
		if p27.isJumpBound then
			p27.isJumpBound = false;
			l__ContextActionService__5:UnbindAction("VRJumpAction");
		end;
		return;
	end;
	p27.isJumpBound = true;
	l__ContextActionService__5:BindActionAtPriority("VRJumpAction", function()
		return p27:OnJumpAction();
	end, false, p27.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonA);
end;
function v14.ControlCharacterGamepad(p29, p30, p31, p32)
	if p32.KeyCode ~= Enum.KeyCode.Thumbstick1 then
		return;
	end;
	if p31 == Enum.UserInputState.Cancel then
		p29.moveVector = v8;
		return;
	end;
	if p31 ~= Enum.UserInputState.End then
		p29:StopFollowingPath();
		if u2 then
			u2.clearRenderedPath();
		end;
		if p29:ShouldUseNavigationLaser() then
			p29:BindJumpAction(true);
			p29:SetLaserPointerMode("Hidden");
		end;
		if p32.Position.magnitude > 0.22 then
			p29.moveVector = Vector3.new(p32.Position.X, 0, -p32.Position.Y);
			if p29.moveVector.magnitude > 0 then
				p29.moveVector = p29.moveVector.unit * math.min(1, p32.Position.magnitude);
			end;
			p29.moveLatch = true;
		end;
	else
		p29.moveVector = v8;
		if p29:ShouldUseNavigationLaser() then
			p29:BindJumpAction(false);
			p29:SetLaserPointerMode("Navigation");
		end;
		if p29.moveLatch then
			p29.moveLatch = false;
			v11:Fire("offtrack");
		end;
	end;
	return Enum.ContextActionResult.Sink;
end;
function v14.OnHeartbeat(p33, p34)
	local v28 = p33.moveVector;
	local v29 = p33:GetLocalHumanoid();
	if not v29 or not v29.Torso then
		return;
	end;
	if p33.moving and p33.currentPoints then
		local l__Position__30 = v29.Torso.Position;
		local v31 = (currentPoints[1] - l__Position__30) * v9;
		local l__magnitude__32 = v31.magnitude;
		local v33 = v31 / l__magnitude__32;
		if l__magnitude__32 < 1 then
			local v34 = 0;
			local v35 = currentPoints[1];
			for v36, v37 in pairs(currentPoints) do
				if v36 ~= 1 then
					v35 = v37;
					v34 = v34 + (v37 - v35).magnitude / v29.WalkSpeed;
				end;
			end;
			table.remove(currentPoints, 1);
			currentPointIdx = currentPointIdx + 1;
			if #currentPoints == 0 then
				p33:StopFollowingPath();
				if u2 then
					u2.clearRenderedPath();
				end;
				return;
			end;
			if u2 then
				u2.setCurrentPoints(currentPoints);
				u2.renderPath();
			end;
			expectedTimeToNextPoint = (currentPoints[1] - l__Position__30).magnitude / v29.WalkSpeed;
			timeReachedLastPoint = tick();
		else
			local v38 = { game.Players.LocalPlayer.Character, workspace.CurrentCamera };
			local v39, v40, v41 = workspace:FindPartOnRayWithIgnoreList(Ray.new(l__Position__30 - Vector3.new(0, 1, 0), v33 * 3), v38);
			if v39 then
				local v42 = Vector3.new(0, 100, 0);
				local v43, v44, v45 = workspace:FindPartOnRayWithIgnoreList(Ray.new(v40 + v33 * 0.5 + v42, -v42), v38);
				local v46 = v44.Y - l__Position__30.Y;
				if v46 < 6 and v46 > -2 then
					v29.Jump = true;
				end;
			end;
			if expectedTimeToNextPoint + 2 < tick() - timeReachedLastPoint then
				p33:StopFollowingPath();
				if u2 then
					u2.clearRenderedPath();
				end;
				v11:Fire("offtrack");
			end;
			v28 = p33.moveVector:Lerp(v33, p34 * 10);
		end;
	end;
	if u3(v28) then
		p33.moveVector = v28;
	end;
end;
function v14.OnUserCFrameEnabled(p35)
	if p35:ShouldUseNavigationLaser() then
		p35:BindJumpAction(false);
		p35:SetLaserPointerMode("Navigation");
		return;
	end;
	p35:BindJumpAction(true);
	p35:SetLaserPointerMode("Hidden");
end;
function v14.Enable(p36, p37)
	p36.moveVector = v8;
	p36.isJumping = false;
	if p37 then
		p36.navigationRequestedConn = l__VRService__1.NavigationRequested:Connect(function(p38, p39)
			p36:OnNavigationRequest(p38, p39);
		end);
		p36.heartbeatConn = l__RunService__3.Heartbeat:Connect(function(p40)
			p36:OnHeartbeat(p40);
		end);
		l__ContextActionService__5:BindAction("MoveThumbstick", function(p41, p42, p43)
			return p36:ControlCharacterGamepad(p41, p42, p43);
		end, false, p36.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Thumbstick1);
		l__ContextActionService__5:BindActivate(Enum.UserInputType.Gamepad1, Enum.KeyCode.ButtonR2);
		p36.userCFrameEnabledConn = l__VRService__1.UserCFrameEnabled:Connect(function()
			p36:OnUserCFrameEnabled();
		end);
		p36:OnUserCFrameEnabled();
		l__VRService__1:SetTouchpadMode(Enum.VRTouchpad.Left, Enum.VRTouchpadMode.VirtualThumbstick);
		l__VRService__1:SetTouchpadMode(Enum.VRTouchpad.Right, Enum.VRTouchpadMode.ABXY);
		p36.enabled = true;
		return;
	end;
	p36:StopFollowingPath();
	l__ContextActionService__5:UnbindAction("MoveThumbstick");
	l__ContextActionService__5:UnbindActivate(Enum.UserInputType.Gamepad1, Enum.KeyCode.ButtonR2);
	p36:BindJumpAction(false);
	p36:SetLaserPointerMode("Disabled");
	if p36.navigationRequestedConn then
		p36.navigationRequestedConn:Disconnect();
		p36.navigationRequestedConn = nil;
	end;
	if p36.heartbeatConn then
		p36.heartbeatConn:Disconnect();
		p36.heartbeatConn = nil;
	end;
	if p36.userCFrameEnabledConn then
		p36.userCFrameEnabledConn:Disconnect();
		p36.userCFrameEnabledConn = nil;
	end;
	p36.enabled = false;
end;
return v14;
]]></ProtectedString></Properties></Item></Item></Item><Item class="LocalScript" referent="RBX331"><Properties><string name="Name">PlayerScriptsLoader</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

require(script.Parent:WaitForChild("PlayerModule"));
]]></ProtectedString></Properties></Item></Item></Item><Item class="ReplicatedStorage" referent="RBX341"><Properties><string name="Name">ReplicatedStorage</string></Properties><Item class="Folder" referent="RBX344"><Properties><string name="Name">airdrops</string></Properties><Item class="ModuleScript" referent="RBX347"><Properties><string name="Name">hunter</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "HUNTER", 
	slots = {}
};
v1.slots[2] = "Rifle";
v1.slots[1] = "PMine";
v1.slots[3] = "TCaltrop";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX354"><Properties><string name="Name">stimmer</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "STIM ADDICT", 
	slots = {}
};
v1.slots[1] = "SPCStim";
v1.slots[3] = "HStim";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX361"><Properties><string name="Name">ninja</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "SNEAKY NINJA", 
	slots = {}
};
v1.slots[4] = "PKnife";
v1.slots[2] = "NSword";
v1.slots[1] = "BPack";
v1.slots[3] = "SPDStim";
v1.slots[6] = "PKnife";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX368"><Properties><string name="Name">cowboy</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "YEEHAW SPECIAL", 
	slots = {}
};
v1.slots[2] = "RVolver";
v1.slots[1] = "SPDStim";
v1.slots[3] = "TAxe";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX375"><Properties><string name="Name">doomguy</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "DEMON SLAYER", 
	slots = {}
};
v1.slots[2] = "BInjector";
v1.slots[1] = "DBarrel";
v1.slots[3] = "AdrStim";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX382"><Properties><string name="Name">trapper</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "EXPERT TRAPPER", 
	slots = {}
};
v1.slots[1] = "PTrap";
v1.slots[5] = "TStim";
v1.slots[3] = "SSnare";
v1.slots[2] = "PMine";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX389"><Properties><string name="Name">bait</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "BAIT AIRDROP", 
	slots = {}
};
v1.slots[1] = "RIGGED EXPLOSIVE";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX396"><Properties><string name="Name">swat</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "SWAT OPERATIVE", 
	slots = {}
};
v1.slots[2] = "SubMG";
v1.slots[1] = "APack";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX403"><Properties><string name="Name">medic</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "EMERGENCY MEDICAL CARE", 
	slots = {}
};
v1.slots[2] = "HStim";
v1.slots[1] = "FAid";
v1.slots[3] = "FAid";
v1.slots[5] = "AdrStim";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX410"><Properties><string name="Name">templar</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "TEMPLAR KNIGHT", 
	slots = {}
};
v1.slots[1] = "APack";
v1.slots[2] = "GSword";
v1.slots[3] = "SPCStim";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX417"><Properties><string name="Name">rock</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "ROCK MAN", 
	slots = {}
};
v1.slots[1] = "CRStone";
v1.slots[2] = "CRStone";
v1.slots[3] = "CRStone";
v1.slots[4] = "CRStone";
v1.slots[6] = "CRStone";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX424"><Properties><string name="Name">pistol</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "PISTOLEER", 
	slots = {}
};
v1.slots[2] = "Pistol";
v1.slots[1] = "APack";
v1.slots[3] = "BPack";
v1.slots[5] = "Pistol";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX431"><Properties><string name="Name">demo</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "DEMOLITIONIST", 
	slots = {}
};
v1.slots[1] = "ImpN";
v1.slots[2] = "PMine";
v1.slots[3] = "Dynamite";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX438"><Properties><string name="Name">archer</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "ROBIN HOOD", 
	slots = {}
};
v1.slots[2] = "CPBow";
v1.slots[4] = "APack";
v1.slots[6] = "PScanner";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX445"><Properties><string name="Name">hitrun</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "HIT AND RUN", 
	slots = {}
};
v1.slots[1] = "ImpN";
v1.slots[3] = "ImpN";
v1.slots[4] = "SStim";
v1.slots[6] = "SPDStim";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX452"><Properties><string name="Name">knife</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "KNIFE JUGGLER", 
	slots = {}
};
v1.slots[1] = "TKnife";
v1.slots[2] = "TKnife";
v1.slots[3] = "TKnife";
v1.slots[4] = "TKnife";
v1.slots[5] = "TKnife";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX459"><Properties><string name="Name">teamer</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "GROUP HUG'S BANE", 
	slots = {}
};
v1.slots[2] = "BPack";
v1.slots[1] = "ImpN";
v1.slots[3] = "ImpN";
v1.slots[4] = "ImpN";
v1.slots[6] = "ImpN";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX466"><Properties><string name="Name">tank</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "HEAVY TANKER", 
	slots = {}
};
v1.slots[2] = "APack";
v1.slots[4] = "DEFStim";
v1.slots[5] = "AdrStim";
v1.slots[6] = "FAid";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX473"><Properties><string name="Name">rainbow</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "RAINBOW PRIDE", 
	slots = {}
};
v1.slots[1] = "DStim";
v1.slots[2] = "DEFStim";
v1.slots[4] = "SPDStim";
v1.slots[5] = "SStim";
v1.slots[6] = "BPack";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX480"><Properties><string name="Name">survivor</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "SURVIVALIST", 
	slots = {}
};
v1.slots[1] = "APack";
v1.slots[2] = "BPack";
v1.slots[3] = "HStim";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX487"><Properties><string name="Name">defense</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "SELF DEFENSE KIT", 
	slots = {}
};
v1.slots[2] = "APack";
v1.slots[1] = "BPack";
v1.slots[3] = "Taser";
v1.slots[4] = "PSpray";
v1.slots[6] = "TGas";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX494"><Properties><string name="Name">vomit</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "VOMIT PARTY", 
	slots = {}
};
v1.slots[1] = "Taser";
v1.slots[2] = "BPack";
v1.slots[3] = "Taser";
v1.slots[4] = "PKnife";
v1.slots[6] = "PKnife";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX501"><Properties><string name="Name">stimtrap</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "STIM TRAPPER", 
	slots = {}
};
v1.slots[1] = "TStim";
v1.slots[3] = "TStim";
v1.slots[4] = "TStim";
v1.slots[6] = "TStim";
return v1;
]]></ProtectedString></Properties></Item></Item><Item class="Folder" referent="RBX509"><Properties><string name="Name">challenges</string></Properties><Item class="ModuleScript" referent="RBX512"><Properties><string name="Name">masterscan</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Prophet Mastery", 
	desc = "You've got more than a keen eye, I'll give you that. You've got the eye of a true tactician. May this title show others how to gaze with confidence.", 
	req = "scan_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Prophet.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "scan" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX519"><Properties><string name="Name">masterfire</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Immolator Mastery", 
	desc = "You're committed, amongst what others believe is wrong, but you persist nonetheless. May this title show others the path to burn away the unclean.", 
	req = "fire_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Immolator.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "fire" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX526"><Properties><string name="Name">bludgeon</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Smasher", 
	desc = "Bludgeon weapons are effective at gathering stone resources and break bones quite easily. Knowing the intricacies of every weapon class is important to your survival.", 
	req = "BludgeonHeavies", 
	reqamount = 50
};
v1.req_desc = "Land " .. v1.reqamount .. " Heavy attacks with Bludgeon weapons.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "bludgeonhits" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX533"><Properties><string name="Name">firearms</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Armed and Dangerous", 
	desc = "Operation of firearms are an essential part of survival when things get heated. Over reliance on Melee too much can often be fatal.", 
	req = "RangedDamageDealt", 
	reqamount = 500
};
v1.req_desc = "Deal " .. v1.reqamount .. " total damage with Ranged weapons.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "gundamage" }, { "Auxiliary Equipment - HOLO Emitter" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX540"><Properties><string name="Name">mastershield</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Zealot Mastery", 
	desc = "A capable leader who isn't afraid to safeguard others. Teamwork skills like that is crucial. May this title show others the light to their dark.", 
	req = "shield_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Zealot.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "shield" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX547"><Properties><string name="Name">start</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Initiation Certificate", 
	desc = "Welcome Agent. Before we can issue you our hardware, you'll have to prove to us you can survive without reliance on them. Good luck out there Agent.", 
	req = "Level", 
	reqamount = 5
};
v1.req_desc = "Reach Level " .. v1.reqamount .. ".";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "defaultclass" }, { "Access to all Perks." } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX554"><Properties><string name="Name">masterrevolver</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Artillerist Mastery", 
	desc = "A marksman at heart, you've got no problems making the shot for a clean kill. May this title show your status as a real Professional.", 
	req = "revolver_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Artillerist.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "revolver" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX561"><Properties><string name="Name">masterdagger</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Sovereign Mastery", 
	desc = "A believer who has their eyes and ears everywhere, maybe there really is a higher being. May this title show others the path to enlightenment.", 
	req = "dagger_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Sovereign.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "dagger" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX568"><Properties><string name="Name">tanker</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Tanker", 
	desc = "Looks like you have a knack for taking the hurt and not keeling over, not bad, Agent.", 
	req = "Tanked200", 
	reqamount = 1, 
	req_desc = "Take 200 damage total in a single life and survive.", 
	locked_endgame = false, 
	req_rewards = { { "title", "tankdamage" } }
};
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX575"><Properties><string name="Name">mastergoggles</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Executioner Mastery", 
	desc = "You do your job cleanly and you do it well with no bounties left unclaimed. Exceptional. May this title show your finesse and accomplishments.", 
	req = "goggles_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Executioner.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "goggles" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX582"><Properties><string name="Name">fist</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Master Fister", 
	desc = "Put those hands to better use, Agent.", 
	req = "FistsHeavies", 
	reqamount = 50
};
v1.req_desc = "Land " .. v1.reqamount .. " Heavy attacks with your Fists.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "fisthits" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX589"><Properties><string name="Name">masterhive</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Hivemind Mastery", 
	desc = "A collective Hivemind, one but many, but also many but one. May this title guide others to what safety in numbers truly mean.", 
	req = "hive_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Hivemind.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "hive" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX596"><Properties><string name="Name">blade</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Blademaster", 
	desc = "Blade weapons cause good bleeding and are universally balanced weapons for combat. Knowing the intricacies of every weapon class is important to your survival.", 
	req = "BladeHeavies", 
	reqamount = 50
};
v1.req_desc = "Land " .. v1.reqamount .. " Heavy attacks with Blade weapons.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "bladehits" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX603"><Properties><string name="Name">fool</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

return {
	name = "In-Adequate", 
	desc = "Somehow I'm surprised but at the same time I'm not. You'll have to do a bit better than that, Agent.", 
	req = "LowDamageMoment", 
	reqamount = 1, 
	req_desc = "Die while having dealt less than 50 melee damage in total to enemies in a single life.", 
	locked_endgame = false, 
	req_rewards = { { "title", "lowdamage" } }
};
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX610"><Properties><string name="Name">mastermind</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Mindflayer Mastery", 
	desc = "Smart and intelligent, traits that people thought they had, clearly they haven't met someone like you. May this title show others how lost they truly are.", 
	req = "mind_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Mindflayer.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "mind" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX617"><Properties><string name="Name">huntingaxe</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Axecution", 
	desc = "A good arm can go a long way in more ways than one, Agent. Clean.", 
	req = "HuntingAxed", 
	reqamount = 5
};
v1.req_desc = "Execute " .. v1.reqamount .. " enemies with the Hunting Axe.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "axer" }, { "Auxiliary Equipment - Throwing Knives" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX624"><Properties><string name="Name">mastersword</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Vagabond Mastery", 
	desc = "No burden is too much for you I see, even amongst odds you can pull it back without a word.\nMay this title show others how a single word can hold immense power.", 
	req = "sword_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Vagabond.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "sword" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX631"><Properties><string name="Name">mastercondemned</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Damned Mastery", 
	desc = "May more than God have mercy on your soul.", 
	req = "damn_mastery", 
	reqamount = 100000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Damned.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "damn" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX638"><Properties><string name="Name">spear</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Impaler", 
	desc = "Spear weapons have almost consistently a long reach, allowing you to avoid hits while bleeding your enemies. Knowing the intricacies of every weapon class is important to your survival.", 
	req = "SpearHeavies", 
	reqamount = 50
};
v1.req_desc = "Land " .. v1.reqamount .. " Heavy attacks with Spear weapons.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "spearhits" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX645"><Properties><string name="Name">locker</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Supply Gatherer", 
	desc = "Lockers hold items that are important to survival - make sure to make the most out of them, Agent.", 
	req = "Lockers", 
	reqamount = 100
};
v1.req_desc = "Open " .. v1.reqamount .. " Lockers or Double Lockers total.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "locker" }, { "Auxiliary Equipment - Koldera Black" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX652"><Properties><string name="Name">melee</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Tooth and Nail", 
	desc = "Try to remember the basics of CQC while you fight. Melee weapons are paramount to your survival as much as firearms are.", 
	req = "DamageDealt", 
	reqamount = 500
};
v1.req_desc = "Deal " .. v1.reqamount .. " total damage with Melee weapons.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "meleedamage" }, { "Auxiliary Equipment - Ballistic Dagger" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX659"><Properties><string name="Name">mastertrap</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Tickspider Mastery", 
	desc = "Cunning and perceptive, I wouldn't expect less from someone pledged to PARAGON. May this title show others you walk amongst deities.", 
	req = "trapper_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Tickspider.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "trapper" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX666"><Properties><string name="Name">masterlaz</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Lazarus Mastery", 
	desc = "A true support. One who treads the line between survival and perseverance. That is admirable. May this title show others what it means to bridge life and death.", 
	req = "lazarus_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Lazarus.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "lazarus" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX673"><Properties><string name="Name">mastersurv</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Survivalist Mastery", 
	desc = "You're a simple person who doesn't need tricks and gadgets to survive. I can respect that. May this title fit your skills of survival.", 
	req = "survival_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Survivalist.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "survival" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX680"><Properties><string name="Name">mastershotgun</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Arbiter Mastery", 
	desc = "Capable to pushing through all odds to achieve what you want. Others wish they could achieve heights you could. May this title show others what league you are in.", 
	req = "shotgun_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Arbiter.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "shotgun" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX687"><Properties><string name="Name">headshot</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Clean Shots", 
	desc = "Landing Headshots is paramount to your survival, Agent. So make those shots count.", 
	req = "Headshots", 
	reqamount = 25
};
v1.req_desc = "Score " .. v1.reqamount .. " headshots with any ranged weapon.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "headshots" }, { "Auxiliary Equipment - Tear Gas" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX694"><Properties><string name="Name">masterberz</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Berserker Mastery", 
	desc = "With all the Calamity running through your veins, you should be thankful you're still human. May this title fit your neverending rampage.", 
	req = "berz_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Berserker.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "berz" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX701"><Properties><string name="Name">damagetaker</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Durable", 
	desc = "It may hurt, but given time, so will you dish out the same level of hurt, Agent.", 
	req = "DamageTakenFrom", 
	reqamount = 400
};
v1.req_desc = "Have " .. v1.reqamount .. " damage taken in total.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "pincush" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX708"><Properties><string name="Name">masterranger</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Blitzer Mastery", 
	desc = "Brave would be an understatement for what you've accomplished, that's admirable for one. May this title show others that you aren't afraid of the unknown.", 
	req = "ranger_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Blitzer.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "ranger" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX715"><Properties><string name="Name">archer</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Wild Hunter", 
	desc = "Bows are useful weapons that do not need to rely on found ammunition - valuable weaponry to learn, Agent.", 
	req = "bowHeadshots", 
	reqamount = 30
};
v1.req_desc = "Score " .. v1.reqamount .. " headshots with any Bow.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "hunter" }, { "Auxiliary Equipment - Inveigle Device" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX722"><Properties><string name="Name">trapper</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Trapper", 
	desc = "Setting up defenses is crucial for your survival, Agent. You'll find many out in the world, use them.", 
	req = "DeployablesSet", 
	reqamount = 10
};
v1.req_desc = "Set " .. v1.reqamount .. " Deployables in total.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "trap" }, { "Auxiliary Equipment - Concertina Bomb" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX729"><Properties><string name="Name">mantler</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Navigator", 
	desc = "Navigating around the environment is crucial to your survival, make sure you maximise the time you have, Agent.", 
	req = "Mantles", 
	reqamount = 30
};
v1.req_desc = "Mantle " .. v1.reqamount .. " times in total.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "mantler" }, { "Auxiliary Equipment - Collapsible Ladder" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX736"><Properties><string name="Name">mastergun</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Riskrunner Mastery", 
	desc = "Brave and bold, perhaps two words that are an understatement for your accomplishments. May this title show others the right path to blaze through.", 
	req = "gunner_mastery", 
	reqamount = 50000
};
v1.req_desc = "Obtain " .. v1.reqamount .. " XP with Riskrunner.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "gunner" } };
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX743"><Properties><string name="Name">axe</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	name = "Chopper", 
	desc = "Axe weapons are good at harvesting wood materials and cuts into bones quite deep. Knowing the intricacies of every weapon class is important to your survival.", 
	req = "AxeHeavies", 
	reqamount = 50
};
v1.req_desc = "Land " .. v1.reqamount .. " Heavy attacks with Axe weapons.";
v1.locked_endgame = false;
v1.req_rewards = { { "title", "axehits" } };
return v1;
]]></ProtectedString></Properties></Item></Item><Item class="Folder" referent="RBX751"><Properties><string name="Name">DefaultChatSystemChatEvents</string></Properties><Item class="RemoteEvent" referent="RBX754"><Properties><string name="Name">ChannelNameColorUpdated</string></Properties></Item><Item class="RemoteEvent" referent="RBX758"><Properties><string name="Name">OnNewSystemMessage</string></Properties></Item><Item class="RemoteFunction" referent="RBX762"><Properties><string name="Name">MutePlayerRequest</string></Properties></Item><Item class="RemoteEvent" referent="RBX766"><Properties><string name="Name">OnMessageDoneFiltering</string></Properties></Item><Item class="RemoteFunction" referent="RBX770"><Properties><string name="Name">UnMutePlayerRequest</string></Properties></Item><Item class="RemoteEvent" referent="RBX774"><Properties><string name="Name">OnChannelLeft</string></Properties></Item><Item class="RemoteFunction" referent="RBX778"><Properties><string name="Name">GetInitDataRequest</string></Properties></Item><Item class="RemoteEvent" referent="RBX782"><Properties><string name="Name">OnNewMessage</string></Properties></Item><Item class="RemoteEvent" referent="RBX786"><Properties><string name="Name">OnChannelJoined</string></Properties></Item><Item class="RemoteEvent" referent="RBX790"><Properties><string name="Name">OnMainChannelSet</string></Properties></Item><Item class="RemoteEvent" referent="RBX794"><Properties><string name="Name">OnUnmuted</string></Properties></Item><Item class="RemoteEvent" referent="RBX798"><Properties><string name="Name">SayMessageRequest</string></Properties></Item><Item class="RemoteEvent" referent="RBX802"><Properties><string name="Name">SetBlockedUserIdsRequest</string></Properties></Item><Item class="RemoteEvent" referent="RBX806"><Properties><string name="Name">OnMuted</string></Properties></Item></Item><Item class="Folder" referent="RBX811"><Properties><string name="Name">effects</string></Properties><Item class="Folder" referent="RBX814"><Properties><string name="Name">health_scanned</string></Properties><Item class="LocalScript" referent="RBX817"><Properties><string name="Name">update_health</string><bool name="Disabled">true</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__RenderStepped__1 = game:GetService("RunService").RenderStepped;
l__RenderStepped__1:wait();
local l__Adornee__2 = script.Parent.Adornee;
local v3 = false;
if l__Adornee__2 ~= nil and l__Adornee__2.Parent:FindFirstChild("Humanoid") then
	v3 = true;
end;
while true do
	if l__Adornee__2 == nil then
		v3 = false;
	end;
	if l__Adornee__2.Parent:FindFirstChild("Humanoid") == nil then
		v3 = false;
	end;
	if v3 == true then
		local v4 = l__Adornee__2.Parent:FindFirstChild("Humanoid").Health / l__Adornee__2.Parent:FindFirstChild("Humanoid").MaxHealth;
		script.Parent.img.bar.Size = UDim2.new(1, 0, v4, 0);
		if v4 <= 0 then
			v3 = false;
		end;
	end;
	l__RenderStepped__1:wait();
	if v3 == false then
		break;
	end;
end;
script.Parent:Destroy();
]]></ProtectedString></Properties></Item></Item><Item class="Folder" referent="RBX826"><Properties><string name="Name">spawnFX</string></Properties><Item class="LocalScript" referent="RBX829"><Properties><string name="Name">LocalScript</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

wait(1);
local v1 = 2;
local l__RenderStepped__2 = game:GetService("RunService").RenderStepped;
for v3 = 1, 20 do
	if v1 <= v3 then
		if script.Parent.black.Visible == true then
			script.Parent.black.Visible = false;
		else
			script.Parent.black.Visible = true;
		end;
		v1 = v1 + 2;
	end;
	l__RenderStepped__2:wait();
end;
script.Parent.black.Visible = false;
local v4 = 0;
local v5 = tick();
while true do
	if tick() - v5 >= 5 then
		script.Parent.border.ImageTransparency = script.Parent.border.ImageTransparency + 0.02;
		script.Parent.record.TextTransparency = script.Parent.border.ImageTransparency;
		script.Parent.record.ImageLabel.ImageTransparency = script.Parent.border.ImageTransparency;
	end;
	if tick() - v4 >= 0.5 then
		v4 = tick() + 0.5;
		if script.Parent.record.ImageLabel.Visible == true then
			script.Parent.record.ImageLabel.Visible = false;
		else
			script.Parent.record.ImageLabel.Visible = true;
		end;
	end;
	l__RenderStepped__2:wait();
	if script.Parent.border.ImageTransparency >= 1 then
		break;
	end;
end;
wait();
script.Parent:Destroy();
]]></ProtectedString></Properties></Item></Item></Item><Item class="Folder" referent="RBX839"><Properties><string name="Name">misc</string></Properties><Item class="Folder" referent="RBX842"><Properties><string name="Name">staticflash</string></Properties><Item class="LocalScript" referent="RBX845"><Properties><string name="Name">static</string><bool name="Disabled">true</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = { 4452726587, 4452726886, 4452727160, 4452727454 };
while true do
	script.Parent.img.Image = "rbxassetid://" .. v1[math.random(1, #v1)];
	script.Parent.img.ImageTransparency = script.Parent.img.ImageTransparency + 0.05;
	game:GetService("RunService").RenderStepped:wait();
	if script.Parent.img.ImageTransparency >= 1 then
		break;
	end;
end;
script.Parent:Destroy();
]]></ProtectedString></Properties></Item></Item><Item class="Folder" referent="RBX854"><Properties><string name="Name">showdownFX</string></Properties><Item class="LocalScript" referent="RBX857"><Properties><string name="Name">LocalScript</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__RenderStepped__1 = game:GetService("RunService").RenderStepped;
for v2 = 1, 200 do
	script.Parent.showdown.killstreak.gradient.ImageTransparency = script.Parent.showdown.killstreak.gradient.ImageTransparency + 0.05;
	script.Parent.showdown.killstreak.gradient.Size = script.Parent.showdown.killstreak.gradient.Size + UDim2.new(0.1, 0, 0, 0);
	l__RenderStepped__1:wait();
end;
for v3 = 1, 60 do
	script.Parent.showdown.killstreak.duelfx.ImageTransparency = script.Parent.showdown.killstreak.duelfx.ImageTransparency + 0.025;
	script.Parent.showdown.killstreak.TextLabel.TextTransparency = script.Parent.showdown.killstreak.TextLabel.TextTransparency + 0.025;
	l__RenderStepped__1:wait();
end;
script.Parent:Destroy();
]]></ProtectedString></Properties></Item></Item></Item><Item class="Folder" referent="RBX867"><Properties><string name="Name">DefaultSoundEvents</string></Properties><Item class="BindableEvent" referent="RBX870"><Properties><string name="Name">SoundDispatcher</string></Properties></Item><Item class="RemoteEvent" referent="RBX874"><Properties><string name="Name">RemoveCharacterEvent</string></Properties></Item><Item class="RemoteEvent" referent="RBX878"><Properties><string name="Name">AddCharacterLoadedEvent</string></Properties></Item><Item class="RemoteEvent" referent="RBX882"><Properties><string name="Name">DefaultServerSoundEvent</string></Properties></Item></Item><Item class="Folder" referent="RBX887"><Properties><string name="Name">Interactables</string></Properties><Item class="RemoteEvent" referent="RBX890"><Properties><string name="Name">interaction</string></Properties></Item></Item></Item><Item class="Players" referent="RBX896"><Properties><string name="Name">Players</string></Properties><Item class="Folder" referent="RBX899"><Properties><string name="Name">Steffie_lsEpicGamer</string></Properties><Item class="Folder" referent="RBX902"><Properties><string name="Name">PlayerScripts</string></Properties><Item class="LocalScript" referent="RBX905"><Properties><string name="Name">ChatScript</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = false;
local v2, v3 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserHandleChatHotKeyWithContextActionService");
end);
if v2 then
	v1 = v3;
end;
local l__ReplicatedStorage__4 = game:GetService("ReplicatedStorage");
local u1 = require(game:GetService("Chat"):WaitForChild("ClientChatModules"):WaitForChild("ChatSettings"));
local l__StarterGui__2 = game:GetService("StarterGui");
function SetCoreGuiChatConnections(p1)
	local v5 = 0;
	while true do
		if v5 < 10 then

		else
			break;
		end;
		v5 = v5 + 1;
		local v6, v7 = pcall(function()
			l__StarterGui__2:SetCore("CoreGuiChatConnections", p1);
		end);
		if not v6 then

		else
			break;
		end;
		if not v6 then
			if v5 == 10 then
				error("Error calling SetCore CoreGuiChatConnections: " .. v7);
			end;
		end;
		wait();	
	end;
end;
function checkBothChatTypesDisabled()
	if u1.BubbleChatEnabled ~= nil then
		if u1.ClassicChatEnabled ~= nil then

		else
			return false;
		end;
	else
		return false;
	end;
	return not (u1.BubbleChatEnabled or u1.ClassicChatEnabled);
end;
if not game:GetService("GuiService"):IsTenFootInterface() and not game:GetService("UserInputService").VREnabled then
	if not checkBothChatTypesDisabled() then
		(function()
			local v8 = {
				ChatWindow = {}, 
				SetCore = {}, 
				GetCore = {}
			};
			v8.ChatWindow.ChatTypes = {};
			v8.ChatWindow.ChatTypes.BubbleChatEnabled = u1.BubbleChatEnabled;
			v8.ChatWindow.ChatTypes.ClassicChatEnabled = u1.ClassicChatEnabled;
			local u3 = require(script:WaitForChild("ChatMain"));
			local function v9(p2)
				local v10 = Instance.new("BindableEvent");
				v10.Name = p2;
				v8.ChatWindow[p2] = v10;
				v10.Event:connect(function(...)
					u3[p2](u3, ...);
				end);
			end;
			local function v11(p3)
				local v12 = Instance.new("BindableFunction");
				v12.Name = p3;
				v8.ChatWindow[p3] = v12;
				function v12.OnInvoke(...)
					return u3[p3](u3, ...);
				end;
			end;
			local function v13(p4)
				local v14 = Instance.new("BindableEvent");
				v14.Name = p4;
				v8.ChatWindow[p4] = v14;
				u3[p4]:connect(function(...)
					v14:Fire(...);
				end);
			end;
			local function v15(p5)
				local v16 = Instance.new("BindableEvent");
				v16.Name = p5;
				v8.SetCore[p5] = v16;
				v16.Event:connect(function(...)
					u3[p5 .. "Event"]:fire(...);
				end);
			end;
			local function v17(p6)
				local v18 = Instance.new("BindableFunction");
				v18.Name = p6;
				v8.GetCore[p6] = v18;
				function v18.OnInvoke(...)
					return u3["f" .. p6](...);
				end;
			end;
			v9("ToggleVisibility");
			v9("SetVisible");
			v9("FocusChatBar");
			v9("EnterWhisperState");
			v11("GetVisibility");
			v11("GetMessageCount");
			v9("TopbarEnabledChanged");
			v11("IsFocused");
			v13("ChatBarFocusChanged");
			v13("VisibilityStateChanged");
			v13("MessagesChanged");
			v13("MessagePosted");
			(function(p7)
				local v19 = Instance.new("BindableEvent");
				v19.Name = p7;
				v8.ChatWindow[p7] = v19;
				v19.Event:connect(function(...)
					u3[p7]:fire(...);
				end);
			end)("CoreGuiEnabled");
			v15("ChatMakeSystemMessage");
			v15("ChatWindowPosition");
			v15("ChatWindowSize");
			v17("ChatWindowPosition");
			v17("ChatWindowSize");
			v15("ChatBarDisabled");
			v17("ChatBarDisabled");
			if not v1 then
				v9("SpecialKeyPressed");
			end;
			SetCoreGuiChatConnections(v8);
		end)();
	else
		local v20 = {
			ChatWindow = {}
		};
		v20.ChatWindow.ChatTypes = {};
		v20.ChatWindow.ChatTypes.BubbleChatEnabled = false;
		v20.ChatWindow.ChatTypes.ClassicChatEnabled = false;
		SetCoreGuiChatConnections(v20);
	end;
else
	l__ReplicatedStorage__4:WaitForChild("DefaultChatSystemChatEvents").GetInitDataRequest:InvokeServer();
end;
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX912"><Properties><string name="Name">ChatMain</string><ProtectedString name="Source"><![CDATA[--[[VARIABLE DEFINITION ANOMALY DETECTED, DECOMPILATION OUTPUT POTENTIALLY INCORRECT]]--
-- Decompiled with the Synapse X Luau decompiler.

local v1 = false;
local v2, v3 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserHandleChatHotKeyWithContextActionService");
end);
if v2 then
	v1 = v3;
end;
local l__RunService__4 = game:GetService("RunService");
local l__ReplicatedStorage__5 = game:GetService("ReplicatedStorage");
local l__Chat__6 = game:GetService("Chat");
local l__StarterGui__7 = game:GetService("StarterGui");
local l__ContextActionService__8 = game:GetService("ContextActionService");
local v9 = l__ReplicatedStorage__5:WaitForChild("DefaultChatSystemChatEvents");
local v10 = l__ReplicatedStorage__5:WaitForChild("DefaultChatSystemChatEvents");
local l__ClientChatModules__11 = l__Chat__6:WaitForChild("ClientChatModules");
local v12 = require(l__ClientChatModules__11:WaitForChild("ChatConstants"));
local v13 = require(l__ClientChatModules__11:WaitForChild("ChatSettings"));
local v14 = require(l__ClientChatModules__11:WaitForChild("MessageCreatorModules"):WaitForChild("Util"));
local u1 = nil;
pcall(function()
	u1 = require(game:GetService("Chat").ClientChatModules.ChatLocalization);
end);
if u1 == nil then
	u1 = {
		Get = function(p1, p2, p3)
			return p3;
		end
	};
end;
local v15 = Instance.new("BindableEvent");
local u2 = {
	OnNewMessage = "RemoteEvent", 
	OnMessageDoneFiltering = "RemoteEvent", 
	OnNewSystemMessage = "RemoteEvent", 
	OnChannelJoined = "RemoteEvent", 
	OnChannelLeft = "RemoteEvent", 
	OnMuted = "RemoteEvent", 
	OnUnmuted = "RemoteEvent", 
	OnMainChannelSet = "RemoteEvent", 
	SayMessageRequest = "RemoteEvent", 
	GetInitDataRequest = "RemoteFunction"
};
local u3 = {};
local u4 = 10;
function TryRemoveChildWithVerifyingIsCorrectType(p4)
	if u2[p4.Name] then
		if p4:IsA(u2[p4.Name]) then
			u2[p4.Name] = nil;
			u3[p4.Name] = p4;
			u4 = u4 - 1;
		end;
	end;
end;
for v16, v17 in pairs(v10:GetChildren()) do
	TryRemoveChildWithVerifyingIsCorrectType(v17);
end;
if u4 > 0 then
	local v18 = v10.ChildAdded:connect(function(p5)
		TryRemoveChildWithVerifyingIsCorrectType(p5);
		if u4 < 1 then
			v15:Fire();
		end;
	end);
	v15.Event:wait();
	v18:disconnect();
	v15:Destroy();
end;
local l__UserInputService__19 = game:GetService("UserInputService");
local l__RunService__20 = game:GetService("RunService");
local l__Players__21 = game:GetService("Players");
local v22 = l__Players__21.LocalPlayer;
while not v22 do
	l__Players__21.ChildAdded:wait();
	v22 = l__Players__21.LocalPlayer;
end;
local v23 = 6;
if v13.ScreenGuiDisplayOrder ~= nil then
	v23 = v13.ScreenGuiDisplayOrder;
end;
local v24 = Instance.new("ScreenGui");
v24.Name = "Chat";
v24.ResetOnSpawn = false;
v24.DisplayOrder = v23;
v24.Parent = v22:WaitForChild("PlayerGui");
local v25 = require(script:WaitForChild("MessageLabelCreator"));
local v26 = require(script:WaitForChild("MessageLogDisplay"));
local v27 = require(script:WaitForChild("ChatChannel"));
local v28 = require(script:WaitForChild("ChatWindow")).new();
local v29 = require(script:WaitForChild("ChannelsBar")).new();
local v30 = v26.new();
local v31 = require(script:WaitForChild("CommandProcessor")).new();
local v32 = require(script:WaitForChild("ChatBar")).new(v31, v28);
v28:CreateGuiObjects(v24);
v28:RegisterChatBar(v32);
v28:RegisterChannelsBar(v29);
v28:RegisterMessageLogDisplay(v30);
v14:RegisterChatWindow(v28);
local v33 = require(script:WaitForChild("MessageSender"));
v33:RegisterSayMessageFunction(u3.SayMessageRequest);
if l__UserInputService__19.TouchEnabled then
	v32:SetTextLabelText(u1:Get("GameChat_ChatMain_ChatBarTextTouch", "Tap here to chat"));
else
	v32:SetTextLabelText(u1:Get("GameChat_ChatMain_ChatBarText", "To chat click here or press \"/\" key"));
end;
local l__script__5 = script;
spawn(function()
	local v34 = require(l__script__5:WaitForChild("CurveUtil"));
	local v35 = 1 / (v13.ChatAnimationFPS and 20);
	local v36 = tick();
	while true do
		local v37 = tick();
		local v38 = v34:DeltaTimeToTimescale(v37 - v36);
		if v38 ~= 0 then
			v28:Update(v38);
		end;
		v36 = v37;
		wait(v35);	
	end;
end);
function CheckIfPointIsInSquare(p6, p7, p8)
	local v39 = false;
	if p7.X <= p6.X then
		v39 = false;
		if p6.X <= p8.X then
			v39 = false;
			if p7.Y <= p6.Y then
				v39 = p6.Y <= p8.Y;
			end;
		end;
	end;
	return v39;
end;
local u6 = 0;
local u7 = false;
local u8 = Instance.new("BindableEvent");
function DoBackgroundFadeIn(p9)
	u6 = tick();
	u7 = false;
	u8:Fire();
	v28:FadeInBackground(p9 or v13.ChatDefaultFadeDuration);
	if v28:GetCurrentChannel() then
		local l__Scroller__40 = v30.Scroller;
		l__Scroller__40.ScrollingEnabled = true;
		l__Scroller__40.ScrollBarThickness = v26.ScrollBarThickness;
	end;
end;
function DoBackgroundFadeOut(p10)
	u6 = tick();
	u7 = true;
	u8:Fire();
	v28:FadeOutBackground(p10 or v13.ChatDefaultFadeDuration);
	if v28:GetCurrentChannel() then
		local l__Scroller__41 = v30.Scroller;
		l__Scroller__41.ScrollingEnabled = false;
		l__Scroller__41.ScrollBarThickness = 0;
	end;
end;
local u9 = 0;
local u10 = false;
function DoTextFadeIn(p11)
	u9 = tick();
	u10 = false;
	u8:Fire();
	v28:FadeInText((p11 or v13.ChatDefaultFadeDuration) * 0);
end;
function DoTextFadeOut(p12)
	u9 = tick();
	u10 = true;
	u8:Fire();
	v28:FadeOutText(p12 or v13.ChatDefaultFadeDuration);
end;
function DoFadeInFromNewInformation()
	DoTextFadeIn();
	if v13.ChatShouldFadeInFromNewInformation then
		DoBackgroundFadeIn();
	end;
end;
function InstantFadeIn()
	DoBackgroundFadeIn(0);
	DoTextFadeIn(0);
end;
function InstantFadeOut()
	DoBackgroundFadeOut(0);
	DoTextFadeOut(0);
end;
local u11 = nil;
local u12 = Instance.new("BindableEvent");
function UpdateFadingForMouseState(p13)
	u11 = p13;
	u12:Fire();
	if v32:IsFocused() then
		return;
	end;
	if p13 then

	else
		DoBackgroundFadeIn();
		return;
	end;
	DoBackgroundFadeIn();
	DoTextFadeIn();
end;
local u13 = Instance.new("BindableEvent");
spawn(function()
	while true do
		l__RunService__20.RenderStepped:wait();
		while not (not u11) or not (not v32:IsFocused()) do
			if u11 then
				u12.Event:wait();
			end;
			if v32:IsFocused() then
				u13.Event:wait();
			end;		
		end;
		if not u7 then
			if v13.ChatWindowBackgroundFadeOutTime < tick() - u6 then
				DoBackgroundFadeOut();
			end;
		elseif not u10 then
			if v13.ChatWindowTextFadeOutTime < tick() - u9 then
				DoTextFadeOut();
			end;
		else
			u8.Event:wait();
		end;	
	end;
end);
function getClassicChatEnabled()
	if v13.ClassicChatEnabled ~= nil then
		return v13.ClassicChatEnabled;
	end;
	return l__Players__21.ClassicChat;
end;
function getBubbleChatEnabled()
	if v13.BubbleChatEnabled ~= nil then
		return v13.BubbleChatEnabled;
	end;
	return l__Players__21.BubbleChat;
end;
function bubbleChatOnly()
	return not getClassicChatEnabled() and getBubbleChatEnabled();
end;
local u14 = {};
function UpdateMousePosition(p14)
	if u14.Visible then
		if u14.IsCoreGuiEnabled then
			if not u14.TopbarEnabled then
				if not v13.ChatOnWithTopBarOff then
					return;
				end;
			end;
		else
			return;
		end;
	else
		return;
	end;
	if bubbleChatOnly() then
		return;
	end;
	local l__AbsolutePosition__42 = v28.GuiObject.AbsolutePosition;
	local v43 = CheckIfPointIsInSquare(p14, l__AbsolutePosition__42, l__AbsolutePosition__42 + v28.GuiObject.AbsoluteSize);
	if v43 ~= u11 then
		UpdateFadingForMouseState(v43);
	end;
end;
l__UserInputService__19.InputChanged:connect(function(p15, p16)
	if p15.UserInputType == Enum.UserInputType.MouseMovement then
		UpdateMousePosition((Vector2.new(p15.Position.X, p15.Position.Y)));
	end;
end);
l__UserInputService__19.TouchTap:connect(function(p17, p18)
	UpdateMousePosition(p17[1]);
end);
l__UserInputService__19.TouchMoved:connect(function(p19, p20)
	UpdateMousePosition((Vector2.new(p19.Position.X, p19.Position.Y)));
end);
l__UserInputService__19.Changed:connect(function(p21)
	if p21 == "MouseBehavior" and l__UserInputService__19.MouseBehavior == Enum.MouseBehavior.LockCenter then
		local l__AbsolutePosition__44 = v28.GuiObject.AbsolutePosition;
		if CheckIfPointIsInSquare(v24.AbsoluteSize / 2, l__AbsolutePosition__44, l__AbsolutePosition__44 + v28.GuiObject.AbsoluteSize) then
			l__UserInputService__19.MouseBehavior = Enum.MouseBehavior.Default;
		end;
	end;
end);
UpdateFadingForMouseState(true);
UpdateFadingForMouseState(false);
local v45 = {
	Signal = function()
		local v46 = {};
		local u15 = nil;
		local u16 = nil;
		local u17 = Instance.new("BindableEvent");
		function v46.fire(p22, ...)
			u15 = { ... };
			u16 = select("#", ...);
			u17:Fire();
		end;
		function v46.connect(p23, p24)
			if not p24 then
				error("connect(nil)", 2);
			end;
			return u17.Event:connect(function()
				p24(unpack(u15, 1, u16));
			end);
		end;
		function v46.wait(p25)
			u17.Event:wait();
			assert(u15, "Missing arg data, likely due to :TweenSize/Position corrupting threadrefs.");
			return unpack(u15, 1, u16);
		end;
		return v46;
	end
};
function SetVisibility(p26)
	v28:SetVisible(p26);
	u14.VisibilityStateChanged:fire(p26);
	u14.Visible = p26;
	if u14.IsCoreGuiEnabled then
		if p26 then

		else
			InstantFadeOut();
			return;
		end;
	else
		return;
	end;
	InstantFadeIn();
end;
u14.TopbarEnabled = true;
u14.MessageCount = 0;
u14.Visible = true;
u14.IsCoreGuiEnabled = true;
function u14.ToggleVisibility(p27)
	SetVisibility(not v28:GetVisible());
end;
function u14.SetVisible(p28, p29)
	if v28:GetVisible() ~= p29 then
		SetVisibility(p29);
	end;
end;
function u14.FocusChatBar(p30)
	v32:CaptureFocus();
end;
function u14.EnterWhisperState(p31, p32)
	v32:EnterWhisperState(p32);
end;
function u14.GetVisibility(p33)
	return v28:GetVisible();
end;
function u14.GetMessageCount(p34)
	return p34.MessageCount;
end;
function u14.TopbarEnabledChanged(p35, p36)
	p35.TopbarEnabled = p36;
	p35.CoreGuiEnabled:fire(game:GetService("StarterGui"):GetCoreGuiEnabled(Enum.CoreGuiType.Chat));
end;
function u14.IsFocused(p37, p38)
	return v32:IsFocused();
end;
u14.ChatBarFocusChanged = v45.Signal();
u14.VisibilityStateChanged = v45.Signal();
u14.MessagesChanged = v45.Signal();
u14.MessagePosted = v45.Signal();
u14.CoreGuiEnabled = v45.Signal();
u14.ChatMakeSystemMessageEvent = v45.Signal();
u14.ChatWindowPositionEvent = v45.Signal();
u14.ChatWindowSizeEvent = v45.Signal();
u14.ChatBarDisabledEvent = v45.Signal();
function u14.fChatWindowPosition(p39)
	return v28.GuiObject.Position;
end;
function u14.fChatWindowSize(p40)
	return v28.GuiObject.Size;
end;
function u14.fChatBarDisabled(p41)
	return not v32:GetEnabled();
end;
if v1 then
	local u18 = true;
	l__ContextActionService__8:BindAction("ToggleChat", function(p42, p43, p44)
		if p42 == "ToggleChat" and p43 == Enum.UserInputState.Begin and u18 and p44.UserInputType == Enum.UserInputType.Keyboard then
			DoChatBarFocus();
		end;
	end, true, Enum.KeyCode.Slash);
else
	local u19 = true;
	function u14.SpecialKeyPressed(p45, p46, p47)
		if p46 == Enum.SpecialKey.ChatHotkey and u19 then
			DoChatBarFocus();
		end;
	end;
end;
u14.CoreGuiEnabled:connect(function(p48)
	u14.IsCoreGuiEnabled = p48;
	p48 = p48 and (u14.TopbarEnabled or v13.ChatOnWithTopBarOff);
	v28:SetCoreGuiEnabled(p48);
	if p48 then
		InstantFadeIn();
		return;
	end;
	v32:ReleaseFocus();
	InstantFadeOut();
end);
function trimTrailingSpaces(p49)
	local v47 = #p49;
	while true do
		if 0 < v47 then

		else
			break;
		end;
		if p49:find("^%s", v47) then

		else
			break;
		end;
		v47 = v47 - 1;	
	end;
	return p49:sub(1, v47);
end;
local u20 = false;
u14.ChatMakeSystemMessageEvent:connect(function(p50)
	if p50.Text and type(p50.Text) == "string" then
		while not u20 do
			wait();		
		end;
		local l__GeneralChannelName__48 = v13.GeneralChannelName;
		local v49 = v28:GetChannel(l__GeneralChannelName__48);
		if v49 then
			v49:AddMessageToChannel({
				ID = -1, 
				FromSpeaker = nil, 
				SpeakerUserId = 0, 
				OriginalChannel = l__GeneralChannelName__48, 
				IsFiltered = true, 
				MessageLength = string.len(p50.Text), 
				MessageLengthUtf8 = utf8.len(utf8.nfcnormalize(p50.Text)), 
				Message = trimTrailingSpaces(p50.Text), 
				MessageType = v12.MessageTypeSetCore, 
				Time = os.time(), 
				ExtraData = p50
			});
			v29:UpdateMessagePostedInChannel(l__GeneralChannelName__48);
			u14.MessageCount = u14.MessageCount + 1;
			u14.MessagesChanged:fire(u14.MessageCount);
		end;
	end;
end);
u14.ChatBarDisabledEvent:connect(function(p51)
	if u19 then
		v32:SetEnabled(not p51);
		if p51 then
			v32:ReleaseFocus();
		end;
	end;
end);
u14.ChatWindowSizeEvent:connect(function(p52)
	v28.GuiObject.Size = p52;
end);
u14.ChatWindowPositionEvent:connect(function(p53)
	v28.GuiObject.Position = p53;
end);
function DoChatBarFocus()
	if not v28:GetCoreGuiEnabled() then
		return;
	end;
	if not v32:GetEnabled() then
		return;
	end;
	if not v32:IsFocused() then
		if v32:GetVisible() then
			u14:SetVisible(true);
			InstantFadeIn();
			v32:CaptureFocus();
			u14.ChatBarFocusChanged:fire(true);
		end;
	end;
end;
u13.Event:connect(function(p54)
	u14.ChatBarFocusChanged:fire(p54);
end);
function DoSwitchCurrentChannel(p55)
	if v28:GetChannel(p55) then
		v28:SwitchCurrentChannel(p55);
	end;
end;
function SendMessageToSelfInTargetChannel(p56, p57, p58)
	local v50 = v28:GetChannel(p57);
	if v50 then
		v50:AddMessageToChannel({
			ID = -1, 
			FromSpeaker = nil, 
			SpeakerUserId = 0, 
			OriginalChannel = p57, 
			IsFiltered = true, 
			MessageLength = string.len(p56), 
			MessageLengthUtf8 = utf8.len(utf8.nfcnormalize(p56)), 
			Message = trimTrailingSpaces(p56), 
			MessageType = v12.MessageTypeSystem, 
			Time = os.time(), 
			ExtraData = p58
		});
	end;
end;
function chatBarFocused()
	if not u11 then
		DoBackgroundFadeIn();
		if u10 then
			DoTextFadeIn();
		end;
	end;
	u13:Fire(true);
end;
function chatBarFocusLost(p59, p60)
	DoBackgroundFadeIn();
	u13:Fire(false);
	if p59 then
		local v51 = v32:GetTextBox().Text;
		if v32:IsInCustomState() then
			local v52 = v32:GetCustomMessage();
			if v52 then
				v51 = v52;
			end;
			local v53 = v32:CustomStateProcessCompletedMessage(v51);
			v32:ResetCustomState();
			if v53 then
				return;
			end;
		end;
		v32:GetTextBox().Text = "";
		if v51 ~= "" then
			u14.MessagePosted:fire(v51);
			if not v31:ProcessCompletedChatMessage(v51, v28) then
				local v54 = nil;
				if v13.DisallowedWhiteSpace then
					local v55 = #v13.DisallowedWhiteSpace;
					local v56 = 1 - 1;
					while true do
						if v13.DisallowedWhiteSpace[v56] == "\t" then
							v51 = string.gsub(v51, v13.DisallowedWhiteSpace[v56], " ");
						else
							v51 = string.gsub(v51, v13.DisallowedWhiteSpace[v56], "");
						end;
						if 0 <= 1 then
							if v56 < v55 then

							else
								break;
							end;
						elseif v55 < v56 then

						else
							break;
						end;
						v56 = v56 + 1;					
					end;
				end;
				v54 = string.gsub(string.gsub(v51, "\n", ""), "[ ]+", " ");
				local v57 = v28:GetTargetMessageChannel();
				if v57 then
					v33:SendMessage(v54, v57);
					return;
				end;
				v33:SendMessage(v54, nil);
			end;
		end;
	end;
end;
local u21 = {};
function setupChatBarConnections()
	local v58 = #u21;
	local v59 = 1 - 1;
	while true do
		u21[v59]:Disconnect();
		if 0 <= 1 then
			if v59 < v58 then

			else
				break;
			end;
		elseif v58 < v59 then

		else
			break;
		end;
		v59 = v59 + 1;	
	end;
	u21 = {};
	table.insert(u21, (v32:GetTextBox().FocusLost:connect(chatBarFocusLost)));
	table.insert(u21, (v32:GetTextBox().Focused:connect(chatBarFocused)));
end;
setupChatBarConnections();
v32.GuiObjectsChanged:connect(setupChatBarConnections);
function getEchoMessagesInGeneral()
	if v13.EchoMessagesInGeneralChannel == nil then
		return true;
	end;
	return v13.EchoMessagesInGeneralChannel;
end;
u3.OnMessageDoneFiltering.OnClientEvent:connect(function(p61)
	if not v13.ShowUserOwnFilteredMessage and p61.FromSpeaker == v22.Name then
		return;
	end;
	local l__OriginalChannel__60 = p61.OriginalChannel;
	local v61 = v28:GetChannel(l__OriginalChannel__60);
	if v61 then
		v61:UpdateMessageFiltered(p61);
	end;
	if getEchoMessagesInGeneral() and v13.GeneralChannelName and l__OriginalChannel__60 ~= v13.GeneralChannelName then
		local v62 = v28:GetChannel(v13.GeneralChannelName);
		if v62 then
			v62:UpdateMessageFiltered(p61);
		end;
	end;
end);
u3.OnNewMessage.OnClientEvent:connect(function(p62, p63)
	local v63 = v28:GetChannel(p63);
	if v63 then
		v63:AddMessageToChannel(p62);
		if p62.FromSpeaker ~= v22.Name then
			v29:UpdateMessagePostedInChannel(p63);
		end;
		if getEchoMessagesInGeneral() and v13.GeneralChannelName and p63 ~= v13.GeneralChannelName then
			local v64 = v28:GetChannel(v13.GeneralChannelName);
			if v64 then
				v64:AddMessageToChannel(p62);
			end;
		end;
		u14.MessageCount = u14.MessageCount + 1;
		u14.MessagesChanged:fire(u14.MessageCount);
		DoFadeInFromNewInformation();
	end;
end);
u3.OnNewSystemMessage.OnClientEvent:connect(function(p64, p65)
	p65 = p65 and "System";
	local v65 = v28:GetChannel(p65);
	if v65 then
		v65:AddMessageToChannel(p64);
		v29:UpdateMessagePostedInChannel(p65);
		u14.MessageCount = u14.MessageCount + 1;
		u14.MessagesChanged:fire(u14.MessageCount);
		DoFadeInFromNewInformation();
		if getEchoMessagesInGeneral() and v13.GeneralChannelName and p65 ~= v13.GeneralChannelName then
			local v66 = v28:GetChannel(v13.GeneralChannelName);
			if v66 then
				v66:AddMessageToChannel(p64);
				return;
			end;
		end;
	else
		warn(string.format("Just received system message for channel I'm not in [%s]", p65));
	end;
end);
function HandleChannelJoined(p66, p67, p68, p69, p70, p71)
	if v28:GetChannel(p66) then
		v28:RemoveChannel(p66);
	end;
	if p66 == v13.GeneralChannelName then
		u20 = true;
	end;
	if p69 then
		v32:SetChannelNameColor(p66, p69);
	end;
	local v67 = v28:AddChannel(p66);
	if v67 then
		if p66 == v13.GeneralChannelName then
			DoSwitchCurrentChannel(p66);
		end;
		if p68 then
			local v68 = 1;
			if v13.MessageHistoryLengthPerChannel < #p68 then
				v68 = #p68 - v13.MessageHistoryLengthPerChannel;
			end;
			local v69 = #p68;
			local v70 = v68 - 1;
			while true do
				v67:AddMessageToChannel(p68[v70]);
				if 0 <= 1 then
					if v70 < v69 then

					else
						break;
					end;
				elseif v69 < v70 then

				else
					break;
				end;
				v70 = v70 + 1;			
			end;
			if getEchoMessagesInGeneral() then
				if p70 then
					if v13.GeneralChannelName then
						if p66 ~= v13.GeneralChannelName then
							local v71 = v28:GetChannel(v13.GeneralChannelName);
							if v71 then
								v71:AddMessagesToChannelByTimeStamp(p68, v68);
							end;
						end;
					end;
				end;
			end;
		end;
		if p67 ~= "" then
			local v72 = {
				ID = -1, 
				FromSpeaker = nil, 
				SpeakerUserId = 0, 
				OriginalChannel = p66, 
				IsFiltered = true, 
				MessageLength = string.len(p67), 
				MessageLengthUtf8 = utf8.len(utf8.nfcnormalize(p67)), 
				Message = trimTrailingSpaces(p67), 
				MessageType = v12.MessageTypeWelcome, 
				Time = os.time(), 
				ExtraData = nil
			};
			v67:AddMessageToChannel(v72);
			if getEchoMessagesInGeneral() then
				if p71 then
					if not v13.ShowChannelsBar then
						if p66 ~= v13.GeneralChannelName then
							local v73 = v28:GetChannel(v13.GeneralChannelName);
							if v73 then
								v73:AddMessageToChannel(v72);
							end;
						end;
					end;
				end;
			end;
		end;
		DoFadeInFromNewInformation();
	end;
end;
u3.OnChannelJoined.OnClientEvent:connect(function(p72, p73, p74, p75)
	HandleChannelJoined(p72, p73, p74, p75, false, true);
end);
u3.OnChannelLeft.OnClientEvent:connect(function(p76)
	v28:RemoveChannel(p76);
	DoFadeInFromNewInformation();
end);
u3.OnMuted.OnClientEvent:connect(function(p77)

end);
u3.OnUnmuted.OnClientEvent:connect(function(p78)

end);
u3.OnMainChannelSet.OnClientEvent:connect(function(p79)
	DoSwitchCurrentChannel(p79);
end);
coroutine.wrap(function()
	local l__ChannelNameColorUpdated__74 = v9:WaitForChild("ChannelNameColorUpdated", 5);
	if l__ChannelNameColorUpdated__74 then
		l__ChannelNameColorUpdated__74.OnClientEvent:connect(function(p80, p81)
			v32:SetChannelNameColor(p80, p81);
		end);
	end;
end)();
local u22 = nil;
local u23 = nil;
local u24 = nil;
local u25 = nil;
pcall(function()
	u22 = l__StarterGui__7:GetCore("PlayerBlockedEvent");
	u23 = l__StarterGui__7:GetCore("PlayerMutedEvent");
	u24 = l__StarterGui__7:GetCore("PlayerUnblockedEvent");
	u25 = l__StarterGui__7:GetCore("PlayerUnmutedEvent");
end);
function SendSystemMessageToSelf(p82)
	local v75 = v28:GetCurrentChannel();
	if v75 then
		v75:AddMessageToChannel({
			ID = -1, 
			FromSpeaker = nil, 
			SpeakerUserId = 0, 
			OriginalChannel = v75.Name, 
			IsFiltered = true, 
			MessageLength = string.len(p82), 
			MessageLengthUtf8 = utf8.len(utf8.nfcnormalize(p82)), 
			Message = trimTrailingSpaces(p82), 
			MessageType = v12.MessageTypeSystem, 
			Time = os.time(), 
			ExtraData = nil
		});
	end;
end;
function MutePlayer(p83)
	local l__MutePlayerRequest__76 = v9:FindFirstChild("MutePlayerRequest");
	if l__MutePlayerRequest__76 then

	else
		return false;
	end;
	return l__MutePlayerRequest__76:InvokeServer(p83.Name);
end;
if u22 then
	u22.Event:connect(function(p84)
		if MutePlayer(p84) then
			if v13.PlayerDisplayNamesEnabled then
				local v77 = p84.DisplayName;
			else
				v77 = p84.Name;
			end;
			SendSystemMessageToSelf(u1:Get("GameChat_ChatMain_SpeakerHasBeenBlocked", string.format("Speaker '%s' has been blocked.", v77), {
				RBX_NAME = v77
			}));
		end;
	end);
end;
if u23 then
	u23.Event:connect(function(p85)
		if MutePlayer(p85) then
			if v13.PlayerDisplayNamesEnabled then
				local v78 = p85.DisplayName;
			else
				v78 = p85.Name;
			end;
			SendSystemMessageToSelf(u1:Get("GameChat_ChatMain_SpeakerHasBeenMuted", string.format("Speaker '%s' has been muted.", v78), {
				RBX_NAME = v78
			}));
		end;
	end);
end;
function UnmutePlayer(p86)
	local l__UnMutePlayerRequest__79 = v9:FindFirstChild("UnMutePlayerRequest");
	if l__UnMutePlayerRequest__79 then

	else
		return false;
	end;
	return l__UnMutePlayerRequest__79:InvokeServer(p86.Name);
end;
if u24 then
	u24.Event:connect(function(p87)
		if UnmutePlayer(p87) then
			if v13.PlayerDisplayNamesEnabled then
				local v80 = p87.DisplayName;
			else
				v80 = p87.Name;
			end;
			SendSystemMessageToSelf(u1:Get("GameChat_ChatMain_SpeakerHasBeenUnBlocked", string.format("Speaker '%s' has been unblocked.", v80), {
				RBX_NAME = v80
			}));
		end;
	end);
end;
if u25 then
	u25.Event:connect(function(p88)
		if UnmutePlayer(p88) then
			if v13.PlayerDisplayNamesEnabled then
				local v81 = p88.DisplayName;
			else
				v81 = p88.Name;
			end;
			SendSystemMessageToSelf(u1:Get("GameChat_ChatMain_SpeakerHasBeenUnMuted", string.format("Speaker '%s' has been unmuted.", v81), {
				RBX_NAME = v81
			}));
		end;
	end);
end;
spawn(function()
	if v22.UserId > 0 then
		pcall(function()
			local v82 = l__StarterGui__7:GetCore("GetBlockedUserIds");
			if #v82 > 0 then
				local l__SetBlockedUserIdsRequest__83 = v9:FindFirstChild("SetBlockedUserIdsRequest");
				if l__SetBlockedUserIdsRequest__83 then
					l__SetBlockedUserIdsRequest__83:FireServer(v82);
				end;
			end;
		end);
	end;
end);
spawn(function()
	local v84, v85 = pcall(function()
		return l__Chat__6:CanUserChatAsync(v22.UserId);
	end);
	if v84 then
		u19 = l__RunService__20:IsStudio() and v85;
	end;
end);
local v86 = u3.GetInitDataRequest:InvokeServer();
for v87, v88 in pairs(v86.Channels) do
	if v88[1] == v13.GeneralChannelName then
		HandleChannelJoined(v88[1], v88[2], v88[3], v88[4], true, false);
	end;
end;
for v89, v90 in pairs(v86.Channels) do
	if v90[1] ~= v13.GeneralChannelName then
		HandleChannelJoined(v90[1], v90[2], v90[3], v90[4], true, false);
	end;
end;
return u14;
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX918"><Properties><string name="Name">MessageSender</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local l__Parent__2 = script.Parent;
local v3 = {};
v3.__index = v3;
function v3.SendMessage(p1, p2, p3)
	p1.SayMessageRequest:FireServer(p2, p3);
end;
function v3.RegisterSayMessageFunction(p4, p5)
	p4.SayMessageRequest = p5;
end;
function v1.new()
	local v4 = setmetatable({}, v3);
	v4.SayMessageRequest = nil;
	return v4;
end;
return v1.new();
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX925"><Properties><string name="Name">ObjectPool</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = {};
v2.__index = v2;
function v2.GetInstance(p1, p2)
	if p1.InstancePoolsByClass[p2] == nil then
		p1.InstancePoolsByClass[p2] = {};
	end;
	local v3 = #p1.InstancePoolsByClass[p2];
	if not (v3 > 0) then
		return Instance.new(p2);
	end;
	table.remove(p1.InstancePoolsByClass[p2]);
	return p1.InstancePoolsByClass[p2][v3];
end;
function v2.ReturnInstance(p3, p4)
	if p3.InstancePoolsByClass[p4.ClassName] == nil then
		p3.InstancePoolsByClass[p4.ClassName] = {};
	end;
	if not (#p3.InstancePoolsByClass[p4.ClassName] < p3.PoolSizePerType) then
		p4:Destroy();
		return;
	end;
	table.insert(p3.InstancePoolsByClass[p4.ClassName], p4);
end;
function v1.new(p5)
	local v4 = setmetatable({}, v2);
	v4.InstancePoolsByClass = {};
	v4.Name = "ObjectPool";
	v4.PoolSizePerType = p5;
	return v4;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX932"><Properties><string name="Name">MessageLabelCreator</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local l__Chat__2 = game:GetService("Chat");
local l__ClientChatModules__3 = l__Chat__2:WaitForChild("ClientChatModules");
local l__MessageCreatorModules__4 = l__ClientChatModules__3:WaitForChild("MessageCreatorModules");
local l__Parent__5 = script.Parent;
local v6 = require(l__ClientChatModules__3:WaitForChild("ChatSettings"));
local v7 = require(l__Parent__5:WaitForChild("MessageSender"));
local v8 = {};
v8.__index = v8;
function mergeProps(p1, p2)
	if not p1 then
		return;
	end;
	local v9, v10, v11 = pairs(p1);
	while true do
		local v12, v13 = v9(v10, v11);
		if v12 then

		else
			break;
		end;
		v11 = v12;
		p2[v12] = v13;	
	end;
end;
function ReturnToObjectPoolRecursive(p3, p4)
	local v14 = p3:GetChildren();
	local v15 = #v14;
	local v16 = 1 - 1;
	while true do
		ReturnToObjectPoolRecursive(v14[v16], p4);
		if 0 <= 1 then
			if v16 < v15 then

			else
				break;
			end;
		elseif v15 < v16 then

		else
			break;
		end;
		v16 = v16 + 1;	
	end;
	p3.Parent = nil;
	p4:ReturnInstance(p3);
end;
local u1 = require(l__MessageCreatorModules__4:WaitForChild("Util"));
function GetMessageCreators()
	local v17 = {};
	local v18 = l__MessageCreatorModules__4:GetChildren();
	local v19 = #v18;
	local v20 = 1 - 1;
	while true do
		if v18[v20]:IsA("ModuleScript") then
			if v18[v20].Name ~= "Util" then
				local v21 = require(v18[v20]);
				v17[v21[u1.KEY_MESSAGE_TYPE]] = v21[u1.KEY_CREATOR_FUNCTION];
			end;
		end;
		if 0 <= 1 then
			if v20 < v19 then

			else
				break;
			end;
		elseif v19 < v20 then

		else
			break;
		end;
		v20 = v20 + 1;	
	end;
	return v17;
end;
function v8.WrapIntoMessageObject(p5, p6, p7)
	local v22 = nil;
	if u1.KEY_BASE_MESSAGE then
		v22 = p7[u1.KEY_BASE_MESSAGE];
	end;
	return {
		ID = p6.ID, 
		BaseFrame = p7[u1.KEY_BASE_FRAME], 
		BaseMessage = v22, 
		UpdateTextFunction = p7[u1.KEY_UPDATE_TEXT_FUNC] or function()
			warn("NO MESSAGE RESIZE FUNCTION");
		end, 
		GetHeightFunction = p7[u1.KEY_GET_HEIGHT], 
		FadeInFunction = p7[u1.KEY_FADE_IN], 
		FadeOutFunction = p7[u1.KEY_FADE_OUT], 
		UpdateAnimFunction = p7[u1.KEY_UPDATE_ANIMATION], 
		ObjectPool = p5.ObjectPool, 
		Destroyed = false, 
		Destroy = function(p8)
			ReturnToObjectPoolRecursive(p8.BaseFrame, p8.ObjectPool);
			p8.Destroyed = true;
		end
	};
end;
function v8.CreateMessageLabel(p9, p10, p11)
	local v23 = nil;
	p10.Channel = p11;
	local u2 = nil;
	pcall(function()
		u2 = l__Chat__2:InvokeChatCallback(Enum.ChatCallbackType.OnClientFormattingMessage, p10);
	end);
	p10.ExtraData = p10.ExtraData or {};
	mergeProps(u2, p10.ExtraData);
	local l__MessageType__24 = p10.MessageType;
	if p9.MessageCreators[l__MessageType__24] then
		local v25 = p9.MessageCreators[l__MessageType__24](p10, p11);
		if v25 then
			return p9:WrapIntoMessageObject(p10, v25);
		else
			return;
		end;
	elseif p9.DefaultCreatorType then
		v23 = p9.MessageCreators[p9.DefaultCreatorType](p10, p11);
		if not v23 then
			return;
		end;
	else
		error("No message creator available for message type: " .. l__MessageType__24);
		return;
	end;
	return p9:WrapIntoMessageObject(p10, v23);
end;
local u3 = require(l__Parent__5:WaitForChild("ObjectPool"));
function v1.new()
	local v26 = setmetatable({}, v8);
	v26.ObjectPool = u3.new(50);
	v26.MessageCreators = GetMessageCreators();
	v26.DefaultCreatorType = u1.DEFAULT_MESSAGE_CREATOR;
	u1:RegisterObjectPool(v26.ObjectPool);
	return v26;
end;
function v1.GetStringTextBounds(p12, p13, p14, p15, p16)
	return u1:GetStringTextBounds(p13, p14, p15, p16);
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX939"><Properties><string name="Name">ChannelsBar</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local l__PlayerGui__2 = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui");
local l__Parent__3 = script.Parent;
local v4 = {};
v4.__index = v4;
local u1 = require(game:GetService("Chat"):WaitForChild("ClientChatModules"):WaitForChild("ChatSettings"));
local u2 = require(l__Parent__3:WaitForChild("MessageSender"));
function v4.CreateGuiObjects(p1, p2)
	local v5 = Instance.new("Frame");
	v5.Selectable = false;
	v5.Size = UDim2.new(1, 0, 1, 0);
	v5.BackgroundTransparency = 1;
	v5.Parent = p2;
	local v6 = Instance.new("Frame");
	v6.Selectable = false;
	v6.Name = "ScrollingBase";
	v6.BackgroundTransparency = 1;
	v6.ClipsDescendants = true;
	v6.Size = UDim2.new(1, 0, 1, 0);
	v6.Position = UDim2.new(0, 0, 0, 0);
	v6.Parent = v5;
	local v7 = Instance.new("Frame");
	v7.Selectable = false;
	v7.Name = "ScrollerSizer";
	v7.BackgroundTransparency = 1;
	v7.Size = UDim2.new(1, 0, 1, 0);
	v7.Position = UDim2.new(0, 0, 0, 0);
	v7.Parent = v6;
	local v8 = Instance.new("Frame");
	v8.Selectable = false;
	v8.Name = "ScrollerFrame";
	v8.BackgroundTransparency = 1;
	v8.Size = UDim2.new(1, 0, 1, 0);
	v8.Position = UDim2.new(0, 0, 0, 0);
	v8.Parent = v7;
	local v9 = Instance.new("Frame");
	v9.Selectable = false;
	v9.Size = UDim2.new(1, 0, 1, 0);
	v9.Position = UDim2.new(0, 0, 0, 0);
	v9.ClipsDescendants = true;
	v9.BackgroundTransparency = 1;
	v9.Parent = v5;
	local v10 = Instance.new("Frame");
	v10.Selectable = false;
	v10.Name = "LeaveConfirmationFrame";
	v10.Size = UDim2.new(1, 0, 1, 0);
	v10.Position = UDim2.new(0, 0, 1, 0);
	v10.BackgroundTransparency = 0.6;
	v10.BorderSizePixel = 0;
	v10.BackgroundColor3 = Color3.new(0, 0, 0);
	v10.Parent = v9;
	local v11 = Instance.new("TextButton");
	v11.Selectable = false;
	v11.Size = UDim2.new(1, 0, 1, 0);
	v11.BackgroundTransparency = 1;
	v11.Text = "";
	v11.Parent = v10;
	local v12 = Instance.new("TextButton");
	v12.Selectable = false;
	v12.Size = UDim2.new(0.25, 0, 1, 0);
	v12.BackgroundTransparency = 1;
	v12.Font = u1.DefaultFont;
	v12.TextSize = 18;
	v12.TextStrokeTransparency = 0.75;
	v12.Position = UDim2.new(0, 0, 0, 0);
	v12.TextColor3 = Color3.new(0, 1, 0);
	v12.Text = "Confirm";
	v12.Parent = v10;
	local v13 = v12:Clone();
	v13.Parent = v10;
	v13.Position = UDim2.new(0.75, 0, 0, 0);
	v13.TextColor3 = Color3.new(1, 0, 0);
	v13.Text = "Cancel";
	local v14 = Instance.new("TextLabel");
	v14.Selectable = false;
	v14.Size = UDim2.new(0.5, 0, 1, 0);
	v14.Position = UDim2.new(0.25, 0, 0, 0);
	v14.BackgroundTransparency = 1;
	v14.TextColor3 = Color3.new(1, 1, 1);
	v14.TextStrokeTransparency = 0.75;
	v14.Text = "Leave channel <XX>?";
	v14.Font = u1.DefaultFont;
	v14.TextSize = 18;
	v14.Parent = v10;
	local v15 = Instance.new("StringValue");
	v15.Name = "LeaveTarget";
	v15.Parent = v10;
	local l__Position__3 = v10.Position;
	v12.MouseButton1Click:connect(function()
		u2:SendMessage(string.format("/leave %s", v15.Value), nil);
		v10:TweenPosition(l__Position__3, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true);
	end);
	v13.MouseButton1Click:connect(function()
		v10:TweenPosition(l__Position__3, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true);
	end);
	local v16 = Instance.new("ImageButton", v5);
	v16.Selectable = u1.GamepadNavigationEnabled;
	v16.Name = "PageLeftButton";
	v16.SizeConstraint = Enum.SizeConstraint.RelativeYY;
	v16.Size = UDim2.new(0.7, 0, 0.7, 0);
	v16.BackgroundTransparency = 1;
	v16.Position = UDim2.new(0, 4, 0.15000000000000002, 0);
	v16.Visible = false;
	v16.Image = "rbxassetid://471630199";
	local v17 = Instance.new("ImageLabel", v16);
	v17.Name = "ArrowLabel";
	v17.BackgroundTransparency = 1;
	v17.Size = UDim2.new(0.4, 0, 0.4, 0);
	v17.Image = "rbxassetid://471630112";
	local v18 = Instance.new("Frame", v5);
	v18.Selectable = false;
	v18.BackgroundTransparency = 1;
	v18.Name = "PositionalHelper";
	v18.Size = v16.Size;
	v18.SizeConstraint = v16.SizeConstraint;
	v18.Position = UDim2.new(1, 0, 0.15000000000000002, 0);
	local v19 = v16:Clone();
	v19.Parent = v18;
	v19.Name = "PageRightButton";
	v19.Size = UDim2.new(1, 0, 1, 0);
	v19.SizeConstraint = Enum.SizeConstraint.RelativeXY;
	v19.Position = UDim2.new(-1, -4, 0, 0);
	local v20 = UDim2.new(0.05, 0, 0, 0);
	v19.ArrowLabel.Position = UDim2.new(0.3, 0, 0.3, 0) + v20;
	v16.ArrowLabel.Position = UDim2.new(0.3, 0, 0.3, 0) - v20;
	v16.ArrowLabel.Rotation = 180;
	p1.GuiObject = v5;
	p1.GuiObjects.BaseFrame = v5;
	p1.GuiObjects.ScrollerSizer = v7;
	p1.GuiObjects.ScrollerFrame = v8;
	p1.GuiObjects.PageLeftButton = v16;
	p1.GuiObjects.PageRightButton = v19;
	p1.GuiObjects.LeaveConfirmationFrame = v10;
	p1.GuiObjects.LeaveConfirmationNotice = v14;
	p1.GuiObjects.PageLeftButtonArrow = v16.ArrowLabel;
	p1.GuiObjects.PageRightButtonArrow = v19.ArrowLabel;
	p1:AnimGuiObjects();
	v16.MouseButton1Click:connect(function()
		p1:ScrollChannelsFrame(-1);
	end);
	v19.MouseButton1Click:connect(function()
		p1:ScrollChannelsFrame(1);
	end);
	p1:ScrollChannelsFrame(0);
end;
function v4.UpdateMessagePostedInChannel(p3, p4)
	local v21 = p3:GetChannelTab(p4);
	if v21 then
		v21:UpdateMessagePostedInChannel();
		return;
	end;
	warn("ChannelsTab '" .. p4 .. "' does not exist!");
end;
local u4 = require(l__Parent__3:WaitForChild("ChannelsTab"));
function v4.AddChannelTab(p5, p6)
	if p5:GetChannelTab(p6) then
		error("Channel tab '" .. p6 .. "'already exists!");
	end;
	local v22 = u4.new(p6);
	v22.GuiObject.Parent = p5.GuiObjects.ScrollerFrame;
	p5.ChannelTabs[p6:lower()] = v22;
	p5.NumTabs = p5.NumTabs + 1;
	p5:OrganizeChannelTabs();
	if u1.RightClickToLeaveChannelEnabled then
		v22.NameTag.MouseButton2Click:connect(function()
			p5.LeaveConfirmationNotice.Text = string.format("Leave channel %s?", v22.ChannelName);
			p5.LeaveConfirmationFrame.LeaveTarget.Value = v22.ChannelName;
			p5.LeaveConfirmationFrame:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Quad, 0.2, true);
		end);
	end;
	return v22;
end;
function v4.RemoveChannelTab(p7, p8)
	if not p7:GetChannelTab(p8) then
		error("Channel tab '" .. p8 .. "'does not exist!");
	end;
	local v23 = p8:lower();
	p7.ChannelTabs[v23]:Destroy();
	p7.ChannelTabs[v23] = nil;
	p7.NumTabs = p7.NumTabs - 1;
	p7:OrganizeChannelTabs();
end;
function v4.GetChannelTab(p9, p10)
	return p9.ChannelTabs[p10:lower()];
end;
function v4.OrganizeChannelTabs(p11)
	local v24 = {};
	table.insert(v24, p11:GetChannelTab(u1.GeneralChannelName));
	table.insert(v24, p11:GetChannelTab("System"));
	for v25, v26 in pairs(p11.ChannelTabs) do
		if v26.ChannelName ~= u1.GeneralChannelName and v26.ChannelName ~= "System" then
			table.insert(v24, v26);
		end;
	end;
	for v27, v28 in pairs(v24) do
		v28.GuiObject.Position = UDim2.new(v27 - 1, 0, 0, 0);
	end;
	p11.GuiObjects.ScrollerSizer.Size = UDim2.new(1 / math.max(1, math.min(u1.ChannelsBarFullTabSize, p11.NumTabs)), 0, 1, 0);
	p11:ScrollChannelsFrame(0);
end;
function v4.ResizeChannelTabText(p12, p13)
	for v29, v30 in pairs(p12.ChannelTabs) do
		v30:SetTextSize(p13);
	end;
end;
function v4.ScrollChannelsFrame(p14, p15)
	if p14.ScrollChannelsFrameLock then
		return;
	end;
	p14.ScrollChannelsFrameLock = true;
	local l__ChannelsBarFullTabSize__31 = u1.ChannelsBarFullTabSize;
	local v32 = p14.CurPageNum + p15;
	if v32 < 0 then
		v32 = 0;
	elseif v32 > 0 and p14.NumTabs < v32 + l__ChannelsBarFullTabSize__31 then
		v32 = p14.NumTabs - l__ChannelsBarFullTabSize__31;
	end;
	p14.CurPageNum = v32;
	local v33 = UDim2.new(-p14.CurPageNum, 0, 0, 0);
	p14.GuiObjects.PageLeftButton.Visible = p14.CurPageNum > 0;
	p14.GuiObjects.PageRightButton.Visible = p14.CurPageNum + l__ChannelsBarFullTabSize__31 < p14.NumTabs;
	if p15 == 0 then
		p14.ScrollChannelsFrameLock = false;
		return;
	end;
	p14:WaitUntilParentedCorrectly();
	p14.GuiObjects.ScrollerFrame:TweenPosition(v33, Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, 0.15, true, function()
		p14.ScrollChannelsFrameLock = false;
	end);
end;
local u5 = require(l__Parent__3:WaitForChild("CurveUtil"));
function v4.FadeOutBackground(p16, p17)
	for v34, v35 in pairs(p16.ChannelTabs) do
		v35:FadeOutBackground(p17);
	end;
	p16.AnimParams.Background_TargetTransparency = 1;
	p16.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p17);
end;
function v4.FadeInBackground(p18, p19)
	for v36, v37 in pairs(p18.ChannelTabs) do
		v37:FadeInBackground(p19);
	end;
	p18.AnimParams.Background_TargetTransparency = 0.6;
	p18.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p19);
end;
function v4.FadeOutText(p20, p21)
	for v38, v39 in pairs(p20.ChannelTabs) do
		v39:FadeOutText(p21);
	end;
end;
function v4.FadeInText(p22, p23)
	for v40, v41 in pairs(p22.ChannelTabs) do
		v41:FadeInText(p23);
	end;
end;
function v4.AnimGuiObjects(p24)
	p24.GuiObjects.PageLeftButton.ImageTransparency = p24.AnimParams.Background_CurrentTransparency;
	p24.GuiObjects.PageRightButton.ImageTransparency = p24.AnimParams.Background_CurrentTransparency;
	p24.GuiObjects.PageLeftButtonArrow.ImageTransparency = p24.AnimParams.Background_CurrentTransparency;
	p24.GuiObjects.PageRightButtonArrow.ImageTransparency = p24.AnimParams.Background_CurrentTransparency;
end;
function v4.InitializeAnimParams(p25)
	p25.AnimParams.Background_TargetTransparency = 0.6;
	p25.AnimParams.Background_CurrentTransparency = 0.6;
	p25.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(0);
end;
function v4.Update(p26, p27)
	for v42, v43 in pairs(p26.ChannelTabs) do
		v43:Update(p27);
	end;
	p26.AnimParams.Background_CurrentTransparency = u5:Expt(p26.AnimParams.Background_CurrentTransparency, p26.AnimParams.Background_TargetTransparency, p26.AnimParams.Background_NormalizedExptValue, p27);
	p26:AnimGuiObjects();
end;
function v4.WaitUntilParentedCorrectly(p28)
	while not p28.GuiObject:IsDescendantOf(game:GetService("Players").LocalPlayer) do
		p28.GuiObject.AncestryChanged:wait();	
	end;
end;
function v1.new()
	local v44 = setmetatable({}, v4);
	v44.GuiObject = nil;
	v44.GuiObjects = {};
	v44.ChannelTabs = {};
	v44.NumTabs = 0;
	v44.CurPageNum = 0;
	v44.ScrollChannelsFrameLock = false;
	v44.AnimParams = {};
	v44:InitializeAnimParams();
	u1.SettingsChanged:connect(function(p29, p30)
		if p29 == "ChatChannelsTabTextSize" then
			v44:ResizeChannelTabText(p30);
		end;
	end);
	return v44;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX946"><Properties><string name="Name">ChannelsTab</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = {};
v2.__index = v2;
local u1 = require(game:GetService("Chat"):WaitForChild("ClientChatModules"):WaitForChild("ChatSettings"));
function v2.Destroy(p1)
	p1.GuiObject:Destroy();
end;
function v2.UpdateMessagePostedInChannel(p2, p3)
	if p2.Active and p3 ~= true then
		return;
	end;
	local v3 = p2.UnreadMessageCount + 1;
	p2.UnreadMessageCount = v3;
	local l__NewMessageIcon__4 = p2.NewMessageIcon;
	l__NewMessageIcon__4.Visible = true;
	l__NewMessageIcon__4.TextLabel.Text = v3 < 100 and tostring(v3) or "!";
	local v5 = l__NewMessageIcon__4.Position + UDim2.new(0, 0, -0.1, 0);
	l__NewMessageIcon__4.Position = UDim2.new(0, 0, -0.15, 0);
	l__NewMessageIcon__4:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.15, true);
end;
function v2.SetActive(p4, p5)
	p4.Active = p5;
	p4.UnselectedFrame.Visible = not p5;
	p4.SelectedFrame.Visible = p5;
	if not p5 then
		p4.NameTag.Font = Enum.Font.SourceSans;
		return;
	end;
	p4.UnreadMessageCount = 0;
	p4.NewMessageIcon.Visible = false;
	p4.NameTag.Font = Enum.Font.SourceSansBold;
end;
function v2.SetTextSize(p6, p7)
	p6.NameTag.TextSize = p7;
end;
local u2 = require(script.Parent:WaitForChild("CurveUtil"));
function v2.FadeOutBackground(p8, p9)
	p8.AnimParams.Background_TargetTransparency = 1;
	p8.AnimParams.Background_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p9);
end;
function v2.FadeInBackground(p10, p11)
	p10.AnimParams.Background_TargetTransparency = 0.6;
	p10.AnimParams.Background_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p11);
end;
function v2.FadeOutText(p12, p13)
	p12.AnimParams.Text_TargetTransparency = 1;
	p12.AnimParams.Text_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p13);
	p12.AnimParams.TextStroke_TargetTransparency = 1;
	p12.AnimParams.TextStroke_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p13);
end;
function v2.FadeInText(p14, p15)
	p14.AnimParams.Text_TargetTransparency = 0;
	p14.AnimParams.Text_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p15);
	p14.AnimParams.TextStroke_TargetTransparency = 0.75;
	p14.AnimParams.TextStroke_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(p15);
end;
function v2.AnimGuiObjects(p16)
	p16.UnselectedFrame.BackgroundTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.SelectedFrame.BackgroundImage.BackgroundTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.SelectedFrame.BlueBarLeft.ImageTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.SelectedFrame.BlueBarRight.ImageTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.NameTagNonSelect.TextTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.NameTagNonSelect.TextStrokeTransparency = p16.AnimParams.Background_CurrentTransparency;
	p16.NameTag.TextTransparency = p16.AnimParams.Text_CurrentTransparency;
	p16.NewMessageIcon.ImageTransparency = p16.AnimParams.Text_CurrentTransparency;
	p16.WhiteTextNewMessageNotification.TextTransparency = p16.AnimParams.Text_CurrentTransparency;
	p16.NameTagSelect.TextTransparency = p16.AnimParams.Text_CurrentTransparency;
	p16.NameTag.TextStrokeTransparency = p16.AnimParams.TextStroke_CurrentTransparency;
	p16.WhiteTextNewMessageNotification.TextStrokeTransparency = p16.AnimParams.TextStroke_CurrentTransparency;
	p16.NameTagSelect.TextStrokeTransparency = p16.AnimParams.TextStroke_CurrentTransparency;
end;
function v2.InitializeAnimParams(p17)
	p17.AnimParams.Text_TargetTransparency = 0;
	p17.AnimParams.Text_CurrentTransparency = 0;
	p17.AnimParams.Text_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(0);
	p17.AnimParams.TextStroke_TargetTransparency = 0.75;
	p17.AnimParams.TextStroke_CurrentTransparency = 0.75;
	p17.AnimParams.TextStroke_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(0);
	p17.AnimParams.Background_TargetTransparency = 0.6;
	p17.AnimParams.Background_CurrentTransparency = 0.6;
	p17.AnimParams.Background_NormalizedExptValue = u2:NormalizedDefaultExptValueInSeconds(0);
end;
function v2.Update(p18, p19)
	p18.AnimParams.Background_CurrentTransparency = u2:Expt(p18.AnimParams.Background_CurrentTransparency, p18.AnimParams.Background_TargetTransparency, p18.AnimParams.Background_NormalizedExptValue, p19);
	p18.AnimParams.Text_CurrentTransparency = u2:Expt(p18.AnimParams.Text_CurrentTransparency, p18.AnimParams.Text_TargetTransparency, p18.AnimParams.Text_NormalizedExptValue, p19);
	p18.AnimParams.TextStroke_CurrentTransparency = u2:Expt(p18.AnimParams.TextStroke_CurrentTransparency, p18.AnimParams.TextStroke_TargetTransparency, p18.AnimParams.TextStroke_NormalizedExptValue, p19);
	p18:AnimGuiObjects();
end;
local function u3()
	local v6 = Instance.new("Frame");
	v6.Selectable = false;
	v6.Size = UDim2.new(1, 0, 1, 0);
	v6.BackgroundTransparency = 1;
	local v7 = Instance.new("Frame");
	v7.Selectable = false;
	v7.Name = "BackgroundFrame";
	v7.Size = UDim2.new(1, -2, 1, -2);
	v7.Position = UDim2.new(0, 1, 0, 1);
	v7.BackgroundTransparency = 1;
	v7.Parent = v6;
	local v8 = Instance.new("Frame");
	v8.Selectable = false;
	v8.Name = "UnselectedFrame";
	v8.Size = UDim2.new(1, 0, 1, 0);
	v8.Position = UDim2.new(0, 0, 0, 0);
	v8.BorderSizePixel = 0;
	v8.BackgroundColor3 = u1.ChannelsTabUnselectedColor;
	v8.BackgroundTransparency = 0.6;
	v8.Parent = v7;
	local v9 = Instance.new("Frame");
	v9.Selectable = false;
	v9.Name = "SelectedFrame";
	v9.Size = UDim2.new(1, 0, 1, 0);
	v9.Position = UDim2.new(0, 0, 0, 0);
	v9.BorderSizePixel = 0;
	v9.BackgroundColor3 = u1.ChannelsTabSelectedColor;
	v9.BackgroundTransparency = 1;
	v9.Parent = v7;
	local v10 = Instance.new("ImageLabel");
	v10.Selectable = false;
	v10.Name = "BackgroundImage";
	v10.BackgroundTransparency = 1;
	v10.BorderSizePixel = 0;
	v10.Size = UDim2.new(1, 0, 1, 0);
	v10.Position = UDim2.new(0, 0, 0, 0);
	v10.ScaleType = Enum.ScaleType.Slice;
	v10.Parent = v9;
	v10.BackgroundTransparency = -0.4;
	v10.BackgroundColor3 = Color3.fromRGB(93.6, 100.8, 115.19999999999999);
	local v11 = Instance.new("ImageLabel");
	v11.Selectable = false;
	v11.Size = UDim2.new(0.5, -2, 0, 4);
	v11.BackgroundTransparency = 1;
	v11.ScaleType = Enum.ScaleType.Slice;
	v11.SliceCenter = Rect.new(3, 3, 32, 21);
	v11.Parent = v9;
	local v12 = v11:Clone();
	v12.Parent = v9;
	v11.Position = UDim2.new(0, 2, 1, -4);
	v12.Position = UDim2.new(0.5, 0, 1, -4);
	v11.Image = "rbxasset://textures/ui/Settings/Slider/SelectedBarLeft.png";
	v12.Image = "rbxasset://textures/ui/Settings/Slider/SelectedBarRight.png";
	v11.Name = "BlueBarLeft";
	v12.Name = "BlueBarRight";
	local v13 = Instance.new("TextButton");
	v13.Selectable = u1.GamepadNavigationEnabled;
	v13.Size = UDim2.new(1, 0, 1, 0);
	v13.Position = UDim2.new(0, 0, 0, 0);
	v13.BackgroundTransparency = 1;
	v13.Font = u1.DefaultFont;
	v13.TextSize = u1.ChatChannelsTabTextSize;
	v13.TextColor3 = Color3.new(1, 1, 1);
	v13.TextStrokeTransparency = 0.75;
	v13.Parent = v7;
	local v14 = v13:Clone();
	local v15 = v13:Clone();
	v14.Parent = v8;
	v15.Parent = v9;
	v14.Font = Enum.Font.SourceSans;
	v14.Active = false;
	v15.Active = false;
	local v16 = Instance.new("Frame");
	v16.Selectable = false;
	v16.Size = UDim2.new(0, 18, 0, 18);
	v16.Position = UDim2.new(0.8, -9, 0.5, -9);
	v16.BackgroundTransparency = 1;
	v16.Parent = v7;
	local v17 = Instance.new("ImageLabel");
	v17.Selectable = false;
	v17.Size = UDim2.new(1, 0, 1, 0);
	v17.BackgroundTransparency = 1;
	v17.Image = "rbxasset://textures/ui/Chat/MessageCounter.png";
	v17.Visible = false;
	v17.Parent = v16;
	local v18 = Instance.new("TextLabel");
	v18.Selectable = false;
	v18.BackgroundTransparency = 1;
	v18.Size = UDim2.new(0, 13, 0, 9);
	v18.Position = UDim2.new(0.5, -7, 0.5, -7);
	v18.Font = u1.DefaultFont;
	v18.TextSize = 14;
	v18.TextColor3 = Color3.new(1, 1, 1);
	v18.Text = "";
	v18.Parent = v17;
	return v6, v13, v14, v15, v17, v8, v9;
end;
function v1.new(p20)
	local v19 = setmetatable({}, v2);
	local v20, v21, v22, v23, v24, v25, v26 = u3();
	v19.GuiObject = v20;
	v19.NameTag = v21;
	v19.NameTagNonSelect = v22;
	v19.NameTagSelect = v23;
	v19.NewMessageIcon = v24;
	v19.UnselectedFrame = v25;
	v19.SelectedFrame = v26;
	v19.BlueBarLeft = v26.BlueBarLeft;
	v19.BlueBarRight = v26.BlueBarRight;
	v19.BackgroundImage = v26.BackgroundImage;
	v19.WhiteTextNewMessageNotification = v19.NewMessageIcon.TextLabel;
	v19.ChannelName = p20;
	v19.UnreadMessageCount = 0;
	v19.Active = false;
	v19.GuiObject.Name = "Frame_" .. v19.ChannelName;
	if u1.MaxChannelNameLength < string.len(p20) then
		p20 = string.sub(p20, 1, u1.MaxChannelNameLength - 3) .. "...";
	end;
	v19.NameTag.Text = "";
	v19.NameTagNonSelect.Text = p20;
	v19.NameTagSelect.Text = p20;
	v19.AnimParams = {};
	v19:InitializeAnimParams();
	v19:AnimGuiObjects();
	v19:SetActive(false);
	return v19;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX953"><Properties><string name="Name">CommandProcessor</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = {};
v2.__index = v2;
local l__ClientChatModules__3 = game:GetService("Chat"):WaitForChild("ClientChatModules");
local l__CommandModules__4 = l__ClientChatModules__3:WaitForChild("CommandModules");
local l__Parent__5 = script.Parent;
local u1 = require(l__CommandModules__4:WaitForChild("Util"));
function v2.SetupCommandProcessors(p1)
	local v6 = l__CommandModules__4:GetChildren();
	for v7 = 1, #v6 do
		if v6[v7]:IsA("ModuleScript") and v6[v7].Name ~= "Util" then
			local v8 = nil;
			local v9 = require(v6[v7]);
			local v10 = v9[u1.KEY_COMMAND_PROCESSOR_TYPE];
			v8 = v9[u1.KEY_PROCESSOR_FUNCTION];
			if v10 == u1.IN_PROGRESS_MESSAGE_PROCESSOR then
				table.insert(p1.InProgressMessageProcessors, v8);
			elseif v10 == u1.COMPLETED_MESSAGE_PROCESSOR then
				table.insert(p1.CompletedMessageProcessors, v8);
			end;
		end;
	end;
end;
local u2 = require(l__ClientChatModules__3:WaitForChild("ChatSettings"));
function v2.ProcessCompletedChatMessage(p2, p3, p4)
	for v11 = 1, #p2.CompletedMessageProcessors do
		if p2.CompletedMessageProcessors[v11](p3, p4, u2) then
			return true;
		end;
	end;
	return false;
end;
function v2.ProcessInProgressChatMessage(p5, p6, p7, p8)
	for v12 = 1, #p5.InProgressMessageProcessors do
		local v13 = p5.InProgressMessageProcessors[v12](p6, p7, p8, u2);
		if v13 then
			return v13;
		end;
	end;
	return nil;
end;
function v1.new()
	local v14 = setmetatable({}, v2);
	v14.CompletedMessageProcessors = {};
	v14.InProgressMessageProcessors = {};
	v14:SetupCommandProcessors();
	return v14;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX960"><Properties><string name="Name">CurveUtil</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local u1 = {
	Expt = function(p1, p2, p3, p4, p5)
		if math.abs(p3 - p2) < 0.01 then
			return p3;
		end;
		return p2 + (p3 - p2) * u1:Expty(p2, p3, p4, p5);
	end, 
	Expty = function(p6, p7, p8, p9, p10)
		return 1 - math.exp(-(-math.log(1 - p9)) * p10);
	end, 
	Sign = function(p11, p12)
		if p12 > 0 then
			return 1;
		end;
		if p12 < 0 then
			return -1;
		end;
		return 0;
	end, 
	BezierValForT = function(p13, p14, p15, p16, p17, p18)
		return (1 - p18) * (1 - p18) * (1 - p18) * p14 + 3 * p18 * (1 - p18) * (1 - p18) * p15 + 3 * p18 * p18 * (1 - p18) * p16 + p18 * p18 * p18 * p17;
	end, 
	_BezierPt2ForT = {
		x = 0, 
		y = 0
	}, 
	BezierPt2ForT = function(p19, p20, p21, p22, p23, p24, p25, p26, p27, p28)
		u1._BezierPt2ForT.x = u1:BezierValForT(p20, p22, p24, p26, p28);
		u1._BezierPt2ForT.y = u1:BezierValForT(p21, p23, p25, p27, p28);
		return u1._BezierPt2ForT;
	end, 
	YForPointOf2PtLine = function(p29, p30, p31, p32)
		local v1 = (p30.y - p31.y) / (p30.x - p31.x);
		return v1 * p32 + (p30.y - v1 * p30.x);
	end, 
	DeltaTimeToTimescale = function(p33, p34)
		return p34 / 0.016666666666666666;
	end, 
	SecondsToTick = function(p35, p36)
		return 0.016666666666666666 / p36;
	end, 
	ExptValueInSeconds = function(p37, p38, p39, p40)
		return 1 - math.pow(p38 / p39, 1 / (60 * p40));
	end, 
	NormalizedDefaultExptValueInSeconds = function(p41, p42)
		return p41:ExptValueInSeconds(0.01, 1, p42);
	end
};
return u1;
]]></ProtectedString></Properties></Item></Item></Item><Item class="LocalScript" referent="RBX969"><Properties><string name="Name">BubbleChat</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local l__ReplicatedStorage__2 = game:GetService("ReplicatedStorage");
local l__Chat__3 = game:GetService("Chat");
local l__TextService__4 = game:GetService("TextService");
local v5 = l__Players__1.LocalPlayer;
while v5 == nil do
	l__Players__1.ChildAdded:wait();
	v5 = l__Players__1.LocalPlayer;
end;
local l__PlayerGui__6 = v5:WaitForChild("PlayerGui");
local v7, v8 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserShouldLocalizeGameChatBubble");
end);
local v9, v10 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserFixBubbleChatText");
end);
local v11, v12 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserRoactBubbleChatBeta");
end);
local v13, v14 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserPreventOldBubbleChatOverlap");
end);
local function v15(p1)
	return utf8.len(utf8.nfcnormalize(p1));
end;
local v16 = 128 - v15("...") - 1;
local v17 = Instance.new("ScreenGui");
v17.Name = "BubbleChat";
v17.ResetOnSpawn = false;
v17.Parent = l__PlayerGui__6;
local function u1()
	local v18 = {
		data = {}
	};
	local v19 = Instance.new("BindableEvent");
	v18.Emptied = v19.Event;
	function v18.Size(p2)
		return #v18.data;
	end;
	function v18.Empty(p3)
		return v18:Size() <= 0;
	end;
	function v18.PopFront(p4)
		table.remove(v18.data, 1);
		if v18:Empty() then
			v19:Fire();
		end;
	end;
	function v18.Front(p5)
		return v18.data[1];
	end;
	function v18.Get(p6, p7)
		return v18.data[p7];
	end;
	function v18.PushBack(p8, p9)
		table.insert(v18.data, p9);
	end;
	function v18.GetData(p10)
		return v18.data;
	end;
	return v18;
end;
local function u2()
	return {
		Fifo = u1(), 
		BillboardGui = nil
	};
end;
local function u3(p11, p12, p13)
	return p12 + (p13 - p12) * math.min(v15(p11) / 75, 1);
end;
local function u4(p14, p15, p16)
	local v20 = {
		ComputeBubbleLifetime = function(p17, p18, p19)
			if p19 then
				return u3(p18, 8, 15);
			end;
			return u3(p18, 12, 20);
		end, 
		Origin = nil, 
		RenderBubble = nil, 
		Message = p14
	};
	v20.BubbleDieDelay = v20:ComputeBubbleLifetime(p14, p16);
	v20.BubbleColor = p15;
	v20.IsLocalPlayer = p16;
	return v20;
end;
local u5 = {
	WHITE = "dub", 
	BLUE = "blu", 
	GREEN = "gre", 
	RED = "red"
};
function createChatBubbleMain(p20, p21)
	local v21 = Instance.new("ImageLabel");
	v21.Name = "ChatBubble";
	v21.ScaleType = Enum.ScaleType.Slice;
	v21.SliceCenter = p21;
	v21.Image = "rbxasset://textures/" .. tostring(p20) .. ".png";
	v21.BackgroundTransparency = 1;
	v21.BorderSizePixel = 0;
	v21.Size = UDim2.new(1, 0, 1, 0);
	v21.Position = UDim2.new(0, 0, 0, 0);
	return v21;
end;
function createChatBubbleTail(p22, p23)
	local v22 = Instance.new("ImageLabel");
	v22.Name = "ChatBubbleTail";
	v22.Image = "rbxasset://textures/ui/dialog_tail.png";
	v22.BackgroundTransparency = 1;
	v22.BorderSizePixel = 0;
	v22.Position = p22;
	v22.Size = p23;
	return v22;
end;
function createChatBubbleWithTail(p24, p25, p26, p27)
	local v23 = createChatBubbleMain(p24, p27);
	createChatBubbleTail(p25, p26).Parent = v23;
	return v23;
end;
function createScaledChatBubbleWithTail(p28, p29, p30, p31)
	local v24 = createChatBubbleMain(p28, p31);
	local v25 = Instance.new("Frame");
	v25.Name = "ChatBubbleTailFrame";
	v25.BackgroundTransparency = 1;
	v25.SizeConstraint = Enum.SizeConstraint.RelativeXX;
	v25.Position = UDim2.new(0.5, 0, 1, 0);
	v25.Size = UDim2.new(p29, 0, p29, 0);
	v25.Parent = v24;
	createChatBubbleTail(p30, UDim2.new(1, 0, 0.5, 0)).Parent = v25;
	return v24;
end;
function createChatImposter(p32, p33, p34)
	local v26 = Instance.new("ImageLabel");
	v26.Name = "DialogPlaceholder";
	v26.Image = "rbxasset://textures/" .. tostring(p32) .. ".png";
	v26.BackgroundTransparency = 1;
	v26.BorderSizePixel = 0;
	v26.Position = UDim2.new(0, 0, -1.25, 0);
	v26.Size = UDim2.new(1, 0, 1, 0);
	local v27 = Instance.new("ImageLabel");
	v27.Name = "DotDotDot";
	v27.Image = "rbxasset://textures/" .. tostring(p33) .. ".png";
	v27.BackgroundTransparency = 1;
	v27.BorderSizePixel = 0;
	v27.Position = UDim2.new(0.001, 0, p34, 0);
	v27.Size = UDim2.new(1, 0, 0.7, 0);
	v27.Parent = v26;
	return v26;
end;
local u6 = {
	ChatBubble = {}, 
	ChatBubbleWithTail = {}, 
	ScalingChatBubbleWithTail = {}, 
	CharacterSortedMsg = (function()
		local v28 = {
			data = {}
		};
		local u7 = 0;
		function v28.Size(p35)
			return u7;
		end;
		function v28.Erase(p36, p37)
			if v28.data[p37] then
				u7 = u7 - 1;
			end;
			v28.data[p37] = nil;
		end;
		function v28.Set(p38, p39, p40)
			v28.data[p39] = p40;
			if p40 then
				u7 = u7 + 1;
			end;
		end;
		function v28.Get(p41, p42)
			if not p42 then
				return;
			end;
			if not v28.data[p42] then
				v28.data[p42] = u2();
				local u8 = nil;
				u8 = v28.data[p42].Fifo.Emptied:connect(function()
					u8:disconnect();
					v28:Erase(p42);
				end);
			end;
			return v28.data[p42];
		end;
		function v28.GetData(p43)
			return v28.data;
		end;
		return v28;
	end)()
};
local function v29(p44, p45, p46, p47, p48)
	u6.ChatBubble[p44] = createChatBubbleMain(p45, p48);
	if p47 then
		local v30 = -1;
	else
		v30 = 0;
	end;
	u6.ChatBubbleWithTail[p44] = createChatBubbleWithTail(p45, UDim2.new(0.5, -14, 1, v30), UDim2.new(0, 30, 0, 14), p48);
	if p47 then
		local v31 = -1;
	else
		v31 = 0;
	end;
	u6.ScalingChatBubbleWithTail[p44] = createScaledChatBubbleWithTail(p45, 0.5, UDim2.new(-0.5, 0, 0, v31), p48);
end;
v29(u5.WHITE, "ui/dialog_white", "ui/chatBubble_white_notify_bkg", false, Rect.new(5, 5, 15, 15));
v29(u5.BLUE, "ui/dialog_blue", "ui/chatBubble_blue_notify_bkg", true, Rect.new(7, 7, 33, 33));
v29(u5.RED, "ui/dialog_red", "ui/chatBubble_red_notify_bkg", true, Rect.new(7, 7, 33, 33));
v29(u5.GREEN, "ui/dialog_green", "ui/chatBubble_green_notify_bkg", true, Rect.new(7, 7, 33, 33));
function u6.SanitizeChatLine(p49, p50)
	if not (v16 < v15(p50)) then
		return p50;
	end;
	return string.sub(p50, 1, utf8.offset(p50, v16 + v15("...") + 1) - 1);
end;
local function u9(p51)
	local v32 = Instance.new("BillboardGui");
	v32.Adornee = p51;
	v32.Size = UDim2.new(0, 400, 0, 250);
	v32.StudsOffset = Vector3.new(0, 1.5, 2);
	v32.Parent = v17;
	local v33 = Instance.new("Frame");
	v33.Name = "BillboardFrame";
	v33.Size = UDim2.new(1, 0, 1, 0);
	v33.Position = UDim2.new(0, 0, -0.5, 0);
	v33.BackgroundTransparency = 1;
	v33.Parent = v32;
	local u10 = nil;
	u10 = v33.ChildRemoved:connect(function()
		if #v33:GetChildren() <= 1 then
			u10:disconnect();
			v32:Destroy();
		end;
	end);
	u6:CreateSmallTalkBubble(u5.WHITE).Parent = v33;
	return v32;
end;
function u6.CreateBillboardGuiHelper(p52, p53, p54)
	if p53 and not u6.CharacterSortedMsg:Get(p53).BillboardGui then
		if not p54 and p53:IsA("BasePart") then
			u6.CharacterSortedMsg:Get(p53).BillboardGui = u9(p53);
			return;
		end;
		if p53:IsA("Model") then
			local l__Head__34 = p53:FindFirstChild("Head");
			if l__Head__34 and l__Head__34:IsA("BasePart") then
				u6.CharacterSortedMsg:Get(p53).BillboardGui = u9(l__Head__34);
			end;
		end;
	end;
end;
local function u11(p55)
	if not p55 or not l__Players__1.LocalPlayer.Character then
		return;
	end;
	return p55:IsDescendantOf(l__Players__1.LocalPlayer.Character);
end;
function u6.SetBillboardLODNear(p56, p57)
	local v35 = u11(p57.Adornee);
	p57.Size = UDim2.new(0, 400, 0, 250);
	if v35 then
		local v36 = 1.5;
	else
		v36 = 2.5;
	end;
	if v35 then
		local v37 = 2;
	else
		v37 = 0.1;
	end;
	p57.StudsOffset = Vector3.new(0, v36, v37);
	p57.Enabled = true;
	local v38 = p57.BillboardFrame:GetChildren();
	for v39 = 1, #v38 do
		v38[v39].Visible = true;
	end;
	p57.BillboardFrame.SmallTalkBubble.Visible = false;
end;
function u6.SetBillboardLODDistant(p58, p59)
	p59.Size = UDim2.new(4, 0, 3, 0);
	if u11(p59.Adornee) then
		local v40 = 2;
	else
		v40 = 0.1;
	end;
	p59.StudsOffset = Vector3.new(0, 3, v40);
	p59.Enabled = true;
	local v41 = p59.BillboardFrame:GetChildren();
	for v42 = 1, #v41 do
		v41[v42].Visible = false;
	end;
	p59.BillboardFrame.SmallTalkBubble.Visible = true;
end;
function u6.SetBillboardLODVeryFar(p60, p61)
	p61.Enabled = false;
end;
local function u12(p62)
	if not p62 then
		return 100000;
	end;
	return (p62.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude;
end;
function u6.SetBillboardGuiLOD(p63, p64, p65)
	if not p65 then
		return;
	end;
	if p65:IsA("Model") then
		local l__Head__43 = p65:FindFirstChild("Head");
		if not l__Head__43 then
			p65 = p65.PrimaryPart;
		else
			p65 = l__Head__43;
		end;
	end;
	local v44 = u12(p65);
	if v44 < 65 then
		u6:SetBillboardLODNear(p64);
		return;
	end;
	if v44 >= 65 and v44 < 100 then
		u6:SetBillboardLODDistant(p64);
		return;
	end;
	u6:SetBillboardLODVeryFar(p64);
end;
function u6.CameraCFrameChanged(p66)
	for v45, v46 in pairs(u6.CharacterSortedMsg:GetData()) do
		local l__BillboardGui__47 = v46.BillboardGui;
		if l__BillboardGui__47 then
			u6:SetBillboardGuiLOD(l__BillboardGui__47, v45);
		end;
	end;
end;
local u13 = v9 or v10;
local l__Enum_Font_SourceSans__14 = Enum.Font.SourceSans;
local l__Enum_FontSize_Size24__15 = Enum.FontSize.Size24;
function u6.CreateBubbleText(p67, p68, p69)
	local v48 = Instance.new("TextLabel");
	v48.Name = "BubbleText";
	v48.BackgroundTransparency = 1;
	if u13 then
		v48.Size = UDim2.fromScale(1, 1);
	else
		v48.Position = UDim2.new(0, 15, 0, 0);
		v48.Size = UDim2.new(1, -30, 1, 0);
	end;
	v48.Font = l__Enum_Font_SourceSans__14;
	v48.ClipsDescendants = true;
	v48.TextWrapped = true;
	v48.FontSize = l__Enum_FontSize_Size24__15;
	v48.Text = p68;
	v48.Visible = false;
	v48.AutoLocalize = p69;
	if u13 then
		local v49 = Instance.new("UIPadding");
		v49.PaddingTop = UDim.new(0, 12);
		v49.PaddingRight = UDim.new(0, 12);
		v49.PaddingBottom = UDim.new(0, 12);
		v49.PaddingLeft = UDim.new(0, 12);
		v49.Parent = v48;
	end;
	return v48;
end;
function u6.CreateSmallTalkBubble(p70, p71)
	local v50 = u6.ScalingChatBubbleWithTail[p71]:Clone();
	v50.Name = "SmallTalkBubble";
	v50.AnchorPoint = Vector2.new(0, 0.5);
	v50.Position = UDim2.new(0, 0, 0.5, 0);
	v50.Visible = false;
	local v51 = u6:CreateBubbleText("...");
	v51.TextScaled = true;
	v51.TextWrapped = false;
	v51.Visible = true;
	v51.Parent = v50;
	return v50;
end;
function u6.UpdateChatLinesForOrigin(p72, p73, p74)
	local l__Fifo__52 = u6.CharacterSortedMsg:Get(p73).Fifo;
	local v53 = l__Fifo__52:Size();
	local v54 = l__Fifo__52:GetData();
	if #v54 <= 1 then
		return;
	end;
	for v55 = #v54 - 1, 1, -1 do
		local l__RenderBubble__56 = v54[v55].RenderBubble;
		if not l__RenderBubble__56 then
			return;
		end;
		if v53 - v55 + 1 > 1 then
			local l__ChatBubbleTail__57 = l__RenderBubble__56:FindFirstChild("ChatBubbleTail");
			if l__ChatBubbleTail__57 then
				l__ChatBubbleTail__57:Destroy();
			end;
			local l__BubbleText__58 = l__RenderBubble__56:FindFirstChild("BubbleText");
			if l__BubbleText__58 then
				l__BubbleText__58.TextTransparency = 0.5;
			end;
		end;
		l__RenderBubble__56:TweenPosition(UDim2.new(l__RenderBubble__56.Position.X.Scale, l__RenderBubble__56.Position.X.Offset, 1, p74 - l__RenderBubble__56.Size.Y.Offset - 14), Enum.EasingDirection.Out, Enum.EasingStyle.Bounce, 0.1, true);
		p74 = p74 - l__RenderBubble__56.Size.Y.Offset - 14;
	end;
end;
function u6.DestroyBubble(p75, p76, p77)
	if not p76 then
		return;
	end;
	if p76:Empty() then
		return;
	end;
	local l__RenderBubble__59 = p76:Front().RenderBubble;
	if l__RenderBubble__59 then
		local u16 = l__RenderBubble__59;
		spawn(function()
			while p76:Front().RenderBubble ~= p77 do
				wait();			
			end;
			u16 = p76:Front().RenderBubble;
			local l__BubbleText__60 = u16:FindFirstChild("BubbleText");
			local l__ChatBubbleTail__61 = u16:FindFirstChild("ChatBubbleTail");
			while u16 and u16.ImageTransparency < 1 do
				local v62 = wait();
				if u16 then
					local v63 = v62 * 1.5;
					u16.ImageTransparency = u16.ImageTransparency + v63;
					if l__BubbleText__60 then
						l__BubbleText__60.TextTransparency = l__BubbleText__60.TextTransparency + v63;
					end;
					if l__ChatBubbleTail__61 then
						l__ChatBubbleTail__61.ImageTransparency = l__ChatBubbleTail__61.ImageTransparency + v63;
					end;
				end;			
			end;
			if u16 then
				u16:Destroy();
				p76:PopFront();
			end;
		end);
		return;
	end;
	p76:PopFront();
end;
function u6.CreateChatLineRender(p78, p79, p80, p81, p82, p83)
	if not p79 then
		return;
	end;
	if not u6.CharacterSortedMsg:Get(p79).BillboardGui then
		u6:CreateBillboardGuiHelper(p79, p81);
	end;
	local l__BillboardGui__64 = u6.CharacterSortedMsg:Get(p79).BillboardGui;
	if l__BillboardGui__64 then
		local v65 = nil;
		local v66 = u6.ChatBubbleWithTail[p80.BubbleColor]:Clone();
		v66.Visible = false;
		local v67 = u6:CreateBubbleText(p80.Message, p83);
		v67.Parent = v66;
		v66.Parent = l__BillboardGui__64.BillboardFrame;
		p80.RenderBubble = v66;
		local v68 = l__TextService__4:GetTextSize(v67.Text, 24, l__Enum_Font_SourceSans__14, Vector2.new(400, 250));
		v65 = v68.Y / 24;
		if u13 then
			local v69 = math.ceil(v68.X + 24);
			local v70 = v65 * 34;
			v66.Size = UDim2.fromOffset(0, 0);
			v66.Position = UDim2.fromScale(0.5, 1);
			v66:TweenSizeAndPosition(UDim2.fromOffset(v69, v70), UDim2.new(0.5, -v69 / 2, 1, -v70), Enum.EasingDirection.Out, Enum.EasingStyle.Elastic, 0.1, true, function()
				v67.Visible = true;
			end);
			u6:SetBillboardGuiLOD(l__BillboardGui__64, p80.Origin);
			u6:UpdateChatLinesForOrigin(p80.Origin, -v70);
		else
			local v71 = math.max((v68.X + 30) / 400, 0.1);
			v66.Size = UDim2.new(0, 0, 0, 0);
			v66.Position = UDim2.new(0.5, 0, 1, 0);
			local v72 = v65 * 34;
			v66:TweenSizeAndPosition(UDim2.new(v71, 0, 0, v72), UDim2.new((1 - v71) / 2, 0, 1, -v72), Enum.EasingDirection.Out, Enum.EasingStyle.Elastic, 0.1, true, function()
				v67.Visible = true;
			end);
			u6:SetBillboardGuiLOD(l__BillboardGui__64, p80.Origin);
			u6:UpdateChatLinesForOrigin(p80.Origin, -v72);
		end;
		delay(p80.BubbleDieDelay, function()
			u6:DestroyBubble(p82, v66);
		end);
	end;
end;
local function u17(p84, p85, p86)
	local v73 = u4(p85, u5.WHITE, p86);
	if p84 then
		v73.User = p84.Name;
		v73.Origin = p84.Character;
	end;
	return v73;
end;
function u6.OnPlayerChatMessage(p87, p88, p89, p90)
	if not u6:BubbleChatEnabled() then
		return;
	end;
	local l__LocalPlayer__74 = l__Players__1.LocalPlayer;
	local v75 = false;
	if l__LocalPlayer__74 ~= nil then
		v75 = p88 ~= l__LocalPlayer__74;
	end;
	local v76 = u17(p88, u6:SanitizeChatLine(p89), not v75);
	if p88 and v76.Origin then
		local l__Fifo__77 = u6.CharacterSortedMsg:Get(v76.Origin).Fifo;
		l__Fifo__77:PushBack(v76);
		u6:CreateChatLineRender(p88.Character, v76, true, l__Fifo__77, false);
	end;
end;
local u18 = v11 or v12;
local u19 = v13 or v14;
local function u20(p91, p92, p93, p94)
	local v78 = u4(p92, p94, p93);
	v78.Origin = p91;
	return v78;
end;
local u21 = v7 or v8;
function u6.OnGameChatMessage(p95, p96, p97, p98)
	if u18 or u19 and l__Chat__3.BubbleChatEnabled then
		return;
	end;
	local l__LocalPlayer__79 = l__Players__1.LocalPlayer;
	local v80 = false;
	if l__LocalPlayer__79 ~= nil then
		v80 = l__LocalPlayer__79.Character ~= p96;
	end;
	local v81 = u5.WHITE;
	if p98 == Enum.ChatColor.Blue then
		v81 = u5.BLUE;
	elseif p98 == Enum.ChatColor.Green then
		v81 = u5.GREEN;
	elseif p98 == Enum.ChatColor.Red then
		v81 = u5.RED;
	end;
	local v82 = u20(p96, u6:SanitizeChatLine(p97), not v80, v81);
	u6.CharacterSortedMsg:Get(v82.Origin).Fifo:PushBack(v82);
	if u21 then
		u6:CreateChatLineRender(p96, v82, false, u6.CharacterSortedMsg:Get(v82.Origin).Fifo, true);
		return;
	end;
	u6:CreateChatLineRender(p96, v82, false, u6.CharacterSortedMsg:Get(v82.Origin).Fifo, false);
end;
function u6.BubbleChatEnabled(p99)
	if u18 or u19 and l__Chat__3.BubbleChatEnabled then
		return false;
	end;
	local l__ClientChatModules__83 = l__Chat__3:FindFirstChild("ClientChatModules");
	if l__ClientChatModules__83 then
		local l__ChatSettings__84 = l__ClientChatModules__83:FindFirstChild("ChatSettings");
		if l__ChatSettings__84 then
			local v85 = require(l__ChatSettings__84);
			if v85.BubbleChatEnabled ~= nil then
				return v85.BubbleChatEnabled;
			end;
		end;
	end;
	return l__Players__1.BubbleChat;
end;
function u6.ShowOwnFilteredMessage(p100)
	local v86 = nil;
	local l__ClientChatModules__87 = l__Chat__3:FindFirstChild("ClientChatModules");
	if l__ClientChatModules__87 then
		v86 = l__ClientChatModules__87:FindFirstChild("ChatSettings");
		if not v86 then
			return false;
		end;
	else
		return false;
	end;
	return require(v86).ShowUserOwnFilteredMessage;
end;
function findPlayer(p101)
	local v88, v89, v90 = pairs(l__Players__1:GetPlayers());
	while true do
		local v91, v92 = v88(v89, v90);
		if v91 then

		else
			break;
		end;
		v90 = v91;
		if v92.Name == p101 then
			return v92;
		end;	
	end;
end;
l__Chat__3.Chatted:connect(function(p102, p103, p104)
	u6:OnGameChatMessage(p102, p103, p104);
end);
local v93 = nil;
if game.Workspace.CurrentCamera then
	v93 = game.Workspace.CurrentCamera:GetPropertyChangedSignal("CFrame"):connect(function(p105)
		u6:CameraCFrameChanged();
	end);
end;
local u22 = v93;
game.Workspace.Changed:connect(function(p106)
	if p106 == "CurrentCamera" then
		if u22 then
			u22:disconnect();
		end;
		if game.Workspace.CurrentCamera then
			u22 = game.Workspace.CurrentCamera:GetPropertyChangedSignal("CFrame"):connect(function(p107)
				u6:CameraCFrameChanged();
			end);
		end;
	end;
end);
local u23 = nil;
function getAllowedMessageTypes()
	if u23 then
		return u23;
	end;
	local l__ClientChatModules__94 = l__Chat__3:FindFirstChild("ClientChatModules");
	if l__ClientChatModules__94 then

	else
		return { "Message", "Whisper" };
	end;
	local l__ChatSettings__95 = l__ClientChatModules__94:FindFirstChild("ChatSettings");
	if l__ChatSettings__95 then
		local v96 = require(l__ChatSettings__95);
		if v96.BubbleChatMessageTypes then
			u23 = v96.BubbleChatMessageTypes;
			return u23;
		end;
	end;
	local l__ChatConstants__97 = l__ClientChatModules__94:FindFirstChild("ChatConstants");
	if l__ChatConstants__97 then
		local v98 = require(l__ChatConstants__97);
		u23 = { v98.MessageTypeDefault, v98.MessageTypeWhisper };
	end;
	return u23;
end;
function checkAllowedMessageType(p108)
	local v99 = getAllowedMessageTypes();
	local v100 = #v99;
	local v101 = 1 - 1;
	while true do
		if v99[v101] == p108.MessageType then
			return true;
		end;
		if 0 <= 1 then
			if v101 < v100 then

			else
				break;
			end;
		elseif v100 < v101 then

		else
			break;
		end;
		v101 = v101 + 1;	
	end;
	return false;
end;
local v102 = l__ReplicatedStorage__2:WaitForChild("DefaultChatSystemChatEvents");
local l__OnMessageDoneFiltering__103 = v102:WaitForChild("OnMessageDoneFiltering");
v102:WaitForChild("OnNewMessage").OnClientEvent:connect(function(p109, p110)
	if not checkAllowedMessageType(p109) then
		return;
	end;
	local v104 = findPlayer(p109.FromSpeaker);
	if not v104 then
		return;
	end;
	if (not p109.IsFiltered or p109.FromSpeaker == v5.Name) and (p109.FromSpeaker ~= v5.Name or u6:ShowOwnFilteredMessage()) then
		return;
	end;
	u6:OnPlayerChatMessage(v104, p109.Message, nil);
end);
l__OnMessageDoneFiltering__103.OnClientEvent:connect(function(p111, p112)
	if not checkAllowedMessageType(p111) then
		return;
	end;
	local v105 = findPlayer(p111.FromSpeaker);
	if not v105 then
		return;
	end;
	if p111.FromSpeaker == v5.Name and not u6:ShowOwnFilteredMessage() then
		return;
	end;
	u6:OnPlayerChatMessage(v105, p111.Message, nil);
end);
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX977"><Properties><string name="Name">PlayerModule</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
function v1.new()
	local v2 = setmetatable({}, v1);
	v2.cameras = require(script:WaitForChild("CameraModule"));
	v2.controls = require(script:WaitForChild("ControlModule"));
	return v2;
end;
function v1.GetCameras(p1)
	return p1.cameras;
end;
function v1.GetControls(p2)
	return p2.controls;
end;
function v1.GetClickToMoveController(p3)
	return p3.controls:GetClickToMoveController();
end;
return v1.new();
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX983"><Properties><string name="Name">ControlModule</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local l__Players__2 = game:GetService("Players");
local l__RunService__3 = game:GetService("RunService");
local l__UserInputService__4 = game:GetService("UserInputService");
local l__Workspace__5 = game:GetService("Workspace");
local l__UserGameSettings__6 = UserSettings():GetService("UserGameSettings");
local v7 = require(script:WaitForChild("Keyboard"));
local v8 = require(script:WaitForChild("Gamepad"));
local v9 = require(script:WaitForChild("DynamicThumbstick"));
local v10, v11 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserMakeThumbstickDynamic");
end);
local v12 = (v10 or v11) and v9 or require(script:WaitForChild("TouchThumbstick"));
local v13 = require(script:WaitForChild("ClickToMoveController"));
local u1 = require(script:WaitForChild("VehicleController"));
local l__Value__2 = Enum.ContextActionPriority.Default.Value;
function v1.new()
	local v14 = setmetatable({}, v1);
	v14.controllers = {};
	v14.activeControlModule = nil;
	v14.activeController = nil;
	v14.touchJumpController = nil;
	v14.moveFunction = l__Players__2.LocalPlayer.Move;
	v14.humanoid = nil;
	v14.lastInputType = Enum.UserInputType.None;
	v14.humanoidSeatedConn = nil;
	v14.vehicleController = nil;
	v14.touchControlFrame = nil;
	v14.vehicleController = u1.new(l__Value__2);
	l__Players__2.LocalPlayer.CharacterAdded:Connect(function(p1)
		v14:OnCharacterAdded(p1);
	end);
	l__Players__2.LocalPlayer.CharacterRemoving:Connect(function(p2)
		v14:OnCharacterRemoving(p2);
	end);
	if l__Players__2.LocalPlayer.Character then
		v14:OnCharacterAdded(l__Players__2.LocalPlayer.Character);
	end;
	l__RunService__3:BindToRenderStep("ControlScriptRenderstep", Enum.RenderPriority.Input.Value, function(p3)
		v14:OnRenderStepped(p3);
	end);
	l__UserInputService__4.LastInputTypeChanged:Connect(function(p4)
		v14:OnLastInputTypeChanged(p4);
	end);
	l__UserGameSettings__6:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
		v14:OnTouchMovementModeChange();
	end);
	l__Players__2.LocalPlayer:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
		v14:OnTouchMovementModeChange();
	end);
	l__UserGameSettings__6:GetPropertyChangedSignal("ComputerMovementMode"):Connect(function()
		v14:OnComputerMovementModeChange();
	end);
	l__Players__2.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function()
		v14:OnComputerMovementModeChange();
	end);
	v14.playerGui = nil;
	v14.touchGui = nil;
	v14.playerGuiAddedConn = nil;
	l__UserInputService__4:GetPropertyChangedSignal("ModalEnabled"):Connect(function()
		v14:UpdateTouchGuiVisibility();
	end);
	if not l__UserInputService__4.TouchEnabled then
		v14:OnLastInputTypeChanged(l__UserInputService__4:GetLastInputType());
		return v14;
	end;
	v14.playerGui = l__Players__2.LocalPlayer:FindFirstChildOfClass("PlayerGui");
	if not v14.playerGui then
		v14.playerGuiAddedConn = l__Players__2.LocalPlayer.ChildAdded:Connect(function(p5)
			if p5:IsA("PlayerGui") then
				v14.playerGui = p5;
				v14:CreateTouchGuiContainer();
				v14.playerGuiAddedConn:Disconnect();
				v14.playerGuiAddedConn = nil;
				v14:OnLastInputTypeChanged(l__UserInputService__4:GetLastInputType());
			end;
		end);
		return v14;
	end;
	v14:CreateTouchGuiContainer();
	v14:OnLastInputTypeChanged(l__UserInputService__4:GetLastInputType());
	return v14;
end;
function v1.GetMoveVector(p6)
	if not p6.activeController then
		return Vector3.new(0, 0, 0);
	end;
	return p6.activeController:GetMoveVector();
end;
function v1.GetActiveController(p7)
	return p7.activeController;
end;
function v1.EnableActiveControlModule(p8)
	if p8.activeControlModule == v13 then
		p8.activeController:Enable(true, l__Players__2.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.UserChoice, p8.touchJumpController);
		return;
	end;
	if not p8.touchControlFrame then
		p8.activeController:Enable(true);
		return;
	end;
	p8.activeController:Enable(true, p8.touchControlFrame);
end;
function v1.Enable(p9, p10)
	if not p9.activeController then
		return;
	end;
	if p10 == nil then
		p10 = true;
	end;
	if p10 then
		p9:EnableActiveControlModule();
		return;
	end;
	p9:Disable();
end;
function v1.Disable(p11)
	if p11.activeController then
		p11.activeController:Enable(false);
		if p11.moveFunction then
			p11.moveFunction(l__Players__2.LocalPlayer, Vector3.new(0, 0, 0), true);
		end;
	end;
end;
local u3 = {
	[Enum.UserInputType.Keyboard] = v7, 
	[Enum.UserInputType.MouseButton1] = v7, 
	[Enum.UserInputType.MouseButton2] = v7, 
	[Enum.UserInputType.MouseButton3] = v7, 
	[Enum.UserInputType.MouseWheel] = v7, 
	[Enum.UserInputType.MouseMovement] = v7, 
	[Enum.UserInputType.Gamepad1] = v8, 
	[Enum.UserInputType.Gamepad2] = v8, 
	[Enum.UserInputType.Gamepad3] = v8, 
	[Enum.UserInputType.Gamepad4] = v8
};
local u4 = nil;
local u5 = {
	[Enum.TouchMovementMode.DPad] = v9, 
	[Enum.DevTouchMovementMode.DPad] = v9, 
	[Enum.TouchMovementMode.Thumbpad] = v9, 
	[Enum.DevTouchMovementMode.Thumbpad] = v9, 
	[Enum.TouchMovementMode.Thumbstick] = v12, 
	[Enum.DevTouchMovementMode.Thumbstick] = v12, 
	[Enum.TouchMovementMode.DynamicThumbstick] = v9, 
	[Enum.DevTouchMovementMode.DynamicThumbstick] = v9, 
	[Enum.TouchMovementMode.ClickToMove] = v13, 
	[Enum.DevTouchMovementMode.ClickToMove] = v13, 
	[Enum.TouchMovementMode.Default] = v9, 
	[Enum.ComputerMovementMode.Default] = v7, 
	[Enum.ComputerMovementMode.KeyboardMouse] = v7, 
	[Enum.DevComputerMovementMode.KeyboardMouse] = v7, 
	[Enum.DevComputerMovementMode.Scriptable] = nil, 
	[Enum.ComputerMovementMode.ClickToMove] = v13, 
	[Enum.DevComputerMovementMode.ClickToMove] = v13
};
function v1.SelectComputerMovementModule(p12)
	if not l__UserInputService__4.KeyboardEnabled and not l__UserInputService__4.GamepadEnabled then
		return nil, false;
	end;
	local l__DevComputerMovementMode__15 = l__Players__2.LocalPlayer.DevComputerMovementMode;
	if l__DevComputerMovementMode__15 == Enum.DevComputerMovementMode.UserChoice then
		local v16 = u3[u4];
		if l__UserGameSettings__6.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove and v16 == v7 then
			v16 = v13;
		end;
	else
		v16 = u5[l__DevComputerMovementMode__15];
		if not v16 and l__DevComputerMovementMode__15 ~= Enum.DevComputerMovementMode.Scriptable then
			warn("No character control module is associated with DevComputerMovementMode ", l__DevComputerMovementMode__15);
		end;
	end;
	if v16 then
		return v16, true;
	end;
	if l__DevComputerMovementMode__15 == Enum.DevComputerMovementMode.Scriptable then
		return nil, true;
	end;
	return nil, false;
end;
function v1.SelectTouchModule(p13)
	if not l__UserInputService__4.TouchEnabled then
		return nil, false;
	end;
	local l__DevTouchMovementMode__17 = l__Players__2.LocalPlayer.DevTouchMovementMode;
	if l__DevTouchMovementMode__17 == Enum.DevTouchMovementMode.UserChoice then
		local v18 = u5[l__UserGameSettings__6.TouchMovementMode];
	else
		if l__DevTouchMovementMode__17 == Enum.DevTouchMovementMode.Scriptable then
			return nil, true;
		end;
		v18 = u5[l__DevTouchMovementMode__17];
	end;
	return v18, true;
end;
local function u6(p14, p15)
	local l__CurrentCamera__19 = l__Workspace__5.CurrentCamera;
	if not l__CurrentCamera__19 then
		return p15;
	end;
	if p14:GetState() == Enum.HumanoidStateType.Swimming then
		return l__CurrentCamera__19.CFrame:VectorToWorldSpace(p15);
	end;
	local v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31 = l__CurrentCamera__19.CFrame:GetComponents();
	if v28 < 1 and v28 > -1 then
		local v32 = v31;
		local v33 = v25;
	else
		v32 = v23;
		v33 = -v24 * math.sign(v28);
	end;
	local v34 = math.sqrt(v32 * v32 + v33 * v33);
	return Vector3.new((v32 * p15.x + v33 * p15.z) / v34, 0, (v32 * p15.z - v33 * p15.x) / v34);
end;
function v1.OnRenderStepped(p16, p17)
	if p16.activeController and p16.activeController.enabled and p16.humanoid then
		p16.activeController:OnRenderStepped(p17);
		local v35 = p16.activeController:GetMoveVector();
		local v36 = p16.activeController:IsMoveVectorCameraRelative();
		local v37 = p16:GetClickToMoveController();
		if p16.activeController ~= v37 then
			if v35.magnitude > 0 then
				v37:CleanupPath();
			else
				v37:OnRenderStepped(p17);
				v35 = v37:GetMoveVector();
				v36 = v37:IsMoveVectorCameraRelative();
			end;
		end;
		if p16.vehicleController then
			local v38, v39 = p16.vehicleController:Update(v35, v36, p16.activeControlModule == v8);
			v35 = v38;
		end;
		if v36 then
			v35 = u6(p16.humanoid, v35);
		end;
		p16.moveFunction(l__Players__2.LocalPlayer, v35, false);
		p16.humanoid.Jump = p16.activeController:GetIsJumping() or p16.touchJumpController and p16.touchJumpController:GetIsJumping();
	end;
end;
function v1.OnHumanoidSeated(p18, p19, p20)
	if p19 then
		if p20 and p20:IsA("VehicleSeat") then
			if not p18.vehicleController then
				p18.vehicleController = p18.vehicleController.new(l__Value__2);
			end;
			p18.vehicleController:Enable(true, p20);
			return;
		end;
	elseif p18.vehicleController then
		p18.vehicleController:Enable(false, p20);
	end;
end;
function v1.OnCharacterAdded(p21, p22)
	p21.humanoid = p22:FindFirstChildOfClass("Humanoid");
	while not p21.humanoid do
		p22.ChildAdded:wait();
		p21.humanoid = p22:FindFirstChildOfClass("Humanoid");	
	end;
	p21:UpdateTouchGuiVisibility();
	if p21.humanoidSeatedConn then
		p21.humanoidSeatedConn:Disconnect();
		p21.humanoidSeatedConn = nil;
	end;
	p21.humanoidSeatedConn = p21.humanoid.Seated:Connect(function(p23, p24)
		p21:OnHumanoidSeated(p23, p24);
	end);
end;
function v1.OnCharacterRemoving(p25, p26)
	p25.humanoid = nil;
	p25:UpdateTouchGuiVisibility();
end;
function v1.UpdateTouchGuiVisibility(p27)
	if p27.touchGui then
		p27.touchGui.Enabled = not (not p27.humanoid) and not l__UserInputService__4.ModalEnabled;
	end;
end;
local u7 = require(script:WaitForChild("TouchJump"));
function v1.SwitchToController(p28, p29)
	if not p29 then
		if p28.activeController then
			p28.activeController:Enable(false);
		end;
		p28.activeController = nil;
		p28.activeControlModule = nil;
		return;
	end;
	if not p28.controllers[p29] then
		p28.controllers[p29] = p29.new(l__Value__2);
	end;
	if p28.activeController ~= p28.controllers[p29] then
		if p28.activeController then
			p28.activeController:Enable(false);
		end;
		p28.activeController = p28.controllers[p29];
		p28.activeControlModule = p29;
		if p28.touchControlFrame and (p28.activeControlModule == v13 or p28.activeControlModule == v12 or p28.activeControlModule == v9) then
			if not p28.controllers[u7] then
				p28.controllers[u7] = u7.new();
			end;
			p28.touchJumpController = p28.controllers[u7];
			p28.touchJumpController:Enable(true, p28.touchControlFrame);
		elseif p28.touchJumpController then
			p28.touchJumpController:Enable(false);
		end;
		p28:EnableActiveControlModule();
	end;
end;
function v1.OnLastInputTypeChanged(p30, p31)
	if u4 == p31 then
		warn("LastInputType Change listener called with current type.");
	end;
	u4 = p31;
	if u4 == Enum.UserInputType.Touch then
		local v40, v41 = p30:SelectTouchModule();
		if v41 then
			while not p30.touchControlFrame do
				wait();			
			end;
			p30:SwitchToController(v40);
		end;
	elseif u3[u4] ~= nil then
		local v42 = p30:SelectComputerMovementModule();
		if v42 then
			p30:SwitchToController(v42);
		end;
	end;
	p30:UpdateTouchGuiVisibility();
end;
function v1.OnComputerMovementModeChange(p32)
	local v43, v44 = p32:SelectComputerMovementModule();
	if v44 then
		p32:SwitchToController(v43);
	end;
end;
function v1.OnTouchMovementModeChange(p33)
	local v45, v46 = p33:SelectTouchModule();
	if v46 then
		while not p33.touchControlFrame do
			wait();		
		end;
		p33:SwitchToController(v45);
	end;
end;
function v1.CreateTouchGuiContainer(p34)
	if p34.touchGui then
		p34.touchGui:Destroy();
	end;
	p34.touchGui = Instance.new("ScreenGui");
	p34.touchGui.Name = "TouchGui";
	p34.touchGui.ResetOnSpawn = false;
	p34.touchGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
	p34:UpdateTouchGuiVisibility();
	p34.touchControlFrame = Instance.new("Frame");
	p34.touchControlFrame.Name = "TouchControlFrame";
	p34.touchControlFrame.Size = UDim2.new(1, 0, 1, 0);
	p34.touchControlFrame.BackgroundTransparency = 1;
	p34.touchControlFrame.Parent = p34.touchGui;
	p34.touchGui.Parent = p34.playerGui;
end;
function v1.GetClickToMoveController(p35)
	if not p35.controllers[v13] then
		p35.controllers[v13] = v13.new(l__Value__2);
	end;
	return p35.controllers[v13];
end;
return v1.new();
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX989"><Properties><string name="Name">Keyboard</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v2 = setmetatable({}, v1);
v2.__index = v2;
function v2.new(p1)
	local v3 = setmetatable(v1.new(), v2);
	v3.CONTROL_ACTION_PRIORITY = p1;
	v3.textFocusReleasedConn = nil;
	v3.textFocusGainedConn = nil;
	v3.windowFocusReleasedConn = nil;
	v3.forwardValue = 0;
	v3.backwardValue = 0;
	v3.leftValue = 0;
	v3.rightValue = 0;
	v3.jumpEnabled = true;
	return v3;
end;
local l__UserInputService__1 = game:GetService("UserInputService");
local u2 = Vector3.new(0, 0, 0);
function v2.Enable(p2, p3)
	if not l__UserInputService__1.KeyboardEnabled then
		return false;
	end;
	if p3 == p2.enabled then
		return true;
	end;
	p2.forwardValue = 0;
	p2.backwardValue = 0;
	p2.leftValue = 0;
	p2.rightValue = 0;
	p2.moveVector = u2;
	p2.jumpRequested = false;
	p2:UpdateJump();
	if p3 then
		p2:BindContextActions();
		p2:ConnectFocusEventListeners();
	else
		p2:UnbindContextActions();
		p2:DisconnectFocusEventListeners();
	end;
	p2.enabled = p3;
	return true;
end;
function v2.UpdateMovement(p4, p5)
	if p5 == Enum.UserInputState.Cancel then
		p4.moveVector = u2;
		return;
	end;
	p4.moveVector = Vector3.new(p4.leftValue + p4.rightValue, 0, p4.forwardValue + p4.backwardValue);
end;
function v2.UpdateJump(p6)
	p6.isJumping = p6.jumpRequested;
end;
local l__ContextActionService__3 = game:GetService("ContextActionService");
function v2.BindContextActions(p7)
	l__ContextActionService__3:BindActionAtPriority("moveForwardAction", function(p8, p9, p10)
		if p9 == Enum.UserInputState.Begin then
			local v4 = -1;
		else
			v4 = 0;
		end;
		p7.forwardValue = v4;
		p7:UpdateMovement(p9);
		return Enum.ContextActionResult.Pass;
	end, false, p7.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterForward);
	l__ContextActionService__3:BindActionAtPriority("moveBackwardAction", function(p11, p12, p13)
		if p12 == Enum.UserInputState.Begin then
			local v5 = 1;
		else
			v5 = 0;
		end;
		p7.backwardValue = v5;
		p7:UpdateMovement(p12);
		return Enum.ContextActionResult.Pass;
	end, false, p7.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterBackward);
	l__ContextActionService__3:BindActionAtPriority("moveLeftAction", function(p14, p15, p16)
		if p15 == Enum.UserInputState.Begin then
			local v6 = -1;
		else
			v6 = 0;
		end;
		p7.leftValue = v6;
		p7:UpdateMovement(p15);
		return Enum.ContextActionResult.Pass;
	end, false, p7.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterLeft);
	l__ContextActionService__3:BindActionAtPriority("moveRightAction", function(p17, p18, p19)
		if p18 == Enum.UserInputState.Begin then
			local v7 = 1;
		else
			v7 = 0;
		end;
		p7.rightValue = v7;
		p7:UpdateMovement(p18);
		return Enum.ContextActionResult.Pass;
	end, false, p7.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterRight);
	l__ContextActionService__3:BindActionAtPriority("jumpAction", function(p20, p21, p22)
		local v8 = p7.jumpEnabled and p21 == Enum.UserInputState.Begin;
		p7.jumpRequested = v8;
		p7:UpdateJump();
		return Enum.ContextActionResult.Pass;
	end, false, p7.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterJump);
end;
function v2.UnbindContextActions(p23)
	l__ContextActionService__3:UnbindAction("moveForwardAction");
	l__ContextActionService__3:UnbindAction("moveBackwardAction");
	l__ContextActionService__3:UnbindAction("moveLeftAction");
	l__ContextActionService__3:UnbindAction("moveRightAction");
	l__ContextActionService__3:UnbindAction("jumpAction");
end;
function v2.ConnectFocusEventListeners(p24)
	local function v9()
		p24.moveVector = u2;
		p24.forwardValue = 0;
		p24.backwardValue = 0;
		p24.leftValue = 0;
		p24.rightValue = 0;
		p24.jumpRequested = false;
		p24:UpdateJump();
	end;
	p24.textFocusReleasedConn = l__UserInputService__1.TextBoxFocusReleased:Connect(v9);
	p24.textFocusGainedConn = l__UserInputService__1.TextBoxFocused:Connect(function(p25)
		p24.jumpRequested = false;
		p24:UpdateJump();
	end);
	p24.windowFocusReleasedConn = l__UserInputService__1.WindowFocused:Connect(v9);
end;
function v2.DisconnectFocusEventListeners(p26)
	if p26.textFocusReleasedConn then
		p26.textFocusReleasedConn:Disconnect();
		p26.textFocusReleasedConn = nil;
	end;
	if p26.textFocusGainedConn then
		p26.textFocusGainedConn:Disconnect();
		p26.textFocusGainedConn = nil;
	end;
	if p26.windowFocusReleasedConn then
		p26.windowFocusReleasedConn:Disconnect();
		p26.windowFocusReleasedConn = nil;
	end;
end;
return v2;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX996"><Properties><string name="Name">TouchJump</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v2 = setmetatable({}, v1);
v2.__index = v2;
function v2.new()
	local v3 = setmetatable(v1.new(), v2);
	v3.parentUIFrame = nil;
	v3.jumpButton = nil;
	v3.characterAddedConn = nil;
	v3.humanoidStateEnabledChangedConn = nil;
	v3.humanoidJumpPowerConn = nil;
	v3.humanoidParentConn = nil;
	v3.externallyEnabled = false;
	v3.jumpPower = 0;
	v3.jumpStateEnabled = true;
	v3.isJumping = false;
	v3.humanoid = nil;
	return v3;
end;
local l__Players__1 = game:GetService("Players");
function v2.EnableButton(p1, p2)
	if p2 then
		if not p1.jumpButton then
			p1:Create();
		end;
		local v4 = l__Players__1.LocalPlayer.Character and l__Players__1.LocalPlayer.Character:FindFirstChildOfClass("Humanoid");
		if v4 and p1.externallyEnabled and p1.externallyEnabled and v4.JumpPower > 0 then
			p1.jumpButton.Visible = true;
			return;
		end;
	else
		p1.jumpButton.Visible = false;
		p1.isJumping = false;
		p1.jumpButton.ImageRectOffset = Vector2.new(1, 146);
	end;
end;
function v2.UpdateEnabled(p3)
	if p3.jumpPower > 0 and p3.jumpStateEnabled then
		p3:EnableButton(true);
		return;
	end;
	p3:EnableButton(false);
end;
function v2.HumanoidChanged(p4, p5)
	local v5 = l__Players__1.LocalPlayer.Character and l__Players__1.LocalPlayer.Character:FindFirstChildOfClass("Humanoid");
	if v5 then
		if p5 == "JumpPower" then
			p4.jumpPower = v5.JumpPower;
			p4:UpdateEnabled();
			return;
		end;
		if p5 == "Parent" and not v5.Parent then
			p4.humanoidChangeConn:Disconnect();
		end;
	end;
end;
function v2.HumanoidStateEnabledChanged(p6, p7, p8)
	if p7 == Enum.HumanoidStateType.Jumping then
		p6.jumpStateEnabled = p8;
		p6:UpdateEnabled();
	end;
end;
function v2.CharacterAdded(p9, p10)
	if p9.humanoidChangeConn then
		p9.humanoidChangeConn:Disconnect();
		p9.humanoidChangeConn = nil;
	end;
	p9.humanoid = p10:FindFirstChildOfClass("Humanoid");
	while not p9.humanoid do
		p10.ChildAdded:wait();
		p9.humanoid = p10:FindFirstChildOfClass("Humanoid");	
	end;
	p9.humanoidJumpPowerConn = p9.humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
		p9.jumpPower = p9.humanoid.JumpPower;
		p9:UpdateEnabled();
	end);
	p9.humanoidParentConn = p9.humanoid:GetPropertyChangedSignal("Parent"):Connect(function()
		if not p9.humanoid.Parent then
			p9.humanoidJumpPowerConn:Disconnect();
			p9.humanoidJumpPowerConn = nil;
			p9.humanoidParentConn:Disconnect();
			p9.humanoidParentConn = nil;
		end;
	end);
	p9.humanoidStateEnabledChangedConn = p9.humanoid.StateEnabledChanged:Connect(function(p11, p12)
		p9:HumanoidStateEnabledChanged(p11, p12);
	end);
	p9.jumpPower = p9.humanoid.JumpPower;
	p9.jumpStateEnabled = p9.humanoid:GetStateEnabled(Enum.HumanoidStateType.Jumping);
	p9:UpdateEnabled();
end;
function v2.SetupCharacterAddedFunction(p13)
	p13.characterAddedConn = l__Players__1.LocalPlayer.CharacterAdded:Connect(function(p14)
		p13:CharacterAdded(p14);
	end);
	if l__Players__1.LocalPlayer.Character then
		p13:CharacterAdded(l__Players__1.LocalPlayer.Character);
	end;
end;
function v2.Enable(p15, p16, p17)
	if p17 then
		p15.parentUIFrame = p17;
	end;
	p15.externallyEnabled = p16;
	p15:EnableButton(p16);
end;
local l__GuiService__2 = game:GetService("GuiService");
function v2.Create(p18)
	if not p18.parentUIFrame then
		return;
	end;
	if p18.jumpButton then
		p18.jumpButton:Destroy();
		p18.jumpButton = nil;
	end;
	local v6 = math.min(p18.parentUIFrame.AbsoluteSize.x, p18.parentUIFrame.AbsoluteSize.y) <= 500;
	if v6 then
		local v7 = 70;
	else
		v7 = 120;
	end;
	p18.jumpButton = Instance.new("ImageButton");
	p18.jumpButton.Name = "JumpButton";
	p18.jumpButton.Visible = false;
	p18.jumpButton.BackgroundTransparency = 1;
	p18.jumpButton.Image = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png";
	p18.jumpButton.ImageRectOffset = Vector2.new(1, 146);
	p18.jumpButton.ImageRectSize = Vector2.new(144, 144);
	p18.jumpButton.Size = UDim2.new(0, v7, 0, v7);
	p18.jumpButton.Position = v6 and UDim2.new(1, -(v7 * 1.5 - 10), 1, -v7 - 20) or UDim2.new(1, -(v7 * 1.5 - 10), 1, -v7 * 1.75);
	local u3 = nil;
	p18.jumpButton.InputBegan:connect(function(p19)
		if not (not u3) or p19.UserInputType ~= Enum.UserInputType.Touch or p19.UserInputState ~= Enum.UserInputState.Begin then
			return;
		end;
		u3 = p19;
		p18.jumpButton.ImageRectOffset = Vector2.new(146, 146);
		p18.isJumping = true;
	end);
	local function u4()
		u3 = nil;
		p18.isJumping = false;
		p18.jumpButton.ImageRectOffset = Vector2.new(1, 146);
	end;
	p18.jumpButton.InputEnded:connect(function(p20)
		if p20 == u3 then
			u4();
		end;
	end);
	l__GuiService__2.MenuOpened:connect(function()
		if u3 then
			u4();
		end;
	end);
	if not p18.characterAddedConn then
		p18:SetupCharacterAddedFunction();
	end;
	p18.jumpButton.Parent = p18.parentUIFrame;
end;
return v2;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1003"><Properties><string name="Name">VehicleController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local u1 = Vector3.new(0, 0, 0);
function v1.new(p1)
	local v2 = setmetatable({}, v1);
	v2.CONTROL_ACTION_PRIORITY = p1;
	v2.enabled = false;
	v2.vehicleSeat = nil;
	v2.throttle = 0;
	v2.steer = 0;
	v2.acceleration = 0;
	v2.decceleration = 0;
	v2.turningRight = 0;
	v2.turningLeft = 0;
	v2.vehicleMoveVector = u1;
	v2.autoPilot = {};
	v2.autoPilot.MaxSpeed = 0;
	v2.autoPilot.MaxSteeringAngle = 0;
	return v2;
end;
local l__ContextActionService__2 = game:GetService("ContextActionService");
function v1.BindContextActions(p2)
	l__ContextActionService__2:BindActionAtPriority("throttleAccel", function(p3, p4, p5)
		p2:OnThrottleAccel(p3, p4, p5);
		return Enum.ContextActionResult.Pass;
	end, false, p2.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonR2);
	l__ContextActionService__2:BindActionAtPriority("throttleDeccel", function(p6, p7, p8)
		p2:OnThrottleDeccel(p6, p7, p8);
		return Enum.ContextActionResult.Pass;
	end, false, p2.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonL2);
	l__ContextActionService__2:BindActionAtPriority("arrowSteerRight", function(p9, p10, p11)
		p2:OnSteerRight(p9, p10, p11);
		return Enum.ContextActionResult.Pass;
	end, false, p2.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Right);
	l__ContextActionService__2:BindActionAtPriority("arrowSteerLeft", function(p12, p13, p14)
		p2:OnSteerLeft(p12, p13, p14);
		return Enum.ContextActionResult.Pass;
	end, false, p2.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Left);
end;
function v1.Enable(p15, p16, p17)
	if p16 == p15.enabled and p17 == p15.vehicleSeat then
		return;
	end;
	p15.enabled = p16;
	p15.vehicleMoveVector = u1;
	if p16 then
		if not p17 then
			return;
		end;
	else
		l__ContextActionService__2:UnbindAction("throttleAccel");
		l__ContextActionService__2:UnbindAction("throttleDeccel");
		l__ContextActionService__2:UnbindAction("arrowSteerRight");
		l__ContextActionService__2:UnbindAction("arrowSteerLeft");
		p15.vehicleSeat = nil;
		return;
	end;
	p15.vehicleSeat = p17;
	p15:SetupAutoPilot();
	p15:BindContextActions();
end;
function v1.OnThrottleAccel(p18, p19, p20, p21)
	if p20 == Enum.UserInputState.End or p20 == Enum.UserInputState.Cancel then
		p18.acceleration = 0;
	else
		p18.acceleration = -1;
	end;
	p18.throttle = p18.acceleration + p18.decceleration;
end;
function v1.OnThrottleDeccel(p22, p23, p24, p25)
	if p24 == Enum.UserInputState.End or p24 == Enum.UserInputState.Cancel then
		p22.decceleration = 0;
	else
		p22.decceleration = 1;
	end;
	p22.throttle = p22.acceleration + p22.decceleration;
end;
function v1.OnSteerRight(p26, p27, p28, p29)
	if p28 == Enum.UserInputState.End or p28 == Enum.UserInputState.Cancel then
		p26.turningRight = 0;
	else
		p26.turningRight = 1;
	end;
	p26.steer = p26.turningRight + p26.turningLeft;
end;
function v1.OnSteerLeft(p30, p31, p32, p33)
	if p32 == Enum.UserInputState.End or p32 == Enum.UserInputState.Cancel then
		p30.turningLeft = 0;
	else
		p30.turningLeft = -1;
	end;
	p30.steer = p30.turningRight + p30.turningLeft;
end;
function v1.Update(p34, p35, p36, p37)
	if not p34.vehicleSeat then
		return p35, false;
	end;
	if p36 then
		p35 = p35 + Vector3.new(p34.steer, 0, p34.throttle);
		if p37 then

		end;
		p34.vehicleSeat.ThrottleFloat = -p35.Z;
		p34.vehicleSeat.SteerFloat = p35.X;
		return p35, true;
	end;
	local v3 = p34.vehicleSeat.Occupant.RootPart.CFrame:VectorToObjectSpace(p35);
	p34.vehicleSeat.ThrottleFloat = p34:ComputeThrottle(v3);
	p34.vehicleSeat.SteerFloat = p34:ComputeSteer(v3);
	return u1, true;
end;
function v1.ComputeThrottle(p38, p39)
	if p39 == u1 then
		return 0;
	end;
	return -p39.Z;
end;
function v1.ComputeSteer(p40, p41)
	if p41 == u1 then
		return 0;
	end;
	return -math.atan2(-p41.x, -p41.z) * (180 / math.pi) / p40.autoPilot.MaxSteeringAngle;
end;
function v1.SetupAutoPilot(p42)
	p42.autoPilot.MaxSpeed = p42.vehicleSeat.MaxSpeed;
	p42.autoPilot.MaxSteeringAngle = 35;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1010"><Properties><string name="Name">DynamicThumbstick</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = { 0.10999999999999999, 0.30000000000000004, 0.4, 0.5, 0.6, 0.7, 0.75 };
local l__Players__2 = game:GetService("Players");
local l__GuiService__3 = game:GetService("GuiService");
local l__UserInputService__4 = game:GetService("UserInputService");
local l__RunService__5 = game:GetService("RunService");
local v6 = l__Players__2.LocalPlayer;
if not v6 then
	l__Players__2:GetPropertyChangedSignal("LocalPlayer"):Wait();
	v6 = l__Players__2.LocalPlayer;
end;
local v7 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v8 = setmetatable({}, v7);
v8.__index = v8;
function v8.new()
	local v9 = setmetatable(v7.new(), v8);
	v9.moveTouchObject = nil;
	v9.moveTouchLockedIn = false;
	v9.moveTouchFirstChanged = false;
	v9.moveTouchStartPosition = nil;
	v9.startImage = nil;
	v9.endImage = nil;
	v9.middleImages = {};
	v9.startImageFadeTween = nil;
	v9.endImageFadeTween = nil;
	v9.middleImageFadeTweens = {};
	v9.isFirstTouch = true;
	v9.thumbstickFrame = nil;
	v9.onRenderSteppedConn = nil;
	v9.fadeInAndOutBalance = 0.5;
	v9.fadeInAndOutHalfDuration = 0.3;
	v9.hasFadedBackgroundInPortrait = false;
	v9.hasFadedBackgroundInLandscape = false;
	v9.tweenInAlphaStart = nil;
	v9.tweenOutAlphaStart = nil;
	return v9;
end;
function v8.GetIsJumping(p1)
	p1.isJumping = false;
	return p1.isJumping;
end;
local l__ContextActionService__1 = game:GetService("ContextActionService");
function v8.Enable(p2, p3, p4)
	if p3 == nil then
		return false;
	end;
	if p3 then
		local v10 = true;
	else
		v10 = false;
	end;
	p3 = v10;
	if p2.enabled == p3 then
		return true;
	end;
	if p3 then
		if not p2.thumbstickFrame then
			p2:Create(p4);
		end;
		p2:BindContextActions();
	else
		l__ContextActionService__1:UnbindAction("DynamicThumbstickAction");
		p2:OnInputEnded();
	end;
	p2.enabled = p3;
	p2.thumbstickFrame.Visible = p3;
end;
local u2 = Vector3.new(0, 0, 0);
function v8.OnInputEnded(p5)
	p5.moveTouchObject = nil;
	p5.moveVector = u2;
	p5:FadeThumbstick(false);
end;
local l__TweenService__3 = game:GetService("TweenService");
local u4 = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut);
function v8.FadeThumbstick(p6, p7)
	if not p7 and p6.moveTouchObject then
		return;
	end;
	if p6.isFirstTouch then
		return;
	end;
	if p6.startImageFadeTween then
		p6.startImageFadeTween:Cancel();
	end;
	if p6.endImageFadeTween then
		p6.endImageFadeTween:Cancel();
	end;
	for v11 = 1, #p6.middleImages do
		if p6.middleImageFadeTweens[v11] then
			p6.middleImageFadeTweens[v11]:Cancel();
		end;
	end;
	if not p7 then
		p6.startImageFadeTween = l__TweenService__3:Create(p6.startImage, u4, {
			ImageTransparency = 1
		});
		p6.startImageFadeTween:Play();
		p6.endImageFadeTween = l__TweenService__3:Create(p6.endImage, u4, {
			ImageTransparency = 1
		});
		p6.endImageFadeTween:Play();
		for v12 = 1, #p6.middleImages do
			p6.middleImageFadeTweens[v12] = l__TweenService__3:Create(p6.middleImages[v12], u4, {
				ImageTransparency = 1
			});
			p6.middleImageFadeTweens[v12]:Play();
		end;
		return;
	end;
	p6.startImageFadeTween = l__TweenService__3:Create(p6.startImage, u4, {
		ImageTransparency = 0
	});
	p6.startImageFadeTween:Play();
	p6.endImageFadeTween = l__TweenService__3:Create(p6.endImage, u4, {
		ImageTransparency = 0.2
	});
	p6.endImageFadeTween:Play();
	for v13 = 1, #p6.middleImages do
		p6.middleImageFadeTweens[v13] = l__TweenService__3:Create(p6.middleImages[v13], u4, {
			ImageTransparency = v1[v13]
		});
		p6.middleImageFadeTweens[v13]:Play();
	end;
end;
function v8.FadeThumbstickFrame(p8, p9, p10)
	p8.fadeInAndOutHalfDuration = p9 * 0.5;
	p8.fadeInAndOutBalance = p10;
	p8.tweenInAlphaStart = tick();
end;
function v8.InputInFrame(p11, p12)
	local l__AbsolutePosition__14 = p11.thumbstickFrame.AbsolutePosition;
	local v15 = l__AbsolutePosition__14 + p11.thumbstickFrame.AbsoluteSize;
	local l__Position__16 = p12.Position;
	if l__AbsolutePosition__14.X <= l__Position__16.X and l__AbsolutePosition__14.Y <= l__Position__16.Y and l__Position__16.X <= v15.X and l__Position__16.Y <= v15.Y then
		return true;
	end;
	return false;
end;
function v8.DoFadeInBackground(p13)
	local v17 = v6:FindFirstChildOfClass("PlayerGui");
	local v18 = false;
	if v17 then
		if v17.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeLeft or v17.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight then
			v18 = p13.hasFadedBackgroundInLandscape;
			p13.hasFadedBackgroundInLandscape = true;
		elseif v17.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait then
			v18 = p13.hasFadedBackgroundInPortrait;
			p13.hasFadedBackgroundInPortrait = true;
		end;
	end;
	if not v18 then
		p13.fadeInAndOutHalfDuration = 0.3;
		p13.fadeInAndOutBalance = 0.5;
		p13.tweenInAlphaStart = tick();
	end;
end;
function v8.DoMove(p14, p15)
	if p15.magnitude < p14.radiusOfDeadZone then
		local v19 = u2;
	else
		local v20 = p15.unit * (1 - math.max(0, (p14.radiusOfMaxSpeed - p15.magnitude) / p14.radiusOfMaxSpeed));
		v19 = Vector3.new(v20.x, 0, v20.y);
	end;
	p14.moveVector = v19;
end;
local u5 = #v1;
function v8.LayoutMiddleImages(p16, p17, p18)
	local v21 = p16.thumbstickSize / 2 + p16.middleSize;
	local v22 = p18 - p17;
	local v23 = v22.magnitude - p16.thumbstickRingSize / 2 - p16.middleSize;
	local l__unit__24 = v22.unit;
	local v25 = p16.middleSpacing;
	if p16.middleSpacing * u5 < v23 then
		v25 = v23 / u5;
	end;
	for v26 = 1, u5 do
		local v27 = nil;
		v27 = p16.middleImages[v26];
		local v28 = v21 + v25 * (v26 - 1);
		if v21 + v25 * (v26 - 2) < v23 then
			local v29 = p18 - l__unit__24 * v28;
			local v30 = math.clamp(1 - (v28 - v23) / v25, 0, 1);
			v27.Visible = true;
			v27.Position = UDim2.new(0, v29.X, 0, v29.Y);
			v27.Size = UDim2.new(0, p16.middleSize * v30, 0, p16.middleSize * v30);
		else
			v27.Visible = false;
		end;
	end;
end;
function v8.MoveStick(p19, p20)
	local v31 = Vector2.new(p19.moveTouchStartPosition.X, p19.moveTouchStartPosition.Y) - p19.thumbstickFrame.AbsolutePosition;
	local v32 = Vector2.new(p20.X, p20.Y) - p19.thumbstickFrame.AbsolutePosition;
	p19.endImage.Position = UDim2.new(0, v32.X, 0, v32.Y);
	p19:LayoutMiddleImages(v31, v32);
end;
local l__Value__6 = Enum.ContextActionPriority.High.Value;
function v8.BindContextActions(p21)
	local function u7(p22)
		if p21.moveTouchObject then
			return Enum.ContextActionResult.Pass;
		end;
		if not p21:InputInFrame(p22) then
			return Enum.ContextActionResult.Pass;
		end;
		if p21.isFirstTouch then
			p21.isFirstTouch = false;
			local v33 = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0);
			l__TweenService__3:Create(p21.startImage, v33, {
				Size = UDim2.new(0, 0, 0, 0)
			}):Play();
			l__TweenService__3:Create(p21.endImage, v33, {
				Size = UDim2.new(0, p21.thumbstickSize, 0, p21.thumbstickSize), 
				ImageColor3 = Color3.new(0, 0, 0)
			}):Play();
		end;
		p21.moveTouchLockedIn = false;
		p21.moveTouchObject = p22;
		p21.moveTouchStartPosition = p22.Position;
		p21.moveTouchFirstChanged = true;
		p21:DoFadeInBackground();
		return Enum.ContextActionResult.Pass;
	end;
	local function u8(p23)
		if p23 ~= p21.moveTouchObject then
			return Enum.ContextActionResult.Pass;
		end;
		if p21.moveTouchFirstChanged then
			p21.moveTouchFirstChanged = false;
			local v34 = Vector2.new(p23.Position.X - p21.thumbstickFrame.AbsolutePosition.X, p23.Position.Y - p21.thumbstickFrame.AbsolutePosition.Y);
			p21.startImage.Visible = true;
			p21.startImage.Position = UDim2.new(0, v34.X, 0, v34.Y);
			p21.endImage.Visible = true;
			p21.endImage.Position = p21.startImage.Position;
			p21:FadeThumbstick(true);
			p21:MoveStick(p23.Position);
		end;
		p21.moveTouchLockedIn = true;
		local v35 = Vector2.new(p23.Position.x - p21.moveTouchStartPosition.x, p23.Position.y - p21.moveTouchStartPosition.y);
		if math.abs(v35.x) > 0 or math.abs(v35.y) > 0 then
			p21:DoMove(v35);
			p21:MoveStick(p23.Position);
		end;
		return Enum.ContextActionResult.Sink;
	end;
	local function u9(p24)
		if p24 == p21.moveTouchObject then
			p21:OnInputEnded();
			if p21.moveTouchLockedIn then
				return Enum.ContextActionResult.Sink;
			end;
		end;
		return Enum.ContextActionResult.Pass;
	end;
	l__ContextActionService__1:BindActionAtPriority("DynamicThumbstickAction", function(p25, p26, p27)
		if p26 == Enum.UserInputState.Begin then
			return u7(p27);
		end;
		if p26 == Enum.UserInputState.Change then
			return u8(p27);
		end;
		if p26 == Enum.UserInputState.End then
			return u9(p27);
		end;
		if p26 == Enum.UserInputState.Cancel then
			p21:OnInputEnded();
		end;
	end, false, l__Value__6, Enum.UserInputType.Touch);
end;
function v8.Create(p28, p29)
	if p28.thumbstickFrame then
		p28.thumbstickFrame:Destroy();
		p28.thumbstickFrame = nil;
		if p28.onRenderSteppedConn then
			p28.onRenderSteppedConn:Disconnect();
			p28.onRenderSteppedConn = nil;
		end;
	end;
	p28.thumbstickSize = 45;
	p28.thumbstickRingSize = 20;
	p28.middleSize = 10;
	p28.middleSpacing = p28.middleSize + 4;
	p28.radiusOfDeadZone = 2;
	p28.radiusOfMaxSpeed = 20;
	local l__AbsoluteSize__36 = p29.AbsoluteSize;
	if math.min(l__AbsoluteSize__36.x, l__AbsoluteSize__36.y) > 500 then
		p28.thumbstickSize = p28.thumbstickSize * 2;
		p28.thumbstickRingSize = p28.thumbstickRingSize * 2;
		p28.middleSize = p28.middleSize * 2;
		p28.middleSpacing = p28.middleSpacing * 2;
		p28.radiusOfDeadZone = p28.radiusOfDeadZone * 2;
		p28.radiusOfMaxSpeed = p28.radiusOfMaxSpeed * 2;
	end;
	local function v37(p30)
		if p30 then
			p28.thumbstickFrame.Size = UDim2.new(1, 0, 0.4, 0);
			p28.thumbstickFrame.Position = UDim2.new(0, 0, 0.6, 0);
			return;
		end;
		p28.thumbstickFrame.Size = UDim2.new(0.4, 0, 0.6666666666666666, 0);
		p28.thumbstickFrame.Position = UDim2.new(0, 0, 0.3333333333333333, 0);
	end;
	p28.thumbstickFrame = Instance.new("Frame");
	p28.thumbstickFrame.BorderSizePixel = 0;
	p28.thumbstickFrame.Name = "DynamicThumbstickFrame";
	p28.thumbstickFrame.Visible = false;
	p28.thumbstickFrame.BackgroundTransparency = 1;
	p28.thumbstickFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
	p28.thumbstickFrame.Active = false;
	v37(false);
	p28.startImage = Instance.new("ImageLabel");
	p28.startImage.Name = "ThumbstickStart";
	p28.startImage.Visible = true;
	p28.startImage.BackgroundTransparency = 1;
	p28.startImage.Image = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png";
	p28.startImage.ImageRectOffset = Vector2.new(1, 1);
	p28.startImage.ImageRectSize = Vector2.new(144, 144);
	p28.startImage.ImageColor3 = Color3.new(0, 0, 0);
	p28.startImage.AnchorPoint = Vector2.new(0.5, 0.5);
	p28.startImage.Position = UDim2.new(0, p28.thumbstickRingSize * 3.3, 1, -p28.thumbstickRingSize * 2.8);
	p28.startImage.Size = UDim2.new(0, p28.thumbstickRingSize * 3.7, 0, p28.thumbstickRingSize * 3.7);
	p28.startImage.ZIndex = 10;
	p28.startImage.Parent = p28.thumbstickFrame;
	p28.endImage = Instance.new("ImageLabel");
	p28.endImage.Name = "ThumbstickEnd";
	p28.endImage.Visible = true;
	p28.endImage.BackgroundTransparency = 1;
	p28.endImage.Image = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png";
	p28.endImage.ImageRectOffset = Vector2.new(1, 1);
	p28.endImage.ImageRectSize = Vector2.new(144, 144);
	p28.endImage.AnchorPoint = Vector2.new(0.5, 0.5);
	p28.endImage.Position = p28.startImage.Position;
	p28.endImage.Size = UDim2.new(0, p28.thumbstickSize * 0.8, 0, p28.thumbstickSize * 0.8);
	p28.endImage.ZIndex = 10;
	p28.endImage.Parent = p28.thumbstickFrame;
	for v38 = 1, u5 do
		p28.middleImages[v38] = Instance.new("ImageLabel");
		p28.middleImages[v38].Name = "ThumbstickMiddle";
		p28.middleImages[v38].Visible = false;
		p28.middleImages[v38].BackgroundTransparency = 1;
		p28.middleImages[v38].Image = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png";
		p28.middleImages[v38].ImageRectOffset = Vector2.new(1, 1);
		p28.middleImages[v38].ImageRectSize = Vector2.new(144, 144);
		p28.middleImages[v38].ImageTransparency = v1[v38];
		p28.middleImages[v38].AnchorPoint = Vector2.new(0.5, 0.5);
		p28.middleImages[v38].ZIndex = 9;
		p28.middleImages[v38].Parent = p28.thumbstickFrame;
	end;
	local u10 = nil;
	local function v39()
		if u10 then
			u10:Disconnect();
			u10 = nil;
		end;
		local l__CurrentCamera__40 = workspace.CurrentCamera;
		if l__CurrentCamera__40 then
			local function v41()
				local l__ViewportSize__42 = l__CurrentCamera__40.ViewportSize;
				v37(l__ViewportSize__42.X < l__ViewportSize__42.Y);
			end;
			u10 = l__CurrentCamera__40:GetPropertyChangedSignal("ViewportSize"):Connect(v41);
			v41();
		end;
	end;
	workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(v39);
	if workspace.CurrentCamera then
		v39();
	end;
	p28.moveTouchStartPosition = nil;
	p28.startImageFadeTween = nil;
	p28.endImageFadeTween = nil;
	p28.middleImageFadeTweens = {};
	p28.onRenderSteppedConn = l__RunService__5.RenderStepped:Connect(function()
		if p28.tweenInAlphaStart ~= nil then
			local v43 = tick() - p28.tweenInAlphaStart;
			local v44 = p28.fadeInAndOutHalfDuration * 2 * p28.fadeInAndOutBalance;
			p28.thumbstickFrame.BackgroundTransparency = 1 - 0.35 * math.min(v43 / v44, 1);
			if v44 < v43 then
				p28.tweenOutAlphaStart = tick();
				p28.tweenInAlphaStart = nil;
				return;
			end;
		elseif p28.tweenOutAlphaStart ~= nil then
			local v45 = tick() - p28.tweenOutAlphaStart;
			local v46 = p28.fadeInAndOutHalfDuration * 2 - p28.fadeInAndOutHalfDuration * 2 * p28.fadeInAndOutBalance;
			p28.thumbstickFrame.BackgroundTransparency = 0.65 + 0.35 * math.min(v45 / v46, 1);
			if v46 < v45 then
				p28.tweenOutAlphaStart = nil;
			end;
		end;
	end);
	p28.onTouchEndedConn = l__UserInputService__4.TouchEnded:connect(function(p31)
		if p31 == p28.moveTouchObject then
			p28:OnInputEnded();
		end;
	end);
	l__GuiService__3.MenuOpened:connect(function()
		if p28.moveTouchObject then
			p28:OnInputEnded();
		end;
	end);
	local v47 = v6:FindFirstChildOfClass("PlayerGui");
	while not v47 do
		v6.ChildAdded:wait();
		v47 = v6:FindFirstChildOfClass("PlayerGui");	
	end;
	local v48 = true;
	if v47.CurrentScreenOrientation ~= Enum.ScreenOrientation.LandscapeLeft then
		v48 = v47.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight;
	end;
	local u11 = nil;
	local function u12()
		p28.fadeInAndOutHalfDuration = 2.5;
		p28.fadeInAndOutBalance = 0.05;
		p28.tweenInAlphaStart = tick();
	end;
	u11 = v47:GetPropertyChangedSignal("CurrentScreenOrientation"):Connect(function()
		if not (not v48) and v47.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait or not v48 and v47.CurrentScreenOrientation ~= Enum.ScreenOrientation.Portrait then
			u11:disconnect();
			u12();
			if v48 then
				p28.hasFadedBackgroundInPortrait = true;
				return;
			end;
			p28.hasFadedBackgroundInLandscape = true;
		end;
	end);
	p28.thumbstickFrame.Parent = p29;
	if game:IsLoaded() then
		u12();
	else
		coroutine.wrap(function()
			game.Loaded:Wait();
			u12();
		end)();
	end;
end;
return v8;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1017"><Properties><string name="Name">TouchThumbstick</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local v2 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v3 = setmetatable({}, v2);
v3.__index = v3;
function v3.new()
	local v4 = setmetatable(v2.new(), v3);
	v4.isFollowStick = false;
	v4.thumbstickFrame = nil;
	v4.moveTouchObject = nil;
	v4.onTouchMovedConn = nil;
	v4.onTouchEndedConn = nil;
	v4.screenPos = nil;
	v4.stickImage = nil;
	v4.thumbstickSize = nil;
	return v4;
end;
local u1 = Vector3.new(0, 0, 0);
function v3.Enable(p1, p2, p3)
	if p2 == nil then
		return false;
	end;
	if p2 then
		local v5 = true;
	else
		v5 = false;
	end;
	p2 = v5;
	if p1.enabled == p2 then
		return true;
	end;
	p1.moveVector = u1;
	p1.isJumping = false;
	if p2 then
		if not p1.thumbstickFrame then
			p1:Create(p3);
		end;
		p1.thumbstickFrame.Visible = true;
	else
		p1.thumbstickFrame.Visible = false;
		p1:OnInputEnded();
	end;
	p1.enabled = p2;
end;
function v3.OnInputEnded(p4)
	p4.thumbstickFrame.Position = p4.screenPos;
	p4.stickImage.Position = UDim2.new(0, p4.thumbstickFrame.Size.X.Offset / 2 - p4.thumbstickSize / 4, 0, p4.thumbstickFrame.Size.Y.Offset / 2 - p4.thumbstickSize / 4);
	p4.moveVector = u1;
	p4.isJumping = false;
	p4.thumbstickFrame.Position = p4.screenPos;
	p4.moveTouchObject = nil;
end;
local l__UserInputService__2 = game:GetService("UserInputService");
local l__GuiService__3 = game:GetService("GuiService");
function v3.Create(p5, p6)
	if p5.thumbstickFrame then
		p5.thumbstickFrame:Destroy();
		p5.thumbstickFrame = nil;
		if p5.onTouchMovedConn then
			p5.onTouchMovedConn:Disconnect();
			p5.onTouchMovedConn = nil;
		end;
		if p5.onTouchEndedConn then
			p5.onTouchEndedConn:Disconnect();
			p5.onTouchEndedConn = nil;
		end;
	end;
	local v6 = math.min(p6.AbsoluteSize.x, p6.AbsoluteSize.y) <= 500;
	if v6 then
		local v7 = 70;
	else
		v7 = 120;
	end;
	p5.thumbstickSize = v7;
	p5.screenPos = v6 and UDim2.new(0, p5.thumbstickSize / 2 - 10, 1, -p5.thumbstickSize - 20) or UDim2.new(0, p5.thumbstickSize / 2, 1, -p5.thumbstickSize * 1.75);
	p5.thumbstickFrame = Instance.new("Frame");
	p5.thumbstickFrame.Name = "ThumbstickFrame";
	p5.thumbstickFrame.Active = true;
	p5.thumbstickFrame.Visible = false;
	p5.thumbstickFrame.Size = UDim2.new(0, p5.thumbstickSize, 0, p5.thumbstickSize);
	p5.thumbstickFrame.Position = p5.screenPos;
	p5.thumbstickFrame.BackgroundTransparency = 1;
	local v8 = Instance.new("ImageLabel");
	v8.Name = "OuterImage";
	v8.Image = "rbxasset://textures/ui/TouchControlsSheet.png";
	v8.ImageRectOffset = Vector2.new();
	v8.ImageRectSize = Vector2.new(220, 220);
	v8.BackgroundTransparency = 1;
	v8.Size = UDim2.new(0, p5.thumbstickSize, 0, p5.thumbstickSize);
	v8.Position = UDim2.new(0, 0, 0, 0);
	v8.Parent = p5.thumbstickFrame;
	p5.stickImage = Instance.new("ImageLabel");
	p5.stickImage.Name = "StickImage";
	p5.stickImage.Image = "rbxasset://textures/ui/TouchControlsSheet.png";
	p5.stickImage.ImageRectOffset = Vector2.new(220, 0);
	p5.stickImage.ImageRectSize = Vector2.new(111, 111);
	p5.stickImage.BackgroundTransparency = 1;
	p5.stickImage.Size = UDim2.new(0, p5.thumbstickSize / 2, 0, p5.thumbstickSize / 2);
	p5.stickImage.Position = UDim2.new(0, p5.thumbstickSize / 2 - p5.thumbstickSize / 4, 0, p5.thumbstickSize / 2 - p5.thumbstickSize / 4);
	p5.stickImage.ZIndex = 2;
	p5.stickImage.Parent = p5.thumbstickFrame;
	local u4 = nil;
	p5.thumbstickFrame.InputBegan:Connect(function(p7)
		if not (not p5.moveTouchObject) or p7.UserInputType ~= Enum.UserInputType.Touch or p7.UserInputState ~= Enum.UserInputState.Begin then
			return;
		end;
		p5.moveTouchObject = p7;
		p5.thumbstickFrame.Position = UDim2.new(0, p7.Position.x - p5.thumbstickFrame.Size.X.Offset / 2, 0, p7.Position.y - p5.thumbstickFrame.Size.Y.Offset / 2);
		u4 = Vector2.new(p5.thumbstickFrame.AbsolutePosition.x + p5.thumbstickFrame.AbsoluteSize.x / 2, p5.thumbstickFrame.AbsolutePosition.y + p5.thumbstickFrame.AbsoluteSize.y / 2);
		local v9 = Vector2.new(p7.Position.x - u4.x, p7.Position.y - u4.y);
	end);
	local function u5(p8)
		local v10 = p8 / (p5.thumbstickSize / 2);
		local l__magnitude__11 = v10.magnitude;
		if l__magnitude__11 < 0.05 then
			local v12 = Vector3.new();
		else
			local v13 = v10.unit * ((l__magnitude__11 - 0.05) / 0.95);
			v12 = Vector3.new(v13.x, 0, v13.y);
		end;
		p5.moveVector = v12;
	end;
	local function u6(p9)
		local v14 = Vector2.new(p9.x - u4.x, p9.y - u4.y);
		local l__magnitude__15 = v14.magnitude;
		local v16 = p5.thumbstickFrame.AbsoluteSize.x / 2;
		if p5.isFollowStick and v16 < l__magnitude__15 then
			local v17 = v14.unit * v16;
			p5.thumbstickFrame.Position = UDim2.new(0, p9.x - p5.thumbstickFrame.AbsoluteSize.x / 2 - v17.x, 0, p9.y - p5.thumbstickFrame.AbsoluteSize.y / 2 - v17.y);
		else
			v14 = v14.unit * math.min(l__magnitude__15, v16);
		end;
		p5.stickImage.Position = UDim2.new(0, v14.x + p5.stickImage.AbsoluteSize.x / 2, 0, v14.y + p5.stickImage.AbsoluteSize.y / 2);
	end;
	p5.onTouchMovedConn = l__UserInputService__2.TouchMoved:Connect(function(p10, p11)
		if p10 == p5.moveTouchObject then
			u4 = Vector2.new(p5.thumbstickFrame.AbsolutePosition.x + p5.thumbstickFrame.AbsoluteSize.x / 2, p5.thumbstickFrame.AbsolutePosition.y + p5.thumbstickFrame.AbsoluteSize.y / 2);
			u5((Vector2.new(p10.Position.x - u4.x, p10.Position.y - u4.y)));
			u6(p10.Position);
		end;
	end);
	p5.onTouchEndedConn = l__UserInputService__2.TouchEnded:Connect(function(p12, p13)
		if p12 == p5.moveTouchObject then
			p5:OnInputEnded();
		end;
	end);
	l__GuiService__3.MenuOpened:Connect(function()
		if p5.moveTouchObject then
			p5:OnInputEnded();
		end;
	end);
	p5.thumbstickFrame.Parent = p6;
end;
return v3;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1024"><Properties><string name="Name">ClickToMoveController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1, v2 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserExcludeNonCollidableForPathfinding");
end);
local l__Players__3 = game:GetService("Players");
local l__Debris__4 = game:GetService("Debris");
local v5 = {};
local u1 = function(p1)
	if not p1 then
		return;
	end;
	local v6 = p1:FindFirstChildOfClass("Humanoid");
	if v6 then
		return p1, v6;
	end;
	return u1(p1.Parent);
end;
v5.FindCharacterAncestor = u1;
local l__Workspace__2 = game:GetService("Workspace");
local u3 = function(p2, p3, p4)
	p4 = p4 or {};
	local v7, v8, v9, v10 = l__Workspace__2:FindPartOnRayWithIgnoreList(p2, p4);
	if not v7 then
		return nil, nil;
	end;
	if p3 and v7.CanCollide == false then
		local v11, v12 = u1(v7);
		if v12 ~= nil then
			return v7, v8, v9, v10;
		end;
	else
		return v7, v8, v9, v10;
	end;
	table.insert(p4, v7);
	return u3(p2, p3, p4);
end;
v5.Raycast = u3;
u1 = {};
u3 = function(p5)
	local v13 = p5 and p5.Character;
	if not v13 then
		return;
	end;
	local v14 = u1[p5];
	if v14 and v14.Parent == v13 then
		return v14;
	end;
	u1[p5] = nil;
	local v15 = v13:FindFirstChildOfClass("Humanoid");
	if v15 then
		u1[p5] = v15;
	end;
	return v15;
end;
local l__LocalPlayer__4 = l__Players__3.LocalPlayer;
local u5 = nil;
local u6 = nil;
local u7 = nil;
local u8 = nil;
local function u9()
	return l__LocalPlayer__4 and l__LocalPlayer__4.Character;
end;
local l__CollectionService__10 = game:GetService("CollectionService");
local function u11(p6, p7)
	return Vector3.new(math.min(p6.X, p7.X), math.min(p6.Y, p7.Y), math.min(p6.Z, p7.Z));
end;
local function u12(p8, p9)
	return Vector3.new(math.max(p8.X, p9.X), math.max(p8.Y, p9.Y), math.max(p8.Z, p9.Z));
end;
local u13 = false;
local u14 = Vector3.new(0, 0, 0);
local u15 = 1;
local u16 = v1 or v2;
local function u17(p10)
	if p10 == nil or p10.PrimaryPart == nil then
		return;
	end;
	local v16 = p10.PrimaryPart.CFrame:inverse();
	local v17 = Vector3.new(math.huge, math.huge, math.huge);
	local v18 = Vector3.new(-math.huge, -math.huge, -math.huge);
	for v19, v20 in pairs(p10:GetDescendants()) do
		if v20:IsA("BasePart") and v20.CanCollide then
			local v21 = v16 * v20.CFrame;
			local v22 = Vector3.new(v20.Size.X / 2, v20.Size.Y / 2, v20.Size.Z / 2);
			for v23, v24 in ipairs({ Vector3.new(v22.X, v22.Y, v22.Z), Vector3.new(v22.X, v22.Y, -v22.Z), Vector3.new(v22.X, -v22.Y, v22.Z), Vector3.new(v22.X, -v22.Y, -v22.Z), Vector3.new(-v22.X, v22.Y, v22.Z), Vector3.new(-v22.X, v22.Y, -v22.Z), Vector3.new(-v22.X, -v22.Y, v22.Z), Vector3.new(-v22.X, -v22.Y, -v22.Z) }) do
				local v25 = v21 * v24;
				v17 = u11(v17, v25);
				v18 = u12(v18, v25);
			end;
		end;
	end;
	local v26 = v18 - v17;
	if not (v26.X < 0) and not (v26.Y < 0) and not (v26.Z < 0) then
		return v26;
	end;
	return nil;
end;
local l__PathfindingService__18 = game:GetService("PathfindingService");
local u19 = true;
local u20 = require(script.Parent:WaitForChild("ClickToMoveDisplay"));
local u21 = 8;
local function u22()
	if u8 then
		return u8;
	end;
	u8 = {};
	table.insert(u8, u9());
	return u8;
end;
local u23 = nil;
local u24 = nil;
local u25 = nil;
local function u26()
	if u23 then
		u23:Cancel();
		u23 = nil;
	end;
	if u24 then
		u24:Disconnect();
		u24 = nil;
	end;
	if u25 then
		u25:Disconnect();
		u25 = nil;
	end;
end;
local function u27(p11)
	if p11 ~= nil then
		for v27, v28 in pairs(p11:GetChildren()) do
			if v28:IsA("Tool") then
				return v28;
			end;
		end;
	end;
end;
local u28 = true;
local function u29()
	local v29 = u3(l__LocalPlayer__4);
	local v30 = false;
	if v29 ~= nil then
		v30 = v29.Health > 0;
	end;
	return v30;
end;
local l__StarterGui__30 = game:GetService("StarterGui");
local function u31(p12, p13, p14)
	local v31 = {};
	if p14 ~= nil then
		local v32 = p14;
		local v33 = p14;
	else
		v32 = u13;
		v33 = true;
	end;
	v31.Cancelled = false;
	v31.Started = false;
	v31.Finished = Instance.new("BindableEvent");
	v31.PathFailed = Instance.new("BindableEvent");
	v31.PathComputing = false;
	v31.PathComputed = false;
	v31.OriginalTargetPoint = p12;
	v31.TargetPoint = p12;
	v31.TargetSurfaceNormal = p13;
	v31.DiedConn = nil;
	v31.SeatedConn = nil;
	v31.BlockedConn = nil;
	v31.TeleportedConn = nil;
	v31.CurrentPoint = 0;
	v31.HumanoidOffsetFromPath = u14;
	v31.CurrentWaypointPosition = nil;
	v31.CurrentWaypointPlaneNormal = u14;
	v31.CurrentWaypointPlaneDistance = 0;
	v31.CurrentWaypointNeedsJump = false;
	v31.CurrentHumanoidPosition = u14;
	v31.CurrentHumanoidVelocity = 0;
	v31.NextActionMoveDirection = u14;
	v31.NextActionJump = false;
	v31.Timeout = 0;
	v31.Humanoid = u3(l__LocalPlayer__4);
	v31.OriginPoint = nil;
	v31.AgentCanFollowPath = false;
	v31.DirectPath = false;
	v31.DirectPathRiseFirst = false;
	local v34 = v31.Humanoid and v31.Humanoid.RootPart;
	if v34 then
		v31.OriginPoint = v34.CFrame.p;
		local v35 = 2;
		local v36 = 5;
		local v37 = true;
		local l__SeatPart__38 = v31.Humanoid.SeatPart;
		if l__SeatPart__38 and l__SeatPart__38:IsA("VehicleSeat") then
			local v39 = l__SeatPart__38:FindFirstAncestorOfClass("Model");
			if v39 then
				v39.PrimaryPart = l__SeatPart__38;
				if v33 then
					local v40 = v39:GetExtentsSize();
					v35 = u15 * 0.5 * math.sqrt(v40.X * v40.X + v40.Z * v40.Z);
					v36 = u15 * v40.Y;
					v37 = false;
					v31.AgentCanFollowPath = true;
					v31.DirectPath = v33;
				end;
				v39.PrimaryPart = v39.PrimaryPart;
			end;
		else
			local v41 = nil;
			if u16 then
				local v42 = u9();
				if v42 ~= nil then
					v41 = u17(v42);
				end;
			end;
			if v41 == nil then
				v41 = u9():GetExtentsSize();
			end;
			v35 = u15 * 0.5 * math.sqrt(v41.X * v41.X + v41.Z * v41.Z);
			v36 = u15 * v41.Y;
			v37 = v31.Humanoid.JumpPower > 0;
			v31.AgentCanFollowPath = true;
			v31.DirectPath = v32;
			v31.DirectPathRiseFirst = v31.Humanoid.Sit;
		end;
		v31.pathResult = l__PathfindingService__18:CreatePath({
			AgentRadius = v35, 
			AgentHeight = v36, 
			AgentCanJump = v37
		});
	end;
	function v31.Cleanup(p15)
		if v31.stopTraverseFunc then
			v31.stopTraverseFunc();
			v31.stopTraverseFunc = nil;
		end;
		if v31.MoveToConn then
			v31.MoveToConn:Disconnect();
			v31.MoveToConn = nil;
		end;
		if v31.BlockedConn then
			v31.BlockedConn:Disconnect();
			v31.BlockedConn = nil;
		end;
		if v31.DiedConn then
			v31.DiedConn:Disconnect();
			v31.DiedConn = nil;
		end;
		if v31.SeatedConn then
			v31.SeatedConn:Disconnect();
			v31.SeatedConn = nil;
		end;
		if v31.TeleportedConn then
			v31.TeleportedConn:Disconnect();
			v31.TeleportedConn = nil;
		end;
		v31.Started = false;
	end;
	function v31.Cancel(p16)
		v31.Cancelled = true;
		v31:Cleanup();
	end;
	function v31.IsActive(p17)
		return v31.AgentCanFollowPath and (v31.Started and not v31.Cancelled);
	end;
	function v31.OnPathInterrupted(p18)
		v31.Cancelled = true;
		v31:OnPointReached(false);
	end;
	function v31.ComputePath(p19)
		if v31.OriginPoint then
			if v31.PathComputed or v31.PathComputing then
				return;
			end;
			v31.PathComputing = true;
			if v31.AgentCanFollowPath then
				if v31.DirectPath then
					v31.pointList = { PathWaypoint.new(v31.OriginPoint, Enum.PathWaypointAction.Walk), PathWaypoint.new(v31.TargetPoint, v31.DirectPathRiseFirst and Enum.PathWaypointAction.Jump or Enum.PathWaypointAction.Walk) };
					v31.PathComputed = true;
				else
					v31.pathResult:ComputeAsync(v31.OriginPoint, v31.TargetPoint);
					v31.pointList = v31.pathResult:GetWaypoints();
					v31.BlockedConn = v31.pathResult.Blocked:Connect(function(p20)
						v31:OnPathBlocked(p20);
					end);
					v31.PathComputed = v31.pathResult.Status == Enum.PathStatus.Success;
				end;
			end;
			v31.PathComputing = false;
		end;
	end;
	function v31.IsValidPath(p21)
		v31:ComputePath();
		return v31.PathComputed and v31.AgentCanFollowPath;
	end;
	v31.Recomputing = false;
	function v31.OnPathBlocked(p22, p23)
		if not (v31.CurrentPoint <= p23) or v31.Recomputing then
			return;
		end;
		v31.Recomputing = true;
		if v31.stopTraverseFunc then
			v31.stopTraverseFunc();
			v31.stopTraverseFunc = nil;
		end;
		v31.OriginPoint = v31.Humanoid.RootPart.CFrame.p;
		v31.pathResult:ComputeAsync(v31.OriginPoint, v31.TargetPoint);
		v31.pointList = v31.pathResult:GetWaypoints();
		if #v31.pointList > 0 then
			v31.HumanoidOffsetFromPath = v31.pointList[1].Position - v31.OriginPoint;
		end;
		v31.PathComputed = v31.pathResult.Status == Enum.PathStatus.Success;
		if u19 then
			local v43, v44 = u20.CreatePathDisplay(v31.pointList);
			v31.stopTraverseFunc = v43;
			v31.setPointFunc = v44;
		end;
		if v31.PathComputed then
			v31.CurrentPoint = 1;
			v31:OnPointReached(true);
		else
			v31.PathFailed:Fire();
			v31:Cleanup();
		end;
		v31.Recomputing = false;
	end;
	function v31.OnRenderStepped(p24, p25)
		if v31.Started and not v31.Cancelled then
			v31.Timeout = v31.Timeout + p25;
			if u21 < v31.Timeout then
				v31:OnPointReached(false);
				return;
			end;
			v31.CurrentHumanoidPosition = v31.Humanoid.RootPart.Position + v31.HumanoidOffsetFromPath;
			v31.CurrentHumanoidVelocity = v31.Humanoid.RootPart.Velocity;
			while v31.Started and v31:IsCurrentWaypointReached() do
				v31:OnPointReached(true);			
			end;
			if v31.Started then
				v31.NextActionMoveDirection = v31.CurrentWaypointPosition - v31.CurrentHumanoidPosition;
				if v31.NextActionMoveDirection.Magnitude > 1E-06 then
					v31.NextActionMoveDirection = v31.NextActionMoveDirection.Unit;
				else
					v31.NextActionMoveDirection = u14;
				end;
				if v31.CurrentWaypointNeedsJump then
					v31.NextActionJump = true;
					v31.CurrentWaypointNeedsJump = false;
					return;
				end;
				v31.NextActionJump = false;
			end;
		end;
	end;
	function v31.IsCurrentWaypointReached(p26)
		if v31.CurrentWaypointPlaneNormal ~= u14 then
			local v45 = v31.CurrentWaypointPlaneNormal:Dot(v31.CurrentHumanoidPosition) - v31.CurrentWaypointPlaneDistance < math.max(1, 0.0625 * -v31.CurrentWaypointPlaneNormal:Dot(v31.CurrentHumanoidVelocity));
		else
			v45 = true;
		end;
		if v45 then
			v31.CurrentWaypointPosition = nil;
			v31.CurrentWaypointPlaneNormal = u14;
			v31.CurrentWaypointPlaneDistance = 0;
		end;
		return v45;
	end;
	function v31.OnPointReached(p27, p28)
		if not p28 or not (not v31.Cancelled) then
			v31.PathFailed:Fire();
			v31:Cleanup();
			return;
		end;
		if v31.setPointFunc then
			v31.setPointFunc(v31.CurrentPoint);
		end;
		local v46 = v31.CurrentPoint + 1;
		if #v31.pointList < v46 then
			if v31.stopTraverseFunc then
				v31.stopTraverseFunc();
			end;
			v31.Finished:Fire();
			v31:Cleanup();
			return;
		end;
		local v47 = v31.pointList[v31.CurrentPoint];
		local v48 = v31.pointList[v46];
		local v49 = v31.Humanoid:GetState();
		local v50 = true;
		if v49 ~= Enum.HumanoidStateType.FallingDown then
			v50 = true;
			if v49 ~= Enum.HumanoidStateType.Freefall then
				v50 = v49 == Enum.HumanoidStateType.Jumping;
			end;
		end;
		if v50 then
			local v51 = v48.Action == Enum.PathWaypointAction.Jump;
			if not v51 and v31.CurrentPoint > 1 then
				local v52 = v47.Position - v31.pointList[v31.CurrentPoint - 1].Position;
				local v53 = v48.Position - v47.Position;
				v51 = Vector2.new(v52.x, v52.z).Unit:Dot(Vector2.new(v53.x, v53.z).Unit) < 0.996;
			end;
			if v51 then
				v31.Humanoid.FreeFalling:Wait();
				wait(0.1);
			end;
		end;
		v31:MoveToNextWayPoint(v47, v48, v46);
	end;
	function v31.MoveToNextWayPoint(p29, p30, p31, p32)
		v31.CurrentWaypointPlaneNormal = p30.Position - p31.Position;
		v31.CurrentWaypointPlaneNormal = Vector3.new(v31.CurrentWaypointPlaneNormal.X, 0, v31.CurrentWaypointPlaneNormal.Z);
		if v31.CurrentWaypointPlaneNormal.Magnitude > 1E-06 then
			v31.CurrentWaypointPlaneNormal = v31.CurrentWaypointPlaneNormal.Unit;
			v31.CurrentWaypointPlaneDistance = v31.CurrentWaypointPlaneNormal:Dot(p31.Position);
		else
			v31.CurrentWaypointPlaneNormal = u14;
			v31.CurrentWaypointPlaneDistance = 0;
		end;
		v31.CurrentWaypointNeedsJump = p31.Action == Enum.PathWaypointAction.Jump;
		v31.CurrentWaypointPosition = p31.Position;
		v31.CurrentPoint = p32;
		v31.Timeout = 0;
	end;
	function v31.Start(p33, p34)
		if not v31.AgentCanFollowPath then
			v31.PathFailed:Fire();
			return;
		end;
		if v31.Started then
			return;
		end;
		v31.Started = true;
		u20.CancelFailureAnimation();
		if u19 and (p34 == nil or p34) then
			local v54, v55 = u20.CreatePathDisplay(v31.pointList, v31.OriginalTargetPoint);
			v31.stopTraverseFunc = v54;
			v31.setPointFunc = v55;
		end;
		if not (#v31.pointList > 0) then
			v31.PathFailed:Fire();
			if v31.stopTraverseFunc then
				v31.stopTraverseFunc();
			end;
			return;
		end;
		v31.HumanoidOffsetFromPath = Vector3.new(0, v31.pointList[1].Position.Y - v31.OriginPoint.Y, 0);
		v31.CurrentHumanoidPosition = v31.Humanoid.RootPart.Position + v31.HumanoidOffsetFromPath;
		v31.CurrentHumanoidVelocity = v31.Humanoid.RootPart.Velocity;
		v31.SeatedConn = v31.Humanoid.Seated:Connect(function(p35, p36)
			v31:OnPathInterrupted();
		end);
		v31.DiedConn = v31.Humanoid.Died:Connect(function()
			v31:OnPathInterrupted();
		end);
		v31.TeleportedConn = v31.Humanoid.RootPart:GetPropertyChangedSignal("CFrame"):Connect(function()
			v31:OnPathInterrupted();
		end);
		v31.CurrentPoint = 1;
		v31:OnPointReached(true);
	end;
	local v56, v57 = l__Workspace__2:FindPartOnRayWithIgnoreList(Ray.new(v31.TargetPoint + v31.TargetSurfaceNormal * 1.5, Vector3.new(0, -1, 0) * 50), u22());
	if v56 then
		v31.TargetPoint = v57;
	end;
	v31:ComputePath();
	return v31;
end;
local function u32(p37, p38, p39, p40, p41)
	if u23 then
		u26();
	end;
	u23 = p37;
	p37:Start(p41);
	u24 = p37.Finished.Event:Connect(function()
		u26();
		if p39 then
			local v58 = u27(p40);
			if v58 then
				v58:Activate();
			end;
		end;
	end);
	u25 = p37.PathFailed.Event:Connect(function()
		u26();
		if p41 == nil or p41 then
			if u28 and (not u23 or not u23:IsActive()) then
				u20.PlayFailureAnimation();
			end;
			u20.DisplayFailureWaypoint(p38);
		end;
	end);
end;
local function u33(p42)
	if u23 and u23:IsActive() then
		u23:Cancel();
	end;
	if u28 then
		u20.PlayFailureAnimation();
	end;
	u20.DisplayFailureWaypoint(p42);
end;
function OnTap(p43, p44, p45)
	local l__CurrentCamera__59 = l__Workspace__2.CurrentCamera;
	local l__Character__60 = l__LocalPlayer__4.Character;
	if not u29() then
		return;
	end;
	if #p43 ~= 1 then
		if p44 then
			if l__CurrentCamera__59 then
				local v61 = l__CurrentCamera__59:ScreenPointToRay(p43[1].x, p43[1].y);
				local v62 = u3(l__LocalPlayer__4);
				local v63, v64, v65 = v5.Raycast(Ray.new(v61.Origin, v61.Direction * 1000), true, u22());
				local v66, v67 = v5.FindCharacterAncestor(v63);
				if p45 then
					if v67 then
						if l__StarterGui__30:GetCore("AvatarContextMenuEnabled") then
							if l__Players__3:GetPlayerFromCharacter(v67.Parent) then
								u26();
								return;
							end;
						end;
					end;
				end;
				if p44 then
					v64 = p44;
					v66 = nil;
				end;
				if v64 then
					if l__Character__60 then
						u26();
						local v68 = u31(v64, v65);
						if v68:IsValidPath() then
							u32(v68, v64, v66, l__Character__60);
							return;
						else
							v68:Cleanup();
							u33(v64);
							return;
						end;
					end;
				end;
			end;
		elseif 2 <= #p43 then
			if l__CurrentCamera__59 then
				local v69 = u27(l__Character__60);
				if v69 then
					v69:Activate();
				end;
			end;
		end;
	elseif l__CurrentCamera__59 then
		v61 = l__CurrentCamera__59:ScreenPointToRay(p43[1].x, p43[1].y);
		v62 = u3(l__LocalPlayer__4);
		v63, v64, v65 = v5.Raycast(Ray.new(v61.Origin, v61.Direction * 1000), true, u22());
		v66, v67 = v5.FindCharacterAncestor(v63);
		if p45 then
			if v67 then
				if l__StarterGui__30:GetCore("AvatarContextMenuEnabled") then
					if l__Players__3:GetPlayerFromCharacter(v67.Parent) then
						u26();
						return;
					end;
				end;
			end;
		end;
		if p44 then
			v64 = p44;
			v66 = nil;
		end;
		if v64 then
			if l__Character__60 then
				u26();
				v68 = u31(v64, v65);
				if v68:IsValidPath() then
					u32(v68, v64, v66, l__Character__60);
					return;
				else
					v68:Cleanup();
					u33(v64);
					return;
				end;
			end;
		end;
	end;
end;
local v70 = require(script.Parent:WaitForChild("Keyboard"));
local v71 = setmetatable({}, v70);
v71.__index = v71;
function v71.new(p46)
	local v72 = setmetatable(v70.new(p46), v71);
	v72.fingerTouches = {};
	v72.numUnsunkTouches = 0;
	v72.mouse1Down = tick();
	v72.mouse1DownPos = Vector2.new();
	v72.mouse2DownTime = tick();
	v72.mouse2DownPos = Vector2.new();
	v72.mouse2UpTime = tick();
	v72.keyboardMoveVector = u14;
	v72.tapConn = nil;
	v72.inputBeganConn = nil;
	v72.inputChangedConn = nil;
	v72.inputEndedConn = nil;
	v72.humanoidDiedConn = nil;
	v72.characterChildAddedConn = nil;
	v72.onCharacterAddedConn = nil;
	v72.characterChildRemovedConn = nil;
	v72.renderSteppedConn = nil;
	v72.menuOpenedConnection = nil;
	v72.running = false;
	v72.wasdEnabled = false;
	return v72;
end;
local function u34(p47)
	if p47 then
		p47:Disconnect();
	end;
end;
function v71.DisconnectEvents(p48)
	u34(p48.tapConn);
	u34(p48.inputBeganConn);
	u34(p48.inputChangedConn);
	u34(p48.inputEndedConn);
	u34(p48.humanoidDiedConn);
	u34(p48.characterChildAddedConn);
	u34(p48.onCharacterAddedConn);
	u34(p48.renderSteppedConn);
	u34(p48.characterChildRemovedConn);
	u34(p48.menuOpenedConnection);
end;
function v71.OnTouchBegan(p49, p50, p51)
	if p49.fingerTouches[p50] == nil and not p51 then
		p49.numUnsunkTouches = p49.numUnsunkTouches + 1;
	end;
	p49.fingerTouches[p50] = p51;
end;
function v71.OnTouchChanged(p52, p53, p54)
	if p52.fingerTouches[p53] == nil then
		p52.fingerTouches[p53] = p54;
		if not p54 then
			p52.numUnsunkTouches = p52.numUnsunkTouches + 1;
		end;
	end;
end;
function v71.OnTouchEnded(p55, p56, p57)
	if p55.fingerTouches[p56] ~= nil and p55.fingerTouches[p56] == false then
		p55.numUnsunkTouches = p55.numUnsunkTouches - 1;
	end;
	p55.fingerTouches[p56] = nil;
end;
local l__UserInputService__35 = game:GetService("UserInputService");
local u36 = {
	[Enum.KeyCode.W] = true, 
	[Enum.KeyCode.A] = true, 
	[Enum.KeyCode.S] = true, 
	[Enum.KeyCode.D] = true, 
	[Enum.KeyCode.Up] = true, 
	[Enum.KeyCode.Down] = true
};
local l__GuiService__37 = game:GetService("GuiService");
function v71.OnCharacterAdded(p58, p59)
	p58:DisconnectEvents();
	p58.inputBeganConn = l__UserInputService__35.InputBegan:Connect(function(p60, p61)
		if p60.UserInputType == Enum.UserInputType.Touch then
			p58:OnTouchBegan(p60, p61);
		end;
		if p58.wasdEnabled and p61 == false and p60.UserInputType == Enum.UserInputType.Keyboard and u36[p60.KeyCode] then
			u26();
			u20.CancelFailureAnimation();
		end;
		if p60.UserInputType == Enum.UserInputType.MouseButton1 then
			p58.mouse1DownTime = tick();
			p58.mouse1DownPos = p60.Position;
		end;
		if p60.UserInputType == Enum.UserInputType.MouseButton2 then
			p58.mouse2DownTime = tick();
			p58.mouse2DownPos = p60.Position;
		end;
	end);
	p58.inputChangedConn = l__UserInputService__35.InputChanged:Connect(function(p62, p63)
		if p62.UserInputType == Enum.UserInputType.Touch then
			p58:OnTouchChanged(p62, p63);
		end;
	end);
	p58.inputEndedConn = l__UserInputService__35.InputEnded:Connect(function(p64, p65)
		if p64.UserInputType == Enum.UserInputType.Touch then
			p58:OnTouchEnded(p64, p65);
		end;
		if p64.UserInputType == Enum.UserInputType.MouseButton2 then
			p58.mouse2UpTime = tick();
			local l__Position__73 = p64.Position;
			if p58.mouse2UpTime - p58.mouse2DownTime < 0.25 and (l__Position__73 - p58.mouse2DownPos).magnitude < 5 and (u23 or p58.keyboardMoveVector.Magnitude <= 0) then
				OnTap({ l__Position__73 });
			end;
		end;
	end);
	p58.tapConn = l__UserInputService__35.TouchTap:Connect(function(p66, p67)
		if not p67 then
			OnTap(p66, nil, true);
		end;
	end);
	p58.menuOpenedConnection = l__GuiService__37.MenuOpened:Connect(function()
		u26();
	end);
	local function u38(p68)
		if l__UserInputService__35.TouchEnabled and p68:IsA("Tool") then
			p68.ManualActivationOnly = true;
		end;
		if p68:IsA("Humanoid") then
			u34(p58.humanoidDiedConn);
			p58.humanoidDiedConn = p68.Died:Connect(function()

			end);
		end;
	end;
	p58.characterChildAddedConn = p59.ChildAdded:Connect(function(p69)
		u38(p69);
	end);
	p58.characterChildRemovedConn = p59.ChildRemoved:Connect(function(p70)
		if l__UserInputService__35.TouchEnabled and p70:IsA("Tool") then
			p70.ManualActivationOnly = false;
		end;
	end);
	for v74, v75 in pairs(p59:GetChildren()) do
		u38(v75);
	end;
end;
function v71.Start(p71)
	p71:Enable(true);
end;
function v71.Stop(p72)
	p72:Enable(false);
end;
function v71.CleanupPath(p73)
	u26();
end;
function v71.Enable(p74, p75, p76, p77)
	if p75 then
		if not p74.running then
			if l__LocalPlayer__4.Character then
				p74:OnCharacterAdded(l__LocalPlayer__4.Character);
			end;
			p74.onCharacterAddedConn = l__LocalPlayer__4.CharacterAdded:Connect(function(p78)
				p74:OnCharacterAdded(p78);
			end);
			p74.running = true;
		end;
		p74.touchJumpController = p77;
		if p74.touchJumpController then
			p74.touchJumpController:Enable(p74.jumpEnabled);
		end;
	else
		if p74.running then
			p74:DisconnectEvents();
			u26();
			if l__UserInputService__35.TouchEnabled then
				local l__Character__76 = l__LocalPlayer__4.Character;
				if l__Character__76 then
					for v77, v78 in pairs(l__Character__76:GetChildren()) do
						if v78:IsA("Tool") then
							v78.ManualActivationOnly = false;
						end;
					end;
				end;
			end;
			p74.running = false;
		end;
		if p74.touchJumpController and not p74.jumpEnabled then
			p74.touchJumpController:Enable(true);
		end;
		p74.touchJumpController = nil;
	end;
	if l__UserInputService__35.KeyboardEnabled and p75 ~= p74.enabled then
		p74.forwardValue = 0;
		p74.backwardValue = 0;
		p74.leftValue = 0;
		p74.rightValue = 0;
		p74.moveVector = u14;
		if p75 then
			p74:BindContextActions();
			p74:ConnectFocusEventListeners();
		else
			p74:UnbindContextActions();
			p74:DisconnectFocusEventListeners();
		end;
	end;
	p74.wasdEnabled = p75 and p76 or false;
	p74.enabled = p75;
end;
function v71.OnRenderStepped(p79, p80)
	p79.isJumping = false;
	if u23 then
		u23:OnRenderStepped(p80);
		if u23 then
			p79.moveVector = u23.NextActionMoveDirection;
			p79.moveVectorIsCameraRelative = false;
			if u23.NextActionJump then
				p79.isJumping = true;
			end;
		else
			p79.moveVector = p79.keyboardMoveVector;
			p79.moveVectorIsCameraRelative = true;
		end;
	else
		p79.moveVector = p79.keyboardMoveVector;
		p79.moveVectorIsCameraRelative = true;
	end;
	if p79.jumpRequested then
		p79.isJumping = true;
	end;
end;
function v71.UpdateMovement(p81, p82)
	if p82 == Enum.UserInputState.Cancel then
		p81.keyboardMoveVector = u14;
		return;
	end;
	if p81.wasdEnabled then
		p81.keyboardMoveVector = Vector3.new(p81.leftValue + p81.rightValue, 0, p81.forwardValue + p81.backwardValue);
	end;
end;
function v71.UpdateJump(p83)

end;
function v71.SetShowPath(p84, p85)
	u19 = p85;
end;
function v71.GetShowPath(p86)
	return u19;
end;
function v71.SetWaypointTexture(p87, p88)
	u20.SetWaypointTexture(p88);
end;
function v71.GetWaypointTexture(p89)
	return u20.GetWaypointTexture();
end;
function v71.SetWaypointRadius(p90, p91)
	u20.SetWaypointRadius(p91);
end;
function v71.GetWaypointRadius(p92)
	return u20.GetWaypointRadius();
end;
function v71.SetEndWaypointTexture(p93, p94)
	u20.SetEndWaypointTexture(p94);
end;
function v71.GetEndWaypointTexture(p95)
	return u20.GetEndWaypointTexture();
end;
function v71.SetWaypointsAlwaysOnTop(p96, p97)
	u20.SetWaypointsAlwaysOnTop(p97);
end;
function v71.GetWaypointsAlwaysOnTop(p98)
	return u20.GetWaypointsAlwaysOnTop();
end;
function v71.SetFailureAnimationEnabled(p99, p100)
	u28 = p100;
end;
function v71.GetFailureAnimationEnabled(p101)
	return u28;
end;
local function u39(p102)
	if p102 == u5 then
		return;
	end;
	if u6 then
		u6:Disconnect();
		u6 = nil;
	end;
	if u7 then
		u7:Disconnect();
		u7 = nil;
	end;
	u5 = p102;
	u8 = { u9() };
	if u5 ~= nil then
		for v79, v80 in ipairs((l__CollectionService__10:GetTagged(u5))) do
			table.insert(u8, v80);
		end;
		u6 = l__CollectionService__10:GetInstanceAddedSignal(u5):Connect(function(p103)
			table.insert(u8, p103);
		end);
		u7 = l__CollectionService__10:GetInstanceRemovedSignal(u5):Connect(function(p104)
			for v81 = 1, #u8 do
				if u8[v81] == p104 then
					u8[v81] = u8[#u8];
					table.remove(u8);
					return;
				end;
			end;
		end);
	end;
end;
function v71.SetIgnoredPartsTag(p105, p106)
	u39(p106);
end;
function v71.GetIgnoredPartsTag(p107)
	return u5;
end;
function v71.SetUseDirectPath(p108, p109)
	u13 = p109;
end;
function v71.GetUseDirectPath(p110)
	return u13;
end;
function v71.SetAgentSizeIncreaseFactor(p111, p112)
	u15 = 1 + p112 / 100;
end;
function v71.GetAgentSizeIncreaseFactor(p113)
	return (u15 - 1) * 100;
end;
function v71.SetUnreachableWaypointTimeout(p114, p115)
	u21 = p115;
end;
function v71.GetUnreachableWaypointTimeout(p116)
	return u21;
end;
function v71.SetUserJumpEnabled(p117, p118)
	p117.jumpEnabled = p118;
	if p117.touchJumpController then
		p117.touchJumpController:Enable(p118);
	end;
end;
function v71.GetUserJumpEnabled(p119)
	return p119.jumpEnabled;
end;
function v71.MoveTo(p120, p121, p122, p123)
	local l__Character__82 = l__LocalPlayer__4.Character;
	if l__Character__82 == nil then
		return false;
	end;
	local v83 = u31(p121, Vector3.new(0, 1, 0), p123);
	if not v83 or not v83:IsValidPath() then
		return false;
	end;
	u32(v83, p121, nil, l__Character__82, p122);
	return true;
end;
return v71;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1031"><Properties><string name="Name">BaseCharacterController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local u1 = Vector3.new(0, 0, 0);
function v1.new()
	local v2 = setmetatable({}, v1);
	v2.enabled = false;
	v2.moveVector = u1;
	v2.moveVectorIsCameraRelative = true;
	v2.isJumping = false;
	return v2;
end;
function v1.OnRenderStepped(p1, p2)

end;
function v1.GetMoveVector(p3)
	return p3.moveVector;
end;
function v1.IsMoveVectorCameraRelative(p4)
	return p4.moveVectorIsCameraRelative;
end;
function v1.GetIsJumping(p5)
	return p5.isJumping;
end;
function v1.Enable(p6, p7)
	error("BaseCharacterController:Enable must be overridden in derived classes and should not be called.");
	return false;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1038"><Properties><string name="Name">ClickToMoveDisplay</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = Vector2.new(0, 1);
local v3 = Vector2.new(0.1, 0.5);
local v4 = Vector2.new(-0.1, 0.5);
local l__TweenService__5 = game:GetService("TweenService");
local l__RunService__6 = game:GetService("RunService");
local l__Workspace__7 = game:GetService("Workspace");
local l__LocalPlayer__8 = game:GetService("Players").LocalPlayer;
local u1 = Vector2.new(1.5, 1.5);
local u2 = false;
local u3 = "rbxasset://textures/ui/traildot.png";
local u4 = UDim2.new(0, 42, 0, 50);
local u5 = Vector2.new(0, 0.5);
local u6 = "rbxasset://textures/ui/waypoint.png";
local u7 = Vector2.new(0, 0.5);
local function v9()
	local v10 = Instance.new("Part");
	v10.Size = Vector3.new(1, 1, 1);
	v10.Anchored = true;
	v10.CanCollide = false;
	v10.Name = "TrailDot";
	v10.Transparency = 1;
	local v11 = Instance.new("ImageHandleAdornment");
	v11.Name = "TrailDotImage";
	v11.Size = u1;
	v11.SizeRelativeOffset = Vector3.new(0, 0, -0.1);
	v11.AlwaysOnTop = u2;
	v11.Image = u3;
	v11.Adornee = v10;
	v11.Parent = v10;
	local v12 = Instance.new("Part");
	v12.Size = Vector3.new(2, 2, 2);
	v12.Anchored = true;
	v12.CanCollide = false;
	v12.Name = "EndWaypoint";
	v12.Transparency = 1;
	local v13 = Instance.new("ImageHandleAdornment");
	v13.Name = "TrailDotImage";
	v13.Size = u1;
	v13.SizeRelativeOffset = Vector3.new(0, 0, -0.1);
	v13.AlwaysOnTop = u2;
	v13.Image = u3;
	v13.Adornee = v12;
	v13.Parent = v12;
	local v14 = Instance.new("BillboardGui");
	v14.Name = "EndWaypointBillboard";
	v14.Size = u4;
	v14.LightInfluence = 0;
	v14.SizeOffset = u5;
	v14.AlwaysOnTop = true;
	v14.Adornee = v12;
	v14.Parent = v12;
	local v15 = Instance.new("ImageLabel");
	v15.Image = u6;
	v15.BackgroundTransparency = 1;
	v15.Size = UDim2.new(1, 0, 1, 0);
	v15.Parent = v14;
	local v16 = Instance.new("Part");
	v16.Size = Vector3.new(2, 2, 2);
	v16.Anchored = true;
	v16.CanCollide = false;
	v16.Name = "FailureWaypoint";
	v16.Transparency = 1;
	local v17 = Instance.new("ImageHandleAdornment");
	v17.Name = "TrailDotImage";
	v17.Size = u1;
	v17.SizeRelativeOffset = Vector3.new(0, 0, -0.1);
	v17.AlwaysOnTop = u2;
	v17.Image = u3;
	v17.Adornee = v16;
	v17.Parent = v16;
	local v18 = Instance.new("BillboardGui");
	v18.Name = "FailureWaypointBillboard";
	v18.Size = u4;
	v18.LightInfluence = 0;
	v18.SizeOffset = u7;
	v18.AlwaysOnTop = true;
	v18.Adornee = v16;
	v18.Parent = v16;
	local v19 = Instance.new("Frame");
	v19.BackgroundTransparency = 1;
	v19.Size = UDim2.new(0, 0, 0, 0);
	v19.Position = UDim2.new(0.5, 0, 1, 0);
	v19.Parent = v18;
	local v20 = Instance.new("ImageLabel");
	v20.Image = u6;
	v20.BackgroundTransparency = 1;
	v20.Position = UDim2.new(0, -u4.X.Offset / 2, 0, -u4.Y.Offset);
	v20.Size = u4;
	v20.Parent = v19;
	return v10, v12, v16;
end;
local v21, v22, v23 = v9();
local function u8()
	local l__CurrentCamera__24 = l__Workspace__7.CurrentCamera;
	local v25 = l__CurrentCamera__24:FindFirstChild("ClickToMoveDisplay");
	if not v25 then
		v25 = Instance.new("Model");
		v25.Name = "ClickToMoveDisplay";
		v25.Parent = l__CurrentCamera__24;
	end;
	return v25;
end;
local v26 = {};
v26.__index = v26;
function v26.Destroy(p1)
	p1.DisplayModel:Destroy();
end;
local u9 = v21;
local function u10(p2, p3)
	local v27, v28, v29 = l__Workspace__7:FindPartOnRayWithIgnoreList(Ray.new(p3 + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0)), { l__Workspace__7.CurrentCamera, l__LocalPlayer__8.Character });
	if v27 then
		p2.CFrame = CFrame.new(v28, v28 + v29);
		p2.Parent = u8();
	end;
end;
function v26.NewDisplayModel(p4, p5)
	local v30 = u9:Clone();
	u10(v30, p5);
	return v30;
end;
function v26.new(p6, p7)
	local v31 = setmetatable({}, v26);
	v31.DisplayModel = v31:NewDisplayModel(p6);
	v31.ClosestWayPoint = p7;
	return v31;
end;
local v32 = {};
v32.__index = v32;
function v32.Destroy(p8)
	p8.Destroyed = true;
	p8.Tween:Cancel();
	p8.DisplayModel:Destroy();
end;
local u11 = v22;
function v32.NewDisplayModel(p9, p10)
	local v33 = u11:Clone();
	u10(v33, p10);
	return v33;
end;
function v32.CreateTween(p11)
	local v34 = l__TweenService__5:Create(p11.DisplayModel.EndWaypointBillboard, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, -1, true), {
		SizeOffset = v2
	});
	v34:Play();
	return v34;
end;
function v32.TweenInFrom(p12, p13)
	p12.DisplayModel.EndWaypointBillboard.StudsOffset = Vector3.new(0, (p13 - p12.DisplayModel.Position).Y, 0);
	local v35 = l__TweenService__5:Create(p12.DisplayModel.EndWaypointBillboard, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
		StudsOffset = Vector3.new(0, 0, 0)
	});
	v35:Play();
	return v35;
end;
function v32.new(p14, p15, p16)
	local v36 = setmetatable({}, v32);
	v36.DisplayModel = v36:NewDisplayModel(p14);
	v36.Destroyed = false;
	if p16 and (p16 - p14).magnitude > 5 then
		v36.Tween = v36:TweenInFrom(p16);
		coroutine.wrap(function()
			v36.Tween.Completed:Wait();
			if not v36.Destroyed then
				v36.Tween = v36:CreateTween();
			end;
		end)();
	else
		v36.Tween = v36:CreateTween();
	end;
	v36.ClosestWayPoint = p15;
	return v36;
end;
local v37 = {};
v37.__index = v37;
function v37.Hide(p17)
	p17.DisplayModel.Parent = nil;
end;
function v37.Destroy(p18)
	p18.DisplayModel:Destroy();
end;
local u12 = v23;
function v37.NewDisplayModel(p19, p20)
	local v38 = u12:Clone();
	u10(v38, p20);
	local v39, v40, v41 = l__Workspace__7:FindPartOnRayWithIgnoreList(Ray.new(p20 + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0)), { l__Workspace__7.CurrentCamera, l__LocalPlayer__8.Character });
	if v39 then
		v38.CFrame = CFrame.new(v40, v40 + v41);
		v38.Parent = u8();
	end;
	return v38;
end;
function v37.RunFailureTween(p21)
	wait(0.125);
	local v42 = TweenInfo.new(0.0625, Enum.EasingStyle.Sine, Enum.EasingDirection.Out);
	local v43 = l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard, v42, {
		SizeOffset = v3
	});
	v43:Play();
	l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard.Frame, v42, {
		Rotation = 10
	}):Play();
	v43.Completed:wait();
	local v44 = l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard, TweenInfo.new(0.125, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 3, true), {
		SizeOffset = v4
	});
	v44:Play();
	local v45 = TweenInfo.new(0.125, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 3, true);
	l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard.Frame.ImageLabel, v45, {
		ImageColor3 = Color3.new(0.75, 0.75, 0.75)
	}):Play();
	l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard.Frame, v45, {
		Rotation = -10
	}):Play();
	v44.Completed:wait();
	local v46 = TweenInfo.new(0.0625, Enum.EasingStyle.Sine, Enum.EasingDirection.Out);
	local v47 = l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard, v46, {
		SizeOffset = u7
	});
	v47:Play();
	l__TweenService__5:Create(p21.DisplayModel.FailureWaypointBillboard.Frame, v46, {
		Rotation = 0
	}):Play();
	v47.Completed:wait();
	wait(0.125);
end;
function v37.new(p22)
	local v48 = setmetatable({}, v37);
	v48.DisplayModel = v48:NewDisplayModel(p22);
	return v48;
end;
local v49 = Instance.new("Animation");
v49.AnimationId = "rbxassetid://2874840706";
local u13 = nil;
local u14 = 0;
local function u15(p23, p24)
	local v50 = {};
	local v51 = 1;
	for v52 = 1, #p23 - 1 do
		local v53 = false;
		if v52 % 2 == 0 then
			v53 = not ((p23[v52].Position - p23[#p23].Position).magnitude < 3);
		end;
		if v53 then
			v50[v51] = v26.new(p23[v52].Position, v52);
			v51 = v51 + 1;
		end;
	end;
	table.insert(v50, (v32.new(p23[#p23].Position, #p23, p24)));
	local v54 = {};
	local v55 = 1;
	for v56 = #v50, 1, -1 do
		v54[v55] = v50[v56];
		v55 = v55 + 1;
	end;
	return v54;
end;
local function u16(p25, p26)
	return p26 * (1 + 1.5 * (math.clamp(p25 - 10, 0, 90) / 90));
end;
function v1.CreatePathDisplay(p27, p28)
	u14 = u14 + 1;
	local u17 = u15(p27, p28);
	local u18 = "ClickToMoveResizeTrail" .. u14;
	l__RunService__6:BindToRenderStep(u18, Enum.RenderPriority.Camera.Value - 1, function()
		if #u17 == 0 then
			l__RunService__6:UnbindFromRenderStep(u18);
			return;
		end;
		local l__p__57 = l__Workspace__7.CurrentCamera.CFrame.p;
		for v58 = 1, #u17 do
			local l__TrailDotImage__59 = u17[v58].DisplayModel:FindFirstChild("TrailDotImage");
			if l__TrailDotImage__59 then
				l__TrailDotImage__59.Size = u16((u17[v58].DisplayModel.Position - l__p__57).magnitude, u1);
			end;
		end;
	end);
	local function u19(p29)
		for v60 = #u17, 1, -1 do
			local v61 = u17[v60];
			if not (v61.ClosestWayPoint <= p29) then
				break;
			end;
			v61:Destroy();
			u17[v60] = nil;
		end;
	end;
	return function()
		u19(#p27);
	end, u19;
end;
local u20 = nil;
function v1.DisplayFailureWaypoint(p30)
	if u20 then
		u20:Hide();
	end;
	local v62 = v37.new(p30);
	u20 = v62;
	local u21 = v62;
	coroutine.wrap(function()
		u21:RunFailureTween();
		u21:Destroy();
		u21 = nil;
	end)();
end;
function v1.CreateEndWaypoint(p31)
	return v32.new(p31);
end;
local function u22()
	local l__Character__63 = l__LocalPlayer__8.Character;
	if not l__Character__63 then
		return;
	end;
	return l__Character__63:FindFirstChildOfClass("Humanoid");
end;
local function u23(p32)
	if p32 == nil then
		return u13;
	end;
	u13 = p32:LoadAnimation(v49);
	u13.Priority = Enum.AnimationPriority.Action;
	u13.Looped = false;
	return u13;
end;
function v1.PlayFailureAnimation()
	local v64 = u22();
	if v64 then
		u23(v64):Play();
	end;
end;
function v1.CancelFailureAnimation()
	if u13 ~= nil and u13.IsPlaying then
		u13:Stop();
	end;
end;
function v1.SetWaypointTexture(p33)
	u3 = p33;
	local v65, v66, v67 = v9();
	u9 = v65;
	u11 = v66;
	u12 = v67;
end;
function v1.GetWaypointTexture()
	return u3;
end;
function v1.SetWaypointRadius(p34)
	u1 = Vector2.new(p34, p34);
	local v68, v69, v70 = v9();
	u9 = v68;
	u11 = v69;
	u12 = v70;
end;
function v1.GetWaypointRadius()
	return u1.X;
end;
function v1.SetEndWaypointTexture(p35)
	u6 = p35;
	local v71, v72, v73 = v9();
	u9 = v71;
	u11 = v72;
	u12 = v73;
end;
function v1.GetEndWaypointTexture()
	return u6;
end;
function v1.SetWaypointsAlwaysOnTop(p36)
	u2 = p36;
	local v74, v75, v76 = v9();
	u9 = v74;
	u11 = v75;
	u12 = v76;
end;
function v1.GetWaypointsAlwaysOnTop()
	return u2;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1045"><Properties><string name="Name">Gamepad</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent:WaitForChild("BaseCharacterController"));
local v2 = setmetatable({}, v1);
v2.__index = v2;
local l__Enum_UserInputType_None__1 = Enum.UserInputType.None;
function v2.new(p1)
	local v3 = setmetatable(v1.new(), v2);
	v3.CONTROL_ACTION_PRIORITY = p1;
	v3.forwardValue = 0;
	v3.backwardValue = 0;
	v3.leftValue = 0;
	v3.rightValue = 0;
	v3.activeGamepad = l__Enum_UserInputType_None__1;
	v3.gamepadConnectedConn = nil;
	v3.gamepadDisconnectedConn = nil;
	return v3;
end;
local l__UserInputService__2 = game:GetService("UserInputService");
local u3 = Vector3.new(0, 0, 0);
function v2.Enable(p2, p3)
	if not l__UserInputService__2.GamepadEnabled then
		return false;
	end;
	if p3 == p2.enabled then
		return true;
	end;
	p2.forwardValue = 0;
	p2.backwardValue = 0;
	p2.leftValue = 0;
	p2.rightValue = 0;
	p2.moveVector = u3;
	p2.isJumping = false;
	if p3 then
		p2.activeGamepad = p2:GetHighestPriorityGamepad();
		if p2.activeGamepad == l__Enum_UserInputType_None__1 then
			return false;
		end;
		p2:BindContextActions();
		p2:ConnectGamepadConnectionListeners();
	else
		p2:UnbindContextActions();
		p2:DisconnectGamepadConnectionListeners();
		p2.activeGamepad = l__Enum_UserInputType_None__1;
	end;
	p2.enabled = p3;
	return true;
end;
function v2.GetHighestPriorityGamepad(p4)
	local v4 = l__Enum_UserInputType_None__1;
	for v5, v6 in pairs((l__UserInputService__2:GetConnectedGamepads())) do
		if v6.Value < v4.Value then
			v4 = v6;
		end;
	end;
	return v4;
end;
local l__ContextActionService__4 = game:GetService("ContextActionService");
function v2.BindContextActions(p5)
	if p5.activeGamepad == l__Enum_UserInputType_None__1 then
		return false;
	end;
	l__ContextActionService__4:BindActivate(p5.activeGamepad, Enum.KeyCode.ButtonR2);
	l__ContextActionService__4:BindActionAtPriority("jumpAction", function(p6, p7, p8)
		p5.isJumping = p7 == Enum.UserInputState.Begin;
		return Enum.ContextActionResult.Sink;
	end, false, p5.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonA);
	l__ContextActionService__4:BindActionAtPriority("moveThumbstick", function(p9, p10, p11)
		if p10 == Enum.UserInputState.Cancel then
			p5.moveVector = u3;
			return Enum.ContextActionResult.Sink;
		end;
		if p5.activeGamepad ~= p11.UserInputType then
			return Enum.ContextActionResult.Pass;
		end;
		if p11.KeyCode ~= Enum.KeyCode.Thumbstick1 then
			return;
		end;
		if p11.Position.magnitude > 0.2 then
			p5.moveVector = Vector3.new(p11.Position.X, 0, -p11.Position.Y);
		else
			p5.moveVector = u3;
		end;
		return Enum.ContextActionResult.Sink;
	end, false, p5.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Thumbstick1);
	return true;
end;
function v2.UnbindContextActions(p12)
	if p12.activeGamepad ~= l__Enum_UserInputType_None__1 then
		l__ContextActionService__4:UnbindActivate(p12.activeGamepad, Enum.KeyCode.ButtonR2);
	end;
	l__ContextActionService__4:UnbindAction("moveThumbstick");
	l__ContextActionService__4:UnbindAction("jumpAction");
end;
function v2.OnNewGamepadConnected(p13)
	local v7 = p13:GetHighestPriorityGamepad();
	if v7 == p13.activeGamepad then
		return;
	end;
	if v7 == l__Enum_UserInputType_None__1 then
		warn("Gamepad:OnNewGamepadConnected found no connected gamepads");
		p13:UnbindContextActions();
		return;
	end;
	if p13.activeGamepad ~= l__Enum_UserInputType_None__1 then
		p13:UnbindContextActions();
	end;
	p13.activeGamepad = v7;
	p13:BindContextActions();
end;
function v2.OnCurrentGamepadDisconnected(p14)
	if p14.activeGamepad ~= l__Enum_UserInputType_None__1 then
		l__ContextActionService__4:UnbindActivate(p14.activeGamepad, Enum.KeyCode.ButtonR2);
	end;
	local v8 = p14:GetHighestPriorityGamepad();
	if p14.activeGamepad ~= l__Enum_UserInputType_None__1 and v8 == p14.activeGamepad then
		warn("Gamepad:OnCurrentGamepadDisconnected found the supposedly disconnected gamepad in connectedGamepads.");
		p14:UnbindContextActions();
		p14.activeGamepad = l__Enum_UserInputType_None__1;
		return;
	end;
	if v8 == l__Enum_UserInputType_None__1 then
		p14:UnbindContextActions();
		p14.activeGamepad = l__Enum_UserInputType_None__1;
		return;
	end;
	p14.activeGamepad = v8;
	l__ContextActionService__4:BindActivate(p14.activeGamepad, Enum.KeyCode.ButtonR2);
end;
function v2.ConnectGamepadConnectionListeners(p15)
	p15.gamepadConnectedConn = l__UserInputService__2.GamepadConnected:Connect(function(p16)
		p15:OnNewGamepadConnected();
	end);
	p15.gamepadDisconnectedConn = l__UserInputService__2.GamepadDisconnected:Connect(function(p17)
		if p15.activeGamepad == p17 then
			p15:OnCurrentGamepadDisconnected();
		end;
	end);
end;
function v2.DisconnectGamepadConnectionListeners(p18)
	if p18.gamepadConnectedConn then
		p18.gamepadConnectedConn:Disconnect();
		p18.gamepadConnectedConn = nil;
	end;
	if p18.gamepadDisconnectedConn then
		p18.gamepadDisconnectedConn:Disconnect();
		p18.gamepadDisconnectedConn = nil;
	end;
end;
return v2;
]]></ProtectedString></Properties></Item></Item><Item class="Folder" referent="RBX1053"><Properties><string name="Name">CameraModule</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local v2, v3 = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserRemoveTheCameraApi");
end);
local l__Players__4 = game:GetService("Players");
local l__RunService__5 = game:GetService("RunService");
local l__UserInputService__6 = game:GetService("UserInputService");
local l__UserGameSettings__7 = UserSettings():GetService("UserGameSettings");
local v8 = require(script:WaitForChild("CameraUtils"));
local v9 = require(script:WaitForChild("CameraInput"));
local v10 = require(script:WaitForChild("ClassicCamera"));
local v11 = require(script:WaitForChild("OrbitalCamera"));
local v12 = require(script:WaitForChild("LegacyCamera"));
local v13 = require(script:WaitForChild("VehicleCamera"));
local v14 = require(script:WaitForChild("Invisicam"));
local v15 = require(script:WaitForChild("Poppercam"));
local v16 = require(script:WaitForChild("TransparencyController"));
local v17 = require(script:WaitForChild("MouseLockController"));
local l__PlayerScripts__18 = l__Players__4.LocalPlayer:WaitForChild("PlayerScripts");
l__PlayerScripts__18:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Default);
l__PlayerScripts__18:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Follow);
l__PlayerScripts__18:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Classic);
l__PlayerScripts__18:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Default);
l__PlayerScripts__18:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Follow);
l__PlayerScripts__18:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Classic);
l__PlayerScripts__18:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.CameraToggle);
local u1 = { "CameraMinZoomDistance", "CameraMaxZoomDistance", "CameraMode", "DevCameraOcclusionMode", "DevComputerCameraMode", "DevTouchCameraMode", "DevComputerMovementMode", "DevTouchMovementMode", "DevEnableMouseLock" };
local u2 = { "ComputerCameraMovementMode", "ComputerMovementMode", "ControlMode", "GamepadCameraSensitivity", "MouseSensitivity", "RotationType", "TouchCameraMovementMode", "TouchMovementMode" };
function v1.new()
	local v19 = setmetatable({}, v1);
	v19.activeCameraController = nil;
	v19.activeOcclusionModule = nil;
	v19.activeTransparencyController = nil;
	v19.activeMouseLockController = nil;
	v19.currentComputerCameraMovementMode = nil;
	v19.cameraSubjectChangedConn = nil;
	v19.cameraTypeChangedConn = nil;
	for v20, v21 in pairs(l__Players__4:GetPlayers()) do
		v19:OnPlayerAdded(v21);
	end;
	l__Players__4.PlayerAdded:Connect(function(p1)
		v19:OnPlayerAdded(p1);
	end);
	v19.activeTransparencyController = v16.new();
	v19.activeTransparencyController:Enable(true);
	if not l__UserInputService__6.TouchEnabled then
		v19.activeMouseLockController = v17.new();
		local v22 = v19.activeMouseLockController:GetBindableToggleEvent();
		if v22 then
			v22:Connect(function()
				v19:OnMouseLockToggled();
			end);
		end;
	end;
	v19:ActivateCameraController(v19:GetCameraControlChoice());
	v19:ActivateOcclusionModule(l__Players__4.LocalPlayer.DevCameraOcclusionMode);
	v19:OnCurrentCameraChanged();
	l__RunService__5:BindToRenderStep("cameraRenderUpdate", Enum.RenderPriority.Camera.Value, function(p2)
		v19:Update(p2);
	end);
	for v23, v24 in pairs(u1) do
		l__Players__4.LocalPlayer:GetPropertyChangedSignal(v24):Connect(function()
			v19:OnLocalPlayerCameraPropertyChanged(v24);
		end);
	end;
	for v25, v26 in pairs(u2) do
		l__UserGameSettings__7:GetPropertyChangedSignal(v26):Connect(function()
			v19:OnUserGameSettingsPropertyChanged(v26);
		end);
	end;
	game.Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		v19:OnCurrentCameraChanged();
	end);
	v19.lastInputType = l__UserInputService__6:GetLastInputType();
	l__UserInputService__6.LastInputTypeChanged:Connect(function(p3)
		v19.lastInputType = p3;
	end);
	return v19;
end;
function v1.GetCameraMovementModeFromSettings(p4)
	if l__Players__4.LocalPlayer.CameraMode == Enum.CameraMode.LockFirstPerson then
		return v8.ConvertCameraModeEnumToStandard(Enum.ComputerCameraMovementMode.Classic);
	end;
	if l__UserInputService__6.TouchEnabled then
		local v27 = v8.ConvertCameraModeEnumToStandard(l__Players__4.LocalPlayer.DevTouchCameraMode);
		local v28 = v8.ConvertCameraModeEnumToStandard(l__UserGameSettings__7.TouchCameraMovementMode);
	else
		v27 = v8.ConvertCameraModeEnumToStandard(l__Players__4.LocalPlayer.DevComputerCameraMode);
		v28 = v8.ConvertCameraModeEnumToStandard(l__UserGameSettings__7.ComputerCameraMovementMode);
	end;
	if v27 == Enum.DevComputerCameraMovementMode.UserChoice then
		return v28;
	end;
	return v27;
end;
local u3 = {};
function v1.ActivateOcclusionModule(p5, p6)
	if p6 == Enum.DevCameraOcclusionMode.Zoom then
		local v29 = v15;
	else
		if p6 ~= Enum.DevCameraOcclusionMode.Invisicam then
			warn("CameraScript ActivateOcclusionModule called with unsupported mode");
			return;
		end;
		v29 = v14;
	end;
	p5.occlusionMode = p6;
	if p5.activeOcclusionModule and p5.activeOcclusionModule:GetOcclusionMode() == p6 then
		if not p5.activeOcclusionModule:GetEnabled() then
			p5.activeOcclusionModule:Enable(true);
		end;
		return;
	end;
	local l__activeOcclusionModule__30 = p5.activeOcclusionModule;
	p5.activeOcclusionModule = u3[v29];
	if not p5.activeOcclusionModule then
		p5.activeOcclusionModule = v29.new();
		if p5.activeOcclusionModule then
			u3[v29] = p5.activeOcclusionModule;
		end;
	end;
	if p5.activeOcclusionModule then
		if p5.activeOcclusionModule:GetOcclusionMode() ~= p6 then
			warn("CameraScript ActivateOcclusionModule mismatch: ", p5.activeOcclusionModule:GetOcclusionMode(), "~=", p6);
		end;
		if l__activeOcclusionModule__30 then
			if l__activeOcclusionModule__30 ~= p5.activeOcclusionModule then
				l__activeOcclusionModule__30:Enable(false);
			else
				warn("CameraScript ActivateOcclusionModule failure to detect already running correct module");
			end;
		end;
		if p6 == Enum.DevCameraOcclusionMode.Invisicam then
			if l__Players__4.LocalPlayer.Character then
				p5.activeOcclusionModule:CharacterAdded(l__Players__4.LocalPlayer.Character, l__Players__4.LocalPlayer);
			end;
		else
			for v31, v32 in pairs(l__Players__4:GetPlayers()) do
				if v32 and v32.Character then
					p5.activeOcclusionModule:CharacterAdded(v32.Character, v32);
				end;
			end;
			p5.activeOcclusionModule:OnCameraSubjectChanged(game.Workspace.CurrentCamera.CameraSubject);
		end;
		p5.activeOcclusionModule:Enable(true);
	end;
end;
function v1.ShouldUseVehicleCamera(p7)
	local l__CurrentCamera__33 = workspace.CurrentCamera;
	if not l__CurrentCamera__33 then
		return false;
	end;
	local l__CameraType__34 = l__CurrentCamera__33.CameraType;
	local l__CameraSubject__35 = l__CurrentCamera__33.CameraSubject;
	local v36 = true;
	if l__CameraType__34 ~= Enum.CameraType.Custom then
		v36 = l__CameraType__34 == Enum.CameraType.Follow;
	end;
	return (l__CameraSubject__35 and l__CameraSubject__35:IsA("VehicleSeat") or false) and (v36 and p7.occlusionMode ~= Enum.DevCameraOcclusionMode.Invisicam);
end;
local u4 = {};
function v1.ActivateCameraController(p8, p9, p10)
	local v37 = nil;
	if p10 ~= nil then
		if p10 == Enum.CameraType.Scriptable then
			if p8.activeCameraController then
				p8.activeCameraController:Enable(false);
				p8.activeCameraController = nil;
				return;
			end;
		elseif p10 == Enum.CameraType.Custom then
			p9 = p8:GetCameraMovementModeFromSettings();
		elseif p10 == Enum.CameraType.Track then
			p9 = Enum.ComputerCameraMovementMode.Classic;
		elseif p10 == Enum.CameraType.Follow then
			p9 = Enum.ComputerCameraMovementMode.Follow;
		elseif p10 == Enum.CameraType.Orbital then
			p9 = Enum.ComputerCameraMovementMode.Orbital;
		elseif p10 == Enum.CameraType.Attach or p10 == Enum.CameraType.Watch or p10 == Enum.CameraType.Fixed then
			v37 = v12;
		else
			warn("CameraScript encountered an unhandled Camera.CameraType value: ", p10);
		end;
	end;
	if not v37 then
		if p9 == Enum.ComputerCameraMovementMode.Classic or p9 == Enum.ComputerCameraMovementMode.Follow or p9 == Enum.ComputerCameraMovementMode.Default or p9 == Enum.ComputerCameraMovementMode.CameraToggle then
			v37 = v10;
		else
			if p9 ~= Enum.ComputerCameraMovementMode.Orbital then
				warn("ActivateCameraController did not select a module.");
				return;
			end;
			v37 = v11;
		end;
	end;
	if p8:ShouldUseVehicleCamera() then
		v37 = v13;
	end;
	if not u4[v37] then
		local v38 = v37.new();
		u4[v37] = v38;
	else
		v38 = u4[v37];
		if v38.Reset then
			v38:Reset();
		end;
	end;
	if p8.activeCameraController then
		if p8.activeCameraController ~= v38 then
			p8.activeCameraController:Enable(false);
			p8.activeCameraController = v38;
			p8.activeCameraController:Enable(true);
		elseif not p8.activeCameraController:GetEnabled() then
			p8.activeCameraController:Enable(true);
		end;
	elseif v38 ~= nil then
		p8.activeCameraController = v38;
		p8.activeCameraController:Enable(true);
	end;
	if p8.activeCameraController then
		if p9 == nil then
			if p10 ~= nil then
				p8.activeCameraController:SetCameraType(p10);
			end;
			return;
		end;
	else
		return;
	end;
	p8.activeCameraController:SetCameraMovementMode(p9);
end;
function v1.OnCameraSubjectChanged(p11)
	local l__CurrentCamera__39 = workspace.CurrentCamera;
	local v40 = l__CurrentCamera__39 and l__CurrentCamera__39.CameraSubject;
	if p11.activeTransparencyController then
		p11.activeTransparencyController:SetSubject(v40);
	end;
	if p11.activeOcclusionModule then
		p11.activeOcclusionModule:OnCameraSubjectChanged(v40);
	end;
	p11:ActivateCameraController(nil, l__CurrentCamera__39.CameraType);
end;
function v1.OnCameraTypeChanged(p12, p13)
	if p13 == Enum.CameraType.Scriptable and l__UserInputService__6.MouseBehavior == Enum.MouseBehavior.LockCenter then
		l__UserInputService__6.MouseBehavior = Enum.MouseBehavior.Default;
	end;
	p12:ActivateCameraController(nil, p13);
end;
function v1.OnCurrentCameraChanged(p14)
	local l__CurrentCamera__41 = game.Workspace.CurrentCamera;
	if not l__CurrentCamera__41 then
		return;
	end;
	if p14.cameraSubjectChangedConn then
		p14.cameraSubjectChangedConn:Disconnect();
	end;
	if p14.cameraTypeChangedConn then
		p14.cameraTypeChangedConn:Disconnect();
	end;
	p14.cameraSubjectChangedConn = l__CurrentCamera__41:GetPropertyChangedSignal("CameraSubject"):Connect(function()
		p14:OnCameraSubjectChanged(l__CurrentCamera__41.CameraSubject);
	end);
	p14.cameraTypeChangedConn = l__CurrentCamera__41:GetPropertyChangedSignal("CameraType"):Connect(function()
		p14:OnCameraTypeChanged(l__CurrentCamera__41.CameraType);
	end);
	p14:OnCameraSubjectChanged(l__CurrentCamera__41.CameraSubject);
	p14:OnCameraTypeChanged(l__CurrentCamera__41.CameraType);
end;
function v1.OnLocalPlayerCameraPropertyChanged(p15, p16)
	if p16 == "CameraMode" then
		if l__Players__4.LocalPlayer.CameraMode ~= Enum.CameraMode.LockFirstPerson then
			if l__Players__4.LocalPlayer.CameraMode == Enum.CameraMode.Classic then
				p15:ActivateCameraController(v8.ConvertCameraModeEnumToStandard((p15:GetCameraMovementModeFromSettings())));
				return;
			else
				warn("Unhandled value for property player.CameraMode: ", l__Players__4.LocalPlayer.CameraMode);
				return;
			end;
		end;
		if not p15.activeCameraController or p15.activeCameraController:GetModuleName() ~= "ClassicCamera" then
			p15:ActivateCameraController(v8.ConvertCameraModeEnumToStandard(Enum.DevComputerCameraMovementMode.Classic));
		end;
		if p15.activeCameraController then
			p15.activeCameraController:UpdateForDistancePropertyChange();
			return;
		end;
	else
		if p16 == "DevComputerCameraMode" or p16 == "DevTouchCameraMode" then
			p15:ActivateCameraController(v8.ConvertCameraModeEnumToStandard((p15:GetCameraMovementModeFromSettings())));
			return;
		end;
		if p16 == "DevCameraOcclusionMode" then
			p15:ActivateOcclusionModule(l__Players__4.LocalPlayer.DevCameraOcclusionMode);
			return;
		end;
		if p16 == "CameraMinZoomDistance" or p16 == "CameraMaxZoomDistance" then
			if p15.activeCameraController then
				p15.activeCameraController:UpdateForDistancePropertyChange();
				return;
			end;
		else
			if p16 == "DevTouchMovementMode" then
				return;
			end;
			if p16 == "DevComputerMovementMode" then
				return;
			end;
			if p16 == "DevEnableMouseLock" then

			end;
		end;
	end;
end;
function v1.OnUserGameSettingsPropertyChanged(p17, p18)
	if p18 == "ComputerCameraMovementMode" then
		p17:ActivateCameraController(v8.ConvertCameraModeEnumToStandard((p17:GetCameraMovementModeFromSettings())));
	end;
end;
function v1.Update(p19, p20)
	if p19.activeCameraController then
		p19.activeCameraController:UpdateMouseBehavior();
		local v42, v43 = p19.activeCameraController:Update(p20);
		p19.activeCameraController:ApplyVRTransform();
		if p19.activeOcclusionModule then
			local v44, v45 = p19.activeOcclusionModule:Update(p20, v42, v43);
			v42 = v44;
			v43 = v45;
		end;
		game.Workspace.CurrentCamera.CFrame = v42;
		game.Workspace.CurrentCamera.Focus = v43;
		if p19.activeTransparencyController then
			p19.activeTransparencyController:Update();
		end;
		if v9.getInputEnabled() then
			v9.resetInputForFrameEnd();
		end;
	end;
end;
function v1.GetCameraControlChoice(p21)
	local l__LocalPlayer__46 = l__Players__4.LocalPlayer;
	if not l__LocalPlayer__46 then
		return;
	end;
	if p21.lastInputType == Enum.UserInputType.Touch or l__UserInputService__6.TouchEnabled then
		if l__LocalPlayer__46.DevTouchCameraMode == Enum.DevTouchCameraMovementMode.UserChoice then
			return v8.ConvertCameraModeEnumToStandard(l__UserGameSettings__7.TouchCameraMovementMode);
		else
			return v8.ConvertCameraModeEnumToStandard(l__LocalPlayer__46.DevTouchCameraMode);
		end;
	end;
	if l__LocalPlayer__46.DevComputerCameraMode ~= Enum.DevComputerCameraMovementMode.UserChoice then
		return v8.ConvertCameraModeEnumToStandard(l__LocalPlayer__46.DevComputerCameraMode);
	end;
	return v8.ConvertCameraModeEnumToStandard((v8.ConvertCameraModeEnumToStandard(l__UserGameSettings__7.ComputerCameraMovementMode)));
end;
function v1.OnCharacterAdded(p22, p23, p24)
	if p22.activeOcclusionModule then
		p22.activeOcclusionModule:CharacterAdded(p23, p24);
	end;
end;
function v1.OnCharacterRemoving(p25, p26, p27)
	if p25.activeOcclusionModule then
		p25.activeOcclusionModule:CharacterRemoving(p26, p27);
	end;
end;
function v1.OnPlayerAdded(p28, p29)
	p29.CharacterAdded:Connect(function(p30)
		p28:OnCharacterAdded(p30, p29);
	end);
	p29.CharacterRemoving:Connect(function(p31)
		p28:OnCharacterRemoving(p31, p29);
	end);
end;
function v1.OnMouseLockToggled(p32)
	if p32.activeMouseLockController then
		local v47 = p32.activeMouseLockController:GetIsMouseLocked();
		local v48 = p32.activeMouseLockController:GetMouseLockOffset();
		if p32.activeCameraController then
			p32.activeCameraController:SetIsMouseLocked(v47);
			p32.activeCameraController:SetMouseLockOffset(v48);
		end;
	end;
end;
if v2 or v3 then
	return {};
end;
return v1.new();
]]></ProtectedString></Properties><Item class="ModuleScript" referent="RBX1059"><Properties><string name="Name">OrbitalCamera</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = Vector3.new(0, 0, 1);
local v2 = {
	InitialDistance = 25, 
	MinDistance = 10, 
	MaxDistance = 100, 
	InitialElevation = 35, 
	MinElevation = 35, 
	MaxElevation = 35, 
	ReferenceAzimuth = -45, 
	CWAzimuthTravel = 90, 
	CCWAzimuthTravel = 90, 
	UseAzimuthLimits = false
};
local v3 = require(script.Parent:WaitForChild("BaseCamera"));
local v4 = setmetatable({}, v3);
v4.__index = v4;
function v4.new()
	local v5 = setmetatable(v3.new(), v4);
	v5.lastUpdate = tick();
	v5.changedSignalConnections = {};
	v5.refAzimuthRad = nil;
	v5.curAzimuthRad = nil;
	v5.minAzimuthAbsoluteRad = nil;
	v5.maxAzimuthAbsoluteRad = nil;
	v5.useAzimuthLimits = nil;
	v5.curElevationRad = nil;
	v5.minElevationRad = nil;
	v5.maxElevationRad = nil;
	v5.curDistance = nil;
	v5.minDistance = nil;
	v5.maxDistance = nil;
	v5.gamepadDollySpeedMultiplier = 1;
	v5.lastUserPanCamera = tick();
	v5.externalProperties = {};
	v5.externalProperties.InitialDistance = 25;
	v5.externalProperties.MinDistance = 10;
	v5.externalProperties.MaxDistance = 100;
	v5.externalProperties.InitialElevation = 35;
	v5.externalProperties.MinElevation = 35;
	v5.externalProperties.MaxElevation = 35;
	v5.externalProperties.ReferenceAzimuth = -45;
	v5.externalProperties.CWAzimuthTravel = 90;
	v5.externalProperties.CCWAzimuthTravel = 90;
	v5.externalProperties.UseAzimuthLimits = false;
	v5:LoadNumberValueParameters();
	return v5;
end;
function v4.LoadOrCreateNumberValueParameter(p1, p2, p3, p4)
	local v6 = script:FindFirstChild(p2);
	if v6 and v6:isA(p3) then
		p1.externalProperties[p2] = v6.Value;
	else
		if p1.externalProperties[p2] == nil then
			return;
		end;
		v6 = Instance.new(p3);
		v6.Name = p2;
		v6.Parent = script;
		v6.Value = p1.externalProperties[p2];
	end;
	if p4 then
		if p1.changedSignalConnections[p2] then
			p1.changedSignalConnections[p2]:Disconnect();
		end;
		p1.changedSignalConnections[p2] = v6.Changed:Connect(function(p5)
			p1.externalProperties[p2] = p5;
			p4(p1);
		end);
	end;
end;
function v4.SetAndBoundsCheckAzimuthValues(p6)
	p6.minAzimuthAbsoluteRad = math.rad(p6.externalProperties.ReferenceAzimuth) - math.abs(math.rad(p6.externalProperties.CWAzimuthTravel));
	p6.maxAzimuthAbsoluteRad = math.rad(p6.externalProperties.ReferenceAzimuth) + math.abs(math.rad(p6.externalProperties.CCWAzimuthTravel));
	p6.useAzimuthLimits = p6.externalProperties.UseAzimuthLimits;
	if p6.useAzimuthLimits then
		p6.curAzimuthRad = math.max(p6.curAzimuthRad, p6.minAzimuthAbsoluteRad);
		p6.curAzimuthRad = math.min(p6.curAzimuthRad, p6.maxAzimuthAbsoluteRad);
	end;
end;
function v4.SetAndBoundsCheckElevationValues(p7)
	local v7 = math.max(p7.externalProperties.MinElevation, -80);
	local v8 = math.min(p7.externalProperties.MaxElevation, 80);
	p7.minElevationRad = math.rad(math.min(v7, v8));
	p7.maxElevationRad = math.rad(math.max(v7, v8));
	p7.curElevationRad = math.max(p7.curElevationRad, p7.minElevationRad);
	p7.curElevationRad = math.min(p7.curElevationRad, p7.maxElevationRad);
end;
function v4.SetAndBoundsCheckDistanceValues(p8)
	p8.minDistance = p8.externalProperties.MinDistance;
	p8.maxDistance = p8.externalProperties.MaxDistance;
	p8.curDistance = math.max(p8.curDistance, p8.minDistance);
	p8.curDistance = math.min(p8.curDistance, p8.maxDistance);
end;
function v4.LoadNumberValueParameters(p9)
	p9:LoadOrCreateNumberValueParameter("InitialElevation", "NumberValue", nil);
	p9:LoadOrCreateNumberValueParameter("InitialDistance", "NumberValue", nil);
	p9:LoadOrCreateNumberValueParameter("ReferenceAzimuth", "NumberValue", p9.SetAndBoundsCheckAzimuthValue);
	p9:LoadOrCreateNumberValueParameter("CWAzimuthTravel", "NumberValue", p9.SetAndBoundsCheckAzimuthValues);
	p9:LoadOrCreateNumberValueParameter("CCWAzimuthTravel", "NumberValue", p9.SetAndBoundsCheckAzimuthValues);
	p9:LoadOrCreateNumberValueParameter("MinElevation", "NumberValue", p9.SetAndBoundsCheckElevationValues);
	p9:LoadOrCreateNumberValueParameter("MaxElevation", "NumberValue", p9.SetAndBoundsCheckElevationValues);
	p9:LoadOrCreateNumberValueParameter("MinDistance", "NumberValue", p9.SetAndBoundsCheckDistanceValues);
	p9:LoadOrCreateNumberValueParameter("MaxDistance", "NumberValue", p9.SetAndBoundsCheckDistanceValues);
	p9:LoadOrCreateNumberValueParameter("UseAzimuthLimits", "BoolValue", p9.SetAndBoundsCheckAzimuthValues);
	p9.curAzimuthRad = math.rad(p9.externalProperties.ReferenceAzimuth);
	p9.curElevationRad = math.rad(p9.externalProperties.InitialElevation);
	p9.curDistance = p9.externalProperties.InitialDistance;
	p9:SetAndBoundsCheckAzimuthValues();
	p9:SetAndBoundsCheckElevationValues();
	p9:SetAndBoundsCheckDistanceValues();
end;
function v4.GetModuleName(p10)
	return "OrbitalCamera";
end;
local u1 = require(script.Parent:WaitForChild("CameraUtils"));
function v4.SetInitialOrientation(p11, p12)
	if not p12 or not p12.RootPart then
		warn("OrbitalCamera could not set initial orientation due to missing humanoid");
		return;
	end;
	local l__unit__9 = (p12.RootPart.CFrame.lookVector - Vector3.new(0, 0.23, 0)).unit;
	if not u1.IsFinite((u1.GetAngleBetweenXZVectors(l__unit__9, p11:GetCameraLookVector()))) then

	end;
	if not u1.IsFinite(math.asin(p11:GetCameraLookVector().y) - math.asin(l__unit__9.y)) then

	end;
end;
function v4.GetCameraToSubjectDistance(p13)
	return p13.curDistance;
end;
local l__Players__2 = game:GetService("Players");
function v4.SetCameraToSubjectDistance(p14, p15)
	if l__Players__2.LocalPlayer then
		p14.currentSubjectDistance = math.clamp(p15, p14.minDistance, p14.maxDistance);
		p14.currentSubjectDistance = math.max(p14.currentSubjectDistance, p14.FIRST_PERSON_DISTANCE_THRESHOLD);
	end;
	p14.inFirstPerson = false;
	p14:UpdateMouseBehavior();
	return p14.currentSubjectDistance;
end;
local u3 = Vector3.new(0, 0, 0);
function v4.CalculateNewLookVector(p16, p17, p18)
	local v10 = p17 or p16:GetCameraLookVector();
	local v11 = math.asin(v10.y);
	local v12 = Vector2.new(p18.x, (math.clamp(p18.y, v11 - math.rad(80), v11 - math.rad(-80))));
	return (CFrame.Angles(0, -v12.x, 0) * CFrame.new(u3, v10) * CFrame.Angles(-v12.y, 0, 0)).lookVector;
end;
local u4 = require(script.Parent:WaitForChild("CameraInput"));
local l__VRService__5 = game:GetService("VRService");
local u6 = Vector3.new(1, 0, 1);
local u7 = 2 * math.pi;
function v4.Update(p19, p20)
	local v13 = tick();
	local v14 = v13 - p19.lastUpdate;
	local v15 = u4.getRotation() ~= Vector2.new();
	local l__CurrentCamera__16 = workspace.CurrentCamera;
	local v17 = l__CurrentCamera__16.CFrame;
	local l__Focus__18 = l__CurrentCamera__16.Focus;
	local v19 = l__CurrentCamera__16 and l__CurrentCamera__16.CameraSubject;
	local v20 = v19 and v19:IsA("VehicleSeat");
	local v21 = v19 and v19:IsA("SkateboardPlatform");
	if p19.lastUpdate == nil or v14 > 1 then
		p19.lastCameraTransform = nil;
	end;
	if v15 then
		p19.lastUserPanCamera = tick();
	end;
	local v22 = p19:GetSubjectPosition();
	if v22 and l__Players__2.LocalPlayer and l__CurrentCamera__16 then
		if p19.gamepadDollySpeedMultiplier ~= 1 then
			p19:SetCameraToSubjectDistance(p19.currentSubjectDistance * p19.gamepadDollySpeedMultiplier);
		end;
		local l__VREnabled__23 = l__VRService__5.VREnabled;
		local v24 = l__VREnabled__23 and p19:GetVRFocus(v22, v14) or CFrame.new(v22);
		local v25 = u4.getRotation();
		if l__VREnabled__23 and not p19:IsInFirstPerson() then
			local v26 = p19:GetCameraHeight();
			local v27 = v22 - l__CurrentCamera__16.CFrame.p;
			local l__magnitude__28 = v27.magnitude;
			if p19.currentSubjectDistance < l__magnitude__28 or v25.x ~= 0 then
				local v29 = p19:CalculateNewLookVector(v27.unit * u6, Vector2.new(v25.x, 0)) * math.min(l__magnitude__28, p19.currentSubjectDistance);
				local v30 = v24.p - v29;
				local v31 = l__CurrentCamera__16.CFrame.lookVector;
				if v25.x ~= 0 then
					v31 = v29;
				end;
				v17 = CFrame.new(v30, (Vector3.new(v30.x + v31.x, v30.y, v30.z + v31.z))) + Vector3.new(0, v26, 0);
			end;
		else
			p19.curAzimuthRad = p19.curAzimuthRad - v25.x;
			if p19.useAzimuthLimits then
				p19.curAzimuthRad = math.clamp(p19.curAzimuthRad, p19.minAzimuthAbsoluteRad, p19.maxAzimuthAbsoluteRad);
			else
				p19.curAzimuthRad = p19.curAzimuthRad ~= 0 and math.sign(p19.curAzimuthRad) * (math.abs(p19.curAzimuthRad) % u7) or 0;
			end;
			p19.curElevationRad = math.clamp(p19.curElevationRad + v25.y, p19.minElevationRad, p19.maxElevationRad);
			v17 = CFrame.new(v22 + p19.currentSubjectDistance * (CFrame.fromEulerAnglesYXZ(-p19.curElevationRad, p19.curAzimuthRad, 0) * v1), v22);
		end;
		p19.lastCameraTransform = v17;
		p19.lastCameraFocus = l__Focus__18;
		if (v20 or v21) and v19:IsA("BasePart") then
			p19.lastSubjectCFrame = v19.CFrame;
		else
			p19.lastSubjectCFrame = nil;
		end;
	end;
	p19.lastUpdate = v13;
	return v17, l__Focus__18;
end;
return v4;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1066"><Properties><string name="Name">Invisicam</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local function u1(p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return p1 * (p5 * p9 - p6 * p8) - p2 * (p4 * p9 - p6 * p7) + p3 * (p4 * p8 - p5 * p7);
end;
local u2 = Vector3.new(0, 0, 0);
local v2 = require(script.Parent:WaitForChild("BaseOcclusion"));
local v3 = setmetatable({}, v2);
v3.__index = v3;
local u3 = {
	LIMBS = 2, 
	MOVEMENT = 3, 
	CORNERS = 4, 
	CIRCLE1 = 5, 
	CIRCLE2 = 6, 
	LIMBMOVE = 7, 
	SMART_CIRCLE = 8, 
	CHAR_OUTLINE = 9
};
function v3.new()
	local v4 = setmetatable(v2.new(), v3);
	v4.char = nil;
	v4.humanoidRootPart = nil;
	v4.torsoPart = nil;
	v4.headPart = nil;
	v4.childAddedConn = nil;
	v4.childRemovedConn = nil;
	v4.behaviors = {};
	v4.behaviors[u3.LIMBS] = v4.LimbBehavior;
	v4.behaviors[u3.MOVEMENT] = v4.MoveBehavior;
	v4.behaviors[u3.CORNERS] = v4.CornerBehavior;
	v4.behaviors[u3.CIRCLE1] = v4.CircleBehavior;
	v4.behaviors[u3.CIRCLE2] = v4.CircleBehavior;
	v4.behaviors[u3.LIMBMOVE] = v4.LimbMoveBehavior;
	v4.behaviors[u3.SMART_CIRCLE] = v4.SmartCircleBehavior;
	v4.behaviors[u3.CHAR_OUTLINE] = v4.CharacterOutlineBehavior;
	v4.mode = u3.SMART_CIRCLE;
	v4.behaviorFunction = v4.SmartCircleBehavior;
	v4.savedHits = {};
	v4.trackedLimbs = {};
	v4.camera = game.Workspace.CurrentCamera;
	v4.enabled = false;
	return v4;
end;
function v3.Enable(p10, p11)
	p10.enabled = p11;
	if not p11 then
		p10:Cleanup();
	end;
end;
function v3.GetOcclusionMode(p12)
	return Enum.DevCameraOcclusionMode.Invisicam;
end;
function v3.LimbBehavior(p13, p14)
	for v5, v6 in pairs(p13.trackedLimbs) do
		p14[#p14 + 1] = v5.Position;
	end;
end;
function v3.MoveBehavior(p15, p16)
	for v7 = 1, 3 do
		local l__Velocity__8 = p15.humanoidRootPart.Velocity;
		p16[#p16 + 1] = p15.humanoidRootPart.Position + (v7 - 1) * p15.humanoidRootPart.CFrame.lookVector * (Vector3.new(l__Velocity__8.X, 0, l__Velocity__8.Z).Magnitude / 2);
	end;
end;
local u4 = { Vector3.new(1, 1, -1), Vector3.new(1, -1, -1), Vector3.new(-1, -1, -1), Vector3.new(-1, 1, -1) };
function v3.CornerBehavior(p17, p18)
	local l__CFrame__9 = p17.humanoidRootPart.CFrame;
	local l__p__10 = l__CFrame__9.p;
	local v11 = l__CFrame__9 - l__p__10;
	local v12 = p17.char:GetExtentsSize() / 2;
	p18[#p18 + 1] = l__p__10;
	for v13 = 1, #u4 do
		p18[#p18 + 1] = l__p__10 + v11 * (v12 * u4[v13]);
	end;
end;
function v3.CircleBehavior(p19, p20)
	if p19.mode == u3.CIRCLE1 then
		local v14 = p19.humanoidRootPart.CFrame;
	else
		local l__CoordinateFrame__15 = p19.camera.CoordinateFrame;
		v14 = l__CoordinateFrame__15 - l__CoordinateFrame__15.p + p19.humanoidRootPart.Position;
	end;
	p20[#p20 + 1] = v14.p;
	for v16 = 0, 9 do
		local v17 = 2 * math.pi / 10 * v16;
		p20[#p20 + 1] = v14 * (3 * Vector3.new(math.cos(v17), math.sin(v17), 0));
	end;
end;
function v3.LimbMoveBehavior(p21, p22)
	p21:LimbBehavior(p22);
	p21:MoveBehavior(p22);
end;
function v3.CharacterOutlineBehavior(p23, p24)
	local l__unit__18 = p23.torsoPart.CFrame.upVector.unit;
	local l__unit__19 = p23.torsoPart.CFrame.rightVector.unit;
	p24[#p24 + 1] = p23.torsoPart.CFrame.p;
	p24[#p24 + 1] = p23.torsoPart.CFrame.p + l__unit__18;
	p24[#p24 + 1] = p23.torsoPart.CFrame.p - l__unit__18;
	p24[#p24 + 1] = p23.torsoPart.CFrame.p + l__unit__19;
	p24[#p24 + 1] = p23.torsoPart.CFrame.p - l__unit__19;
	if p23.headPart then
		p24[#p24 + 1] = p23.headPart.CFrame.p;
	end;
	local v20 = CFrame.new(u2, Vector3.new(p23.camera.CoordinateFrame.lookVector.X, 0, p23.camera.CoordinateFrame.lookVector.Z));
	local v21 = p23.torsoPart and p23.torsoPart.Position or p23.humanoidRootPart.Position;
	local v22 = { p23.torsoPart };
	if p23.headPart then
		v22[#v22 + 1] = p23.headPart;
	end;
	for v23 = 1, 24 do
		local v24 = 2 * math.pi * v23 / 24;
		local v25 = v20 * (3 * Vector3.new(math.cos(v24), math.sin(v24), 0));
		local v26 = Vector3.new(v25.X, math.max(v25.Y, -2.25), v25.Z);
		local v27, v28 = game.Workspace:FindPartOnRayWithWhitelist(Ray.new(v21 + v26, -3 * v26), v22, false, false);
		if v27 then
			p24[#p24 + 1] = v28 + 0.2 * (v21 - v28).unit;
		end;
	end;
end;
local u5 = 2 * math.pi / 24;
local function u6(p25, p26, p27, p28)
	local v29 = p26:Cross(p28);
	local v30 = p27.x - p25.x;
	local v31 = p27.y - p25.y;
	local v32 = p27.z - p25.z;
	local v33 = u1(p26.x, -p28.x, v29.x, p26.y, -p28.y, v29.y, p26.z, -p28.z, v29.z);
	if v33 == 0 then
		return u2;
	end;
	local v34 = u1(v30, -p28.x, v29.x, v31, -p28.y, v29.y, v32, -p28.z, v29.z) / v33;
	local v35 = u1(p26.x, v30, v29.x, p26.y, v31, v29.y, p26.z, v32, v29.z) / v33;
	local v36 = p25 + v34 * p26;
	local v37 = p27 + v35 * p28;
	if (v37 - v36).Magnitude < 0.25 then
		return v36 + 0.5 * (v37 - v36);
	end;
	return u2;
end;
function v3.SmartCircleBehavior(p29, p30)
	local l__unit__38 = p29.torsoPart.CFrame.upVector.unit;
	local l__unit__39 = p29.torsoPart.CFrame.rightVector.unit;
	p30[#p30 + 1] = p29.torsoPart.CFrame.p;
	p30[#p30 + 1] = p29.torsoPart.CFrame.p + l__unit__38;
	p30[#p30 + 1] = p29.torsoPart.CFrame.p - l__unit__38;
	p30[#p30 + 1] = p29.torsoPart.CFrame.p + l__unit__39;
	p30[#p30 + 1] = p29.torsoPart.CFrame.p - l__unit__39;
	if p29.headPart then
		p30[#p30 + 1] = p29.headPart.CFrame.p;
	end;
	local v40 = p29.camera.CFrame - p29.camera.CFrame.p;
	local v41 = Vector3.new(0, 0.5, 0) + (p29.torsoPart and p29.torsoPart.Position or p29.humanoidRootPart.Position);
	for v42 = 1, 24 do
		local v43 = u5 * v42 - 0.5 * math.pi;
		local v44 = v41 + v40 * (2.5 * Vector3.new(math.cos(v43), math.sin(v43), 0));
		local v45 = v44 - p29.camera.CFrame.p;
		local v46, v47, v48 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(v41, v44 - v41), { p29.char }, false, false);
		local v49 = v44;
		if v46 then
			local v50 = v47 + 0.1 * v48.unit;
			local v51 = v50 - v41;
			local l__unit__52 = v51:Cross(v45).unit:Cross(v48).unit;
			if v51.unit:Dot(-l__unit__52) < v51.unit:Dot((v50 - p29.camera.CFrame.p).unit) then
				v49 = u6(v50, l__unit__52, v44, v45);
				if v49.Magnitude > 0 then
					local v53, v54, v55 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(v50, v49 - v50), { p29.char }, false, false);
					if v53 then
						v49 = v54 + 0.1 * v55.unit;
					end;
				else
					v49 = v50;
				end;
			else
				v49 = v50;
			end;
			local v56, v57, v58 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(v41, v49 - v41), { p29.char }, false, false);
			if v56 then
				v49 = v57 - 0.1 * (v49 - v41).unit;
			end;
		end;
		p30[#p30 + 1] = v49;
	end;
end;
function v3.CheckTorsoReference(p31)
	if p31.char then
		p31.torsoPart = p31.char:FindFirstChild("Torso");
		if not p31.torsoPart then
			p31.torsoPart = p31.char:FindFirstChild("UpperTorso");
			if not p31.torsoPart then
				p31.torsoPart = p31.char:FindFirstChild("HumanoidRootPart");
			end;
		end;
		p31.headPart = p31.char:FindFirstChild("Head");
	end;
end;
local u7 = {
	Head = true, 
	["Left Arm"] = true, 
	["Right Arm"] = true, 
	["Left Leg"] = true, 
	["Right Leg"] = true, 
	LeftLowerArm = true, 
	RightLowerArm = true, 
	LeftUpperLeg = true, 
	RightUpperLeg = true
};
function v3.CharacterAdded(p32, p33, p34)
	if p34 ~= l__Players__1.LocalPlayer then
		return;
	end;
	if p32.childAddedConn then
		p32.childAddedConn:Disconnect();
		p32.childAddedConn = nil;
	end;
	if p32.childRemovedConn then
		p32.childRemovedConn:Disconnect();
		p32.childRemovedConn = nil;
	end;
	p32.char = p33;
	p32.trackedLimbs = {};
	local function v59(p35)
		if p35:IsA("BasePart") then
			if u7[p35.Name] then
				p32.trackedLimbs[p35] = true;
			end;
			if p35.Name == "Torso" or p35.Name == "UpperTorso" then
				p32.torsoPart = p35;
			end;
			if p35.Name == "Head" then
				p32.headPart = p35;
			end;
		end;
	end;
	p32.childAddedConn = p33.ChildAdded:Connect(v59);
	p32.childRemovedConn = p33.ChildRemoved:Connect(function(p36)
		p32.trackedLimbs[p36] = nil;
		p32:CheckTorsoReference();
	end);
	for v60, v61 in pairs(p32.char:GetChildren()) do
		v59(v61);
	end;
end;
local function u8(p37, ...)
	local v62 = {};
	local v63 = "";
	for v64, v65 in pairs({ ... }) do
		v62[v65] = true;
		if v63 == "" then
			local v66 = "";
		else
			v66 = " or ";
		end;
		v63 = v63 .. v66 .. v65;
	end;
	local v67 = type(p37);
	assert(v62[v67], v63 .. " type expected, got: " .. v67);
end;
function v3.SetMode(p38, p39)
	u8(p39, "number");
	for v68, v69 in pairs(u3) do
		if v69 == p39 then
			p38.mode = p39;
			p38.behaviorFunction = p38.behaviors[p38.mode];
			return;
		end;
	end;
	error("Invalid mode number");
end;
function v3.GetObscuredParts(p40)
	return p40.savedHits;
end;
function v3.Cleanup(p41)
	for v70, v71 in pairs(p41.savedHits) do
		v70.LocalTransparencyModifier = v71;
	end;
end;
function v3.Update(p42, p43, p44, p45)
	local v72 = nil;
	if not p42.enabled or not p42.char then
		return p44, p45;
	end;
	p42.camera = game.Workspace.CurrentCamera;
	if not p42.humanoidRootPart then
		local v73 = p42.char:FindFirstChildOfClass("Humanoid");
		if v73 and v73.RootPart then
			p42.humanoidRootPart = v73.RootPart;
		else
			p42.humanoidRootPart = p42.char:FindFirstChild("HumanoidRootPart");
			if not p42.humanoidRootPart then
				return p44, p45;
			end;
		end;
		local u9 = nil;
		u9 = p42.humanoidRootPart.AncestryChanged:Connect(function(p46, p47)
			if p46 == p42.humanoidRootPart and not p47 then
				p42.humanoidRootPart = nil;
				if u9 and u9.Connected then
					u9:Disconnect();
					u9 = nil;
				end;
			end;
		end);
	end;
	if not p42.torsoPart then
		p42:CheckTorsoReference();
		if not p42.torsoPart then
			return p44, p45;
		end;
	end;
	local v74 = {};
	p42:behaviorFunction(v74);
	local v75 = { p42.char };
	local u10 = {};
	local function v76(p48)
		u10[p48] = true;
		if not p42.savedHits[p48] then
			p42.savedHits[p48] = p48.LocalTransparencyModifier;
		end;
	end;
	local v77 = 0;
	local v78 = {};
	local v79 = 0.75;
	local v80 = 0.75;
	local v81 = p42.camera:GetPartsObscuringTarget({ p42.headPart and p42.headPart.CFrame.p or v74[1], p42.torsoPart and p42.torsoPart.CFrame.p or v74[2] }, v75);
	for v82 = 1, #v81 do
		local v83 = v81[v82];
		v72 = v77 + 1;
		v78[v83] = true;
		for v84, v85 in pairs(v83:GetChildren()) do
			if v85:IsA("Decal") then
				v72 = v72 + 1;
				break;
			end;
			if v85:IsA("Texture") then
				v72 = v72 + 1;
				break;
			end;
		end;
	end;
	if v72 > 0 then
		v79 = math.pow(0.375 + 0.375 / v72, 1 / v72);
		v80 = math.pow(0.25 + 0.25 / v72, 1 / v72);
	end;
	local v86 = p42.camera:GetPartsObscuringTarget(v74, v75);
	local v87 = {};
	for v88 = 1, #v86 do
		local v89 = v86[v88];
		v87[v89] = v78[v89] and v79 or v80;
		if v89.Transparency < v87[v89] then
			v76(v89);
		end;
		for v90, v91 in pairs(v89:GetChildren()) do
			if (v91:IsA("Decal") or v91:IsA("Texture")) and v91.Transparency < v87[v89] then
				v87[v91] = v87[v89];
				v76(v91);
			end;
		end;
	end;
	for v92, v93 in pairs(p42.savedHits) do
		if u10[v92] then
			v92.LocalTransparencyModifier = v92.Transparency < 1 and (v87[v92] - v92.Transparency) / (1 - v92.Transparency) or 0;
		else
			v92.LocalTransparencyModifier = v93;
			p42.savedHits[v92] = nil;
		end;
	end;
	return p44, p45;
end;
return v3;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1073"><Properties><string name="Name">CameraToggleStateController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local l__UserInputService__2 = game:GetService("UserInputService");
local l__UserGameSettings__3 = UserSettings():GetService("UserGameSettings");
local v4 = l__Players__1.LocalPlayer;
if not v4 then
	l__Players__1:GetPropertyChangedSignal("LocalPlayer"):Wait();
	v4 = l__Players__1.LocalPlayer;
end;
local l__mouse__5 = v4:GetMouse();
local v6 = require(script.Parent:WaitForChild("CameraInput"));
local v7 = require(script.Parent:WaitForChild("CameraUI"));
local v8 = tick();
v7.setCameraModeToastEnabled(false);
local u1 = false;
local u2 = false;
local u3 = v8;
local u4 = false;
local u5 = false;
return function(p1)
	local v9 = v6.getTogglePan();
	if p1 and v9 ~= u1 then
		u2 = true;
	end;
	if u1 ~= v9 or tick() - u3 > 3 then
		local v10 = v9 and tick() - u3 < 3;
		v7.setCameraModeToastOpen(v10);
		if v9 then
			u2 = false;
		end;
		u3 = tick();
		u1 = v9;
	end;
	if p1 ~= u4 then
		if p1 then
			u5 = v6.getTogglePan();
			v6.setTogglePan(true);
		elseif not u2 then
			v6.setTogglePan(u5);
		end;
	end;
	if p1 then
		if v6.getTogglePan() then
			l__mouse__5.Icon = "rbxasset://textures/Cursors/CrossMouseIcon.png";
			l__UserInputService__2.MouseBehavior = Enum.MouseBehavior.LockCenter;
			l__UserGameSettings__3.RotationType = Enum.RotationType.CameraRelative;
		else
			l__mouse__5.Icon = "";
			l__UserInputService__2.MouseBehavior = Enum.MouseBehavior.Default;
			l__UserGameSettings__3.RotationType = Enum.RotationType.CameraRelative;
		end;
	elseif v6.getTogglePan() then
		l__mouse__5.Icon = "rbxasset://textures/Cursors/CrossMouseIcon.png";
		l__UserInputService__2.MouseBehavior = Enum.MouseBehavior.LockCenter;
		l__UserGameSettings__3.RotationType = Enum.RotationType.MovementRelative;
	elseif v6.getHoldPan() then
		l__mouse__5.Icon = "";
		l__UserInputService__2.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition;
		l__UserGameSettings__3.RotationType = Enum.RotationType.MovementRelative;
	else
		l__mouse__5.Icon = "";
		l__UserInputService__2.MouseBehavior = Enum.MouseBehavior.Default;
		l__UserGameSettings__3.RotationType = Enum.RotationType.MovementRelative;
	end;
	u4 = p1;
end;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1080"><Properties><string name="Name">ClassicCamera</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = Vector2.new(0, 0);
local v2 = require(script.Parent:WaitForChild("BaseCamera"));
local v3 = setmetatable({}, v2);
v3.__index = v3;
local u1 = require(script.Parent:WaitForChild("CameraUtils"));
function v3.new()
	local v4 = setmetatable(v2.new(), v3);
	v4.isFollowCamera = false;
	v4.isCameraToggle = false;
	v4.lastUpdate = tick();
	v4.cameraToggleSpring = u1.Spring.new(5, 0);
	return v4;
end;
local u2 = require(script.Parent:WaitForChild("CameraInput"));
function v3.GetCameraToggleOffset(p1, p2)
	if not p1.isCameraToggle then
		return Vector3.new();
	end;
	local l__currentSubjectDistance__5 = p1.currentSubjectDistance;
	if u2.getTogglePan() then
		p1.cameraToggleSpring.goal = math.clamp(u1.map(l__currentSubjectDistance__5, 0.5, p1.FIRST_PERSON_DISTANCE_THRESHOLD, 0, 1), 0, 1);
	else
		p1.cameraToggleSpring.goal = 0;
	end;
	return Vector3.new(0, p1.cameraToggleSpring:step(p2) * (math.clamp(u1.map(l__currentSubjectDistance__5, 0.5, 64, 0, 1), 0, 1) + 1), 0);
end;
function v3.SetCameraMovementMode(p3, p4)
	v2.SetCameraMovementMode(p3, p4);
	p3.isFollowCamera = p4 == Enum.ComputerCameraMovementMode.Follow;
	p3.isCameraToggle = p4 == Enum.ComputerCameraMovementMode.CameraToggle;
end;
local u3 = CFrame.fromOrientation(math.rad(-15), 0, 0);
local l__Players__4 = game:GetService("Players");
local u5 = math.rad(0);
local u6 = math.rad(220);
local u7 = math.rad(250);
local l__VRService__8 = game:GetService("VRService");
function v3.Update(p5)
	local v6 = tick();
	local v7 = v6 - p5.lastUpdate;
	local l__CurrentCamera__8 = workspace.CurrentCamera;
	local v9 = l__CurrentCamera__8.CFrame;
	local v10 = l__CurrentCamera__8.Focus;
	local v11 = nil;
	if p5.resetCameraAngle then
		local v12 = p5:GetHumanoidRootPart();
		if v12 then
			v11 = (v12.CFrame * u3).lookVector;
		else
			v11 = u3.lookVector;
		end;
		p5.resetCameraAngle = false;
	end;
	local v13 = p5:GetHumanoid();
	local l__CameraSubject__14 = l__CurrentCamera__8.CameraSubject;
	local v15 = l__CameraSubject__14 and l__CameraSubject__14:IsA("VehicleSeat");
	local v16 = l__CameraSubject__14 and l__CameraSubject__14:IsA("SkateboardPlatform");
	local v17 = v13 and v13:GetState() == Enum.HumanoidStateType.Climbing;
	if p5.lastUpdate == nil or v7 > 1 then
		p5.lastCameraTransform = nil;
	end;
	local v18 = u2.getRotation();
	p5:StepZoom();
	local v19 = p5:GetCameraHeight();
	if u2.getRotation() ~= Vector2.new() then
		u5 = 0;
		p5.lastUserPanCamera = tick();
	end;
	local v20 = v6 - p5.lastUserPanCamera < 2;
	local v21 = p5:GetSubjectPosition();
	if v21 and l__Players__4.LocalPlayer and l__CurrentCamera__8 then
		local v22 = p5:GetCameraToSubjectDistance();
		if v22 < 0.5 then
			v22 = 0.5;
		end;
		if p5:GetIsMouseLocked() and not p5:IsInFirstPerson() then
			local v23 = p5:CalculateNewLookCFrameFromArg(v11, v18);
			local v24 = p5:GetMouseLockOffset();
			local v25 = v24.X * v23.rightVector + v24.Y * v23.upVector + v24.Z * v23.lookVector;
			if u1.IsFiniteVector3(v25) then
				v21 = v21 + v25;
			end;
		elseif u2.getRotation() == Vector2.new() and p5.lastCameraTransform then
			local v26 = p5:IsInFirstPerson();
			if not v15 and not v16 then
				if p5.isFollowCamera and v17 and p5.lastUpdate and v13 and v13.Torso then
					if v26 then
						if p5.lastSubjectCFrame and ((v15 or v16) and l__CameraSubject__14:IsA("BasePart")) then
							local v27 = -u1.GetAngleBetweenXZVectors(p5.lastSubjectCFrame.lookVector, l__CameraSubject__14.CFrame.lookVector);
							if u1.IsFinite(v27) then
								v18 = v18 + Vector2.new(v27, 0);
							end;
							u5 = 0;
						end;
					elseif not v20 then
						u5 = math.clamp(u5 + u6 * v7, 0, u7);
						local v28 = math.clamp(u5 * v7, 0, 1);
						if p5:IsInFirstPerson() and (not p5.isFollowCamera or not p5.isClimbing) then
							v28 = 1;
						end;
						local v29 = u1.GetAngleBetweenXZVectors(v13.Torso.CFrame.lookVector, p5:GetCameraLookVector());
						if u1.IsFinite(v29) and math.abs(v29) > 0.0001 then
							v18 = v18 + Vector2.new(v29 * v28, 0);
						end;
					end;
				elseif p5.isFollowCamera and not v26 and not v20 and not l__VRService__8.VREnabled then
					local v30 = u1.GetAngleBetweenXZVectors(-(p5.lastCameraTransform.p - v21), p5:GetCameraLookVector());
					if u1.IsFinite(v30) and math.abs(v30) > 0.0001 and 0.4 * v7 < math.abs(v30) then
						v18 = v18 + Vector2.new(v30, 0);
					end;
				end;
			elseif p5.lastUpdate and v13 and v13.Torso then
				if v26 then
					if p5.lastSubjectCFrame and ((v15 or v16) and l__CameraSubject__14:IsA("BasePart")) then
						v27 = -u1.GetAngleBetweenXZVectors(p5.lastSubjectCFrame.lookVector, l__CameraSubject__14.CFrame.lookVector);
						if u1.IsFinite(v27) then
							v18 = v18 + Vector2.new(v27, 0);
						end;
						u5 = 0;
					end;
				elseif not v20 then
					u5 = math.clamp(u5 + u6 * v7, 0, u7);
					v28 = math.clamp(u5 * v7, 0, 1);
					if p5:IsInFirstPerson() and (not p5.isFollowCamera or not p5.isClimbing) then
						v28 = 1;
					end;
					v29 = u1.GetAngleBetweenXZVectors(v13.Torso.CFrame.lookVector, p5:GetCameraLookVector());
					if u1.IsFinite(v29) and math.abs(v29) > 0.0001 then
						v18 = v18 + Vector2.new(v29 * v28, 0);
					end;
				end;
			elseif p5.isFollowCamera and not v26 and not v20 and not l__VRService__8.VREnabled then
				v30 = u1.GetAngleBetweenXZVectors(-(p5.lastCameraTransform.p - v21), p5:GetCameraLookVector());
				if u1.IsFinite(v30) and math.abs(v30) > 0.0001 and 0.4 * v7 < math.abs(v30) then
					v18 = v18 + Vector2.new(v30, 0);
				end;
			end;
		end;
		if not p5.isFollowCamera then
			local l__VREnabled__31 = l__VRService__8.VREnabled;
			if l__VREnabled__31 then
				local v32 = p5:GetVRFocus(v21, v7);
			else
				v32 = CFrame.new(v21);
			end;
			local l__p__33 = v32.p;
			if l__VREnabled__31 and not p5:IsInFirstPerson() then
				local l__magnitude__34 = (v21 - l__CurrentCamera__8.CFrame.p).magnitude;
				if v22 < l__magnitude__34 or v18.x ~= 0 then
					local v35 = p5:CalculateNewLookVectorFromArg(nil, v18) * math.min(l__magnitude__34, v22);
					local v36 = l__p__33 - v35;
					local v37 = l__CurrentCamera__8.CFrame.lookVector;
					if v18.x ~= 0 then
						v37 = v35;
					end;
					local v38 = CFrame.new(v36, (Vector3.new(v36.x + v37.x, v36.y, v36.z + v37.z))) + Vector3.new(0, v19, 0);
				end;
			else
				v38 = CFrame.new(l__p__33 - v22 * p5:CalculateNewLookVectorFromArg(v11, v18), l__p__33);
			end;
		else
			if l__VRService__8.VREnabled then
				v32 = p5:GetVRFocus(v21, v7);
			else
				v32 = CFrame.new(v21);
			end;
			v38 = CFrame.new(v32.p - v22 * p5:CalculateNewLookVectorFromArg(v11, v18), v32.p) + Vector3.new(0, v19, 0);
		end;
		local v39 = p5:GetCameraToggleOffset(v7);
		v10 = v32 + v39;
		v9 = v38 + v39;
		p5.lastCameraTransform = v9;
		p5.lastCameraFocus = v10;
		if (v15 or v16) and l__CameraSubject__14:IsA("BasePart") then
			p5.lastSubjectCFrame = l__CameraSubject__14.CFrame;
		else
			p5.lastSubjectCFrame = nil;
		end;
	end;
	p5.lastUpdate = v6;
	return v9, v10;
end;
function v3.EnterFirstPerson(p6)
	p6.inFirstPerson = true;
	p6:UpdateMouseBehavior();
end;
function v3.LeaveFirstPerson(p7)
	p7.inFirstPerson = false;
	p7:UpdateMouseBehavior();
end;
return v3;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1087"><Properties><string name="Name">CameraUtils</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = {};
v2.__index = v2;
function v2.new(p1, p2)
	return setmetatable({
		freq = p1, 
		goal = p2, 
		pos = p2, 
		vel = 0
	}, v2);
end;
function v2.step(p3, p4)
	local v3 = p3.freq * 2 * math.pi;
	local l__goal__4 = p3.goal;
	local l__vel__5 = p3.vel;
	local v6 = p3.pos - l__goal__4;
	local v7 = math.exp(-v3 * p4);
	local v8 = (v6 * (1 + v3 * p4) + l__vel__5 * p4) * v7 + l__goal__4;
	p3.pos = v8;
	p3.vel = (l__vel__5 * (1 - v3 * p4) - v6 * (v3 * v3 * p4)) * v7;
	return v8;
end;
v1.Spring = v2;
function v1.map(p5, p6, p7, p8, p9)
	return (p5 - p6) * (p9 - p8) / (p7 - p6) + p8;
end;
function v1.mapClamp(p10, p11, p12, p13, p14)
	return math.clamp((p10 - p11) * (p14 - p13) / (p12 - p11) + p13, math.min(p13, p14), math.max(p13, p14));
end;
function v1.getLooseBoundingSphere(p15)
	local v9 = table.create(#p15);
	for v10, v11 in pairs(p15) do
		v9[v10] = v11.Position;
	end;
	local v12 = v9[1];
	local v13 = v12;
	local v14 = 0;
	for v15, v16 in ipairs(v9) do
		local l__Magnitude__17 = (v16 - v12).Magnitude;
		if v14 < l__Magnitude__17 then
			v13 = v16;
			v14 = l__Magnitude__17;
		end;
	end;
	local v18 = v13;
	local v19 = 0;
	for v20, v21 in ipairs(v9) do
		local l__Magnitude__22 = (v21 - v13).Magnitude;
		if v19 < l__Magnitude__22 then
			v18 = v21;
			v19 = l__Magnitude__22;
		end;
	end;
	local v23 = (v13 + v18) * 0.5;
	local v24 = (v13 - v18).Magnitude * 0.5;
	for v25, v26 in ipairs(v9) do
		local l__Magnitude__27 = (v26 - v23).Magnitude;
		if v24 < l__Magnitude__27 then
			v23 = v23 + (l__Magnitude__27 - v24) * 0.5 * (v26 - v23).Unit;
			v24 = (l__Magnitude__27 + v24) * 0.5;
		end;
	end;
	return v23, v24;
end;
function v1.sanitizeAngle(p16)
	return (p16 + math.pi) % (2 * math.pi) - math.pi;
end;
function v1.Round(p17, p18)
	local v28 = 10 ^ p18;
	return math.floor(p17 * v28 + 0.5) / v28;
end;
function v1.IsFinite(p19)
	local v29 = false;
	if p19 == p19 then
		v29 = false;
		if p19 ~= math.huge then
			v29 = p19 ~= -math.huge;
		end;
	end;
	return v29;
end;
function v1.IsFiniteVector3(p20)
	return v1.IsFinite(p20.X) and (v1.IsFinite(p20.Y) and v1.IsFinite(p20.Z));
end;
function v1.GetAngleBetweenXZVectors(p21, p22)
	return math.atan2(p22.X * p21.Z - p22.Z * p21.X, p22.X * p21.X + p22.Z * p21.Z);
end;
local function u1(p23)
	return math.floor(p23 + 0.5);
end;
function v1.RotateVectorByAngleAndRound(p24, p25, p26)
	if not (p24.Magnitude > 0) then
		return 0;
	end;
	p24 = p24.unit;
	return u1((math.atan2(p24.z, p24.x) + p25) / p26) * p26 - math.atan2(p24.z, p24.x);
end;
local function u2(p27)
	return p27 / 2 + 0.5;
end;
local function u3(p28)
	p28 = math.clamp(p28, -1, 1);
	if p28 >= 0 then
		return 0.35 * p28 / (0.35 - p28 + 1);
	end;
	return -(0.8 * -p28 / (0.8 + p28 + 1));
end;
local function u4(p29)
	return 1.1 * (2 * math.abs(p29) - 1) - 0.1;
end;
function v1.GamepadLinearToCurve(p30)
	local function v30(p31)
		local v31 = 1;
		if p31 < 0 then
			v31 = -1;
		end;
		return math.clamp(u2(u3(u4(math.abs(p31)))) * v31, -1, 1);
	end;
	return Vector2.new(v30(p30.x), v30(p30.y));
end;
function v1.ConvertCameraModeEnumToStandard(p32)
	if p32 == Enum.TouchCameraMovementMode.Default then
		return Enum.ComputerCameraMovementMode.Follow;
	end;
	if p32 == Enum.ComputerCameraMovementMode.Default then
		return Enum.ComputerCameraMovementMode.Classic;
	end;
	if p32 ~= Enum.TouchCameraMovementMode.Classic and p32 ~= Enum.DevTouchCameraMovementMode.Classic and p32 ~= Enum.DevComputerCameraMovementMode.Classic and p32 ~= Enum.ComputerCameraMovementMode.Classic then
		if p32 == Enum.TouchCameraMovementMode.Follow or p32 == Enum.DevTouchCameraMovementMode.Follow or p32 == Enum.DevComputerCameraMovementMode.Follow or p32 == Enum.ComputerCameraMovementMode.Follow then
			return Enum.ComputerCameraMovementMode.Follow;
		elseif p32 == Enum.TouchCameraMovementMode.Orbital or p32 == Enum.DevTouchCameraMovementMode.Orbital or p32 == Enum.DevComputerCameraMovementMode.Orbital or p32 == Enum.ComputerCameraMovementMode.Orbital then
			return Enum.ComputerCameraMovementMode.Orbital;
		elseif p32 == Enum.ComputerCameraMovementMode.CameraToggle or p32 == Enum.DevComputerCameraMovementMode.CameraToggle then
			return Enum.ComputerCameraMovementMode.CameraToggle;
		elseif p32 == Enum.DevTouchCameraMovementMode.UserChoice or p32 == Enum.DevComputerCameraMovementMode.UserChoice then
			return Enum.DevComputerCameraMovementMode.UserChoice;
		else
			return Enum.ComputerCameraMovementMode.Classic;
		end;
	end;
	return Enum.ComputerCameraMovementMode.Classic;
end;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1094"><Properties><string name="Name">ZoomController</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script:WaitForChild("Popper"));
local u1 = nil;
local u2 = game:GetService("Players").LocalPlayer;
local u3 = nil;
local function v2()
	u1 = u2.CameraMinZoomDistance;
	u3 = u2.CameraMaxZoomDistance;
end;
v2();
u2:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(v2);
u2:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(v2);
u2 = {};
u2.__index = u2;
local l__math_clamp__4 = math.clamp;
function u2.new(p1, p2, p3, p4)
	p2 = l__math_clamp__4(p2, p3, p4);
	return setmetatable({
		freq = p1, 
		x = p2, 
		v = 0, 
		minValue = p3, 
		maxValue = p4, 
		goal = p2
	}, u2);
end;
local l__math_pi__5 = math.pi;
local l__math_exp__6 = math.exp;
function u2.Step(p5, p6)
	local v3 = p5.freq * 2 * l__math_pi__5;
	local l__v__4 = p5.v;
	local l__minValue__5 = p5.minValue;
	local l__maxValue__6 = p5.maxValue;
	local l__goal__7 = p5.goal;
	local v8 = l__goal__7 - p5.x;
	local v9 = v3 * p6;
	local v10 = l__math_exp__6(-v9);
	local v11 = l__goal__7 + (l__v__4 * p6 - v8 * (v9 + 1)) * v10;
	local v12 = ((v8 * v3 - l__v__4) * v9 + l__v__4) * v10;
	if v11 < l__minValue__5 then
		v11 = l__minValue__5;
		v12 = 0;
	elseif l__maxValue__6 < v11 then
		v11 = l__maxValue__6;
		v12 = 0;
	end;
	p5.x = v11;
	p5.v = v12;
	return v11;
end;
local v13 = {};
local u7 = u2.new(4.5, 12.5, 0.5, u3);
local function u8(p7, p8, p9, p10)
	p7 = l__math_clamp__4(p7 + p8 * (1 + p7 * 0.0375), p9, p10);
	if p7 < 1 then
		p7 = p8 <= 0 and p9 or 1;
	end;
	return p7;
end;
local u9 = 0;
local l__math_max__10 = math.max;
local l__math_min__11 = math.min;
function v13.Update(p11, p12, p13)
	local v14 = math.huge;
	if u7.goal > 1 then
		v14 = v1(p12 * CFrame.new(0, 0, 0.5), l__math_max__10(u7.x, u8(u7.goal, u9, u1, u3)) - 0.5, p13) + 0.5;
	end;
	u7.minValue = 0.5;
	u7.maxValue = l__math_min__11(u3, v14);
	return u7:Step(p11);
end;
function v13.GetZoomRadius()
	return u7.x;
end;
function v13.SetZoomParameters(p14, p15)
	u7.goal = p14;
	u9 = p15;
end;
return v13;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1101"><Properties><string name="Name">Poppercam</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local u1 = CFrame.new();
function v1.new()
	return setmetatable({
		lastCFrame = nil
	}, v1);
end;
local u2 = function(p1)
	local v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13 = p1:components();
	return CFrame.new(0, 0, 0, v5, v6, v7, v8, v9, v10, v11, v12, v13);
end;
local u3 = function(p2)
	local v14, v15 = p2:toAxisAngle();
	return v14 * v15;
end;
local u4 = function(p3)
	local l__magnitude__16 = p3.magnitude;
	if not (l__magnitude__16 > 1E-05) then
		return u1;
	end;
	return CFrame.fromAxisAngle(p3, l__magnitude__16);
end;
function v1.Step(p4, p5, p6)
	local v17 = p4.lastCFrame and p6;
	p4.lastCFrame = p6;
	local l__p__18 = p6.p;
	local v19 = u2(p6);
	local v20 = u3(v19 * u2(v17):inverse()) / p5;
	local u5 = (l__p__18 - v17.p) / p5;
	return {
		extrapolate = function(p7)
			return u4(v20 * p7) * v19 + (u5 * p7 + l__p__18);
		end, 
		posVelocity = u5, 
		rotVelocity = v20
	};
end;
function v1.Reset(p8)
	p8.lastCFrame = nil;
end;
u1 = require;
u4 = script;
u3 = u4.Parent;
u2 = "BaseOcclusion";
u4 = u3;
u3 = u3.WaitForChild;
u1 = u1(u3(u4, u2));
u3 = setmetatable;
u4 = {};
u2 = u1;
u3 = u3(u4, u2);
u3.__index = u3;
u4 = function()
	local v21 = setmetatable(u1.new(), u3);
	v21.focusExtrapolator = v1.new();
	return v21;
end;
u3.new = u4;
u4 = function(p9)
	return Enum.DevCameraOcclusionMode.Zoom;
end;
u3.GetOcclusionMode = u4;
u4 = function(p10, p11)
	p10.focusExtrapolator:Reset();
end;
u3.Enable = u4;
local u6 = require(script.Parent:WaitForChild("ZoomController"));
u4 = function(p12, p13, p14, p15, p16)
	local v22 = CFrame.new(p15.p, p14.p) * CFrame.new(0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0, -1);
	return v22 * CFrame.new(0, 0, (u6.Update(p13, v22, (p12.focusExtrapolator:Step(p13, v22))))), p15;
end;
u3.Update = u4;
u4 = function(p17, p18, p19)

end;
u3.CharacterAdded = u4;
u4 = function(p20, p21, p22)

end;
u3.CharacterRemoving = u4;
u4 = function(p23, p24)

end;
u3.OnCameraSubjectChanged = u4;
return u3;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1108"><Properties><string name="Name">CameraInput</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__ContextActionService__1 = game:GetService("ContextActionService");
local l__UserInputService__2 = game:GetService("UserInputService");
local l__RunService__3 = game:GetService("RunService");
local l__UserGameSettings__4 = UserSettings():GetService("UserGameSettings");
local l__LocalPlayer__5 = game:GetService("Players").LocalPlayer;
local v6 = math.rad(120);
local v7 = Vector2.new(1, 0.77) * math.rad(0.5);
local v8 = Vector2.new(1, 0.77) * math.rad(7);
local v9 = Vector2.new(1, 0.66) * math.rad(1);
local v10 = Vector2.new(1, 0.77) * math.rad(4);
local v11 = Instance.new("BindableEvent");
local v12 = Instance.new("BindableEvent");
local u1 = v11;
l__UserInputService__2.InputBegan:Connect(function(p1, p2)
	if not p2 and p1.UserInputType == Enum.UserInputType.MouseButton2 then
		u1:Fire();
	end;
end);
local u2 = v12;
l__UserInputService__2.InputEnded:Connect(function(p3, p4)
	if p3.UserInputType == Enum.UserInputType.MouseButton2 then
		u2:Fire();
	end;
end);
u1 = nil;
u1 = function(p5)
	return math.sign(p5) * math.clamp((math.exp(2 * ((math.abs(p5) - 0.1) / 0.9)) - 1) / (math.exp(2) - 1), 0, 1);
end;
u2 = function(p6)
	local l__CurrentCamera__13 = workspace.CurrentCamera;
	if not l__CurrentCamera__13 then
		return p6;
	end;
	local v14 = l__CurrentCamera__13.CFrame:ToEulerAnglesYXZ();
	if p6.Y * v14 >= 0 then
		return p6;
	end;
	return Vector2.new(1, (1 - (2 * math.abs(v14) / math.pi) ^ 0.75) * 0.75 + 0.25) * p6;
end;
local u3 = 0.016666666666666666;
l__RunService__3.Stepped:Connect(function(p7, p8)
	u3 = p8;
end);
local v15 = {};
local u4 = 0;
local v16 = Instance.new("BindableEvent");
v15.gamepadZoomPress = v16.Event;
local u5 = {
	Thumbstick2 = Vector2.new()
};
function v15.getRotationActivated()
	local v17 = true;
	if not (u4 > 0) then
		v17 = u5.Thumbstick2.Magnitude > 0;
	end;
	return v17;
end;
local u6 = {
	Left = 0, 
	Right = 0, 
	I = 0, 
	O = 0
};
local u7 = {
	Movement = Vector2.new(), 
	Wheel = 0, 
	Pan = Vector2.new(), 
	Pinch = 0
};
local u8 = {
	Move = Vector2.new(), 
	Pinch = 0
};
function v15.getRotation(p9)
	local v18 = Vector2.new(1, l__UserGameSettings__4:GetCameraYInvertValue());
	local v19 = Vector2.new(u6.Right - u6.Left, 0) * u3;
	if p9 then
		v19 = Vector2.new();
	end;
	return (v19 * v6 + u5.Thumbstick2 * v10 + u7.Movement * v7 + u7.Pan * v8 + u2(u8.Move) * v9) * v18;
end;
function v15.getZoomDelta()
	return (u6.O - u6.I) * 0.1 + (-u7.Wheel + u7.Pinch) * 1 + -u8.Pinch * 0.04;
end;
local u9 = nil;
local function u10(p10)
	local v20 = l__LocalPlayer__5:FindFirstChildOfClass("PlayerGui");
	local v21 = v20 and v20:FindFirstChild("TouchGui");
	local v22 = v21 and v21:FindFirstChild("TouchControlFrame");
	local v23 = v22 and v22:FindFirstChild("DynamicThumbstickFrame");
	if not v23 then
		return false;
	end;
	if not v21.Enabled then
		return false;
	end;
	local l__AbsolutePosition__24 = v23.AbsolutePosition;
	local v25 = l__AbsolutePosition__24 + v23.AbsoluteSize;
	local v26 = false;
	if l__AbsolutePosition__24.X <= p10.X then
		v26 = false;
		if l__AbsolutePosition__24.Y <= p10.Y then
			v26 = false;
			if p10.X <= v25.X then
				v26 = p10.Y <= v25.Y;
			end;
		end;
	end;
	return v26;
end;
local function u11()
	u4 = math.max(0, u4 + 1);
end;
local u12 = {};
local u13 = nil;
local function u14()
	u4 = math.max(0, u4 - 1);
end;
local function u15(p11, p12)
	assert(p11.UserInputType == Enum.UserInputType.Touch);
	assert(p11.UserInputState == Enum.UserInputState.Begin);
	if u9 == nil and u10(p11.Position) and not p12 then
		u9 = p11;
		return;
	end;
	if not p12 then
		u11();
	end;
	u12[p11] = p12;
end;
local function u16(p13, p14)
	assert(p13.UserInputType == Enum.UserInputType.Touch);
	assert(p13.UserInputState == Enum.UserInputState.Change);
	if p13 == u9 then
		return;
	end;
	if u12[p13] == nil then
		u12[p13] = p14;
	end;
	local v27 = {};
	for v28, v29 in pairs(u12) do
		if not v29 then
			table.insert(v27, v28);
		end;
	end;
	if #v27 == 1 and u12[p13] == false then
		local l__Delta__30 = p13.Delta;
		u8.Move = u8.Move + Vector2.new(l__Delta__30.X, l__Delta__30.Y);
	end;
	if #v27 ~= 2 then
		u13 = nil;
		return;
	end;
	local l__Magnitude__31 = (v27[1].Position - v27[2].Position).Magnitude;
	if u13 then
		u8.Pinch = u8.Pinch + (l__Magnitude__31 - u13);
	end;
	u13 = l__Magnitude__31;
end;
local function u17(p15)
	local l__Delta__32 = p15.Delta;
	u7.Movement = Vector2.new(l__Delta__32.X, l__Delta__32.Y);
end;
local function u18(p16, p17)
	assert(p16.UserInputType == Enum.UserInputType.Touch);
	assert(p16.UserInputState == Enum.UserInputState.End);
	if p16 == u9 then
		u9 = nil;
	end;
	if u12[p16] == false then
		u13 = nil;
		u14();
	end;
	u12[p16] = nil;
end;
local u19 = false;
local function u20()
	for v33, v34 in pairs({ u5, u6, u7, u8 }) do
		for v35, v36 in pairs(v34) do
			if type(v36) == "boolean" then
				v34[v35] = false;
			else
				v34[v35] = v34[v35] * 0;
			end;
		end;
	end;
end;
local function u21()
	u12 = {};
	u9 = nil;
	u13 = nil;
end;
local function u22(p18, p19, p20)
	local l__Position__37 = p20.Position;
	u5[p20.KeyCode.Name] = Vector2.new(u1(l__Position__37.X), -u1(l__Position__37.Y));
end;
local l__Value__23 = Enum.ContextActionPriority.Default.Value;
local function u24(p21, p22, p23)
	if p22 == Enum.UserInputState.Begin then
		local v38 = 1;
	else
		v38 = 0;
	end;
	u6[p23.KeyCode.Name] = v38;
end;
local function u25(p24, p25, p26)
	if p25 == Enum.UserInputState.Begin then
		v16:Fire();
	end;
end;
local u26 = {};
local function u27(p27, p28)
	if p27.UserInputType == Enum.UserInputType.Touch then
		u15(p27, p28);
		return;
	end;
	if p27.UserInputType == Enum.UserInputType.MouseButton2 and not p28 then
		u11();
	end;
end;
local function u28(p29, p30)
	if p29.UserInputType == Enum.UserInputType.Touch then
		u16(p29, p30);
		return;
	end;
	if p29.UserInputType == Enum.UserInputType.MouseMovement then
		u17(p29);
	end;
end;
local function u29(p31, p32)
	if p31.UserInputType == Enum.UserInputType.Touch then
		u18(p31, p32);
		return;
	end;
	if p31.UserInputType == Enum.UserInputType.MouseButton2 then
		u14();
	end;
end;
local function u30(p33, p34, p35, p36)
	if not p36 then
		u7.Wheel = p33;
		u7.Pan = p34;
		u7.Pinch = -p35;
	end;
end;
function v15.setInputEnabled(p37)
	if u19 == p37 then
		return;
	end;
	u19 = p37;
	u20();
	u21();
	if not u19 then
		l__ContextActionService__1:UnbindAction("RbxCameraThumbstick");
		l__ContextActionService__1:UnbindAction("RbxCameraMouseMove");
		l__ContextActionService__1:UnbindAction("RbxCameraMouseWheel");
		l__ContextActionService__1:UnbindAction("RbxCameraKeypress");
		for v39, v40 in pairs(u26) do
			v40:Disconnect();
		end;
		u26 = {};
		return;
	end;
	l__ContextActionService__1:BindActionAtPriority("RbxCameraThumbstick", u22, false, l__Value__23, Enum.KeyCode.Thumbstick2);
	l__ContextActionService__1:BindActionAtPriority("RbxCameraKeypress", u24, false, l__Value__23, Enum.KeyCode.Left, Enum.KeyCode.Right, Enum.KeyCode.I, Enum.KeyCode.O);
	l__ContextActionService__1:BindAction("RbxCameraGamepadZoom", u25, false, Enum.KeyCode.ButtonR3);
	table.insert(u26, l__UserInputService__2.InputBegan:Connect(u27));
	table.insert(u26, l__UserInputService__2.InputChanged:Connect(u28));
	table.insert(u26, l__UserInputService__2.InputEnded:Connect(u29));
	table.insert(u26, l__UserInputService__2.PointerAction:Connect(u30));
end;
function v15.getInputEnabled()
	return u19;
end;
function v15.resetInputForFrameEnd()
	u7.Movement = Vector2.new();
	u8.Move = Vector2.new();
	u8.Pinch = 0;
	u7.Wheel = 0;
	u7.Pan = Vector2.new();
	u7.Pinch = 0;
end;
l__UserInputService__2.WindowFocused:Connect(u20);
l__UserInputService__2.WindowFocusReleased:Connect(u20);
local u31 = false;
function v15.getHoldPan()
	return u31;
end;
local u32 = false;
function v15.getTogglePan()
	return u32;
end;
function v15.getPanning()
	return u32 or u31;
end;
function v15.setTogglePan(p38)
	u32 = p38;
end;
local u33 = false;
local u34 = nil;
local u35 = nil;
local l__Event__36 = v11.Event;
local u37 = 0;
local l__Event__38 = v12.Event;
function v15.enableCameraToggleInput()
	if u33 then
		return;
	end;
	u33 = true;
	u31 = false;
	u32 = false;
	if u34 then
		u34:Disconnect();
	end;
	if u35 then
		u35:Disconnect();
	end;
	u34 = l__Event__36:Connect(function()
		u31 = true;
		u37 = tick();
	end);
	u35 = l__Event__38:Connect(function()
		u31 = false;
		if tick() - u37 < 0.3 and (u32 or l__UserInputService__2:GetMouseDelta().Magnitude < 2) then
			u32 = not u32;
		end;
	end);
end;
function v15.disableCameraToggleInput()
	if not u33 then
		return;
	end;
	u33 = false;
	if u34 then
		u34:Disconnect();
		u34 = nil;
	end;
	if u35 then
		u35:Disconnect();
		u35 = nil;
	end;
end;
return v15;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1115"><Properties><string name="Name">BaseCamera</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent:WaitForChild("CameraUtils"));
local v2 = {};
v2.__index = v2;
local l__LocalPlayer__1 = game:GetService("Players").LocalPlayer;
local u2 = Vector3.new(0, 0, 0);
local l__UserGameSettings__3 = UserSettings():GetService("UserGameSettings");
function v2.new()
	local v3 = setmetatable({}, v2);
	v3.FIRST_PERSON_DISTANCE_THRESHOLD = 1;
	v3.cameraType = nil;
	v3.cameraMovementMode = nil;
	v3.lastCameraTransform = nil;
	v3.lastUserPanCamera = tick();
	v3.humanoidRootPart = nil;
	v3.humanoidCache = {};
	v3.lastSubject = nil;
	v3.lastSubjectPosition = Vector3.new(0, 5, 0);
	v3.lastSubjectCFrame = CFrame.new(v3.lastSubjectPosition);
	v3.defaultSubjectDistance = math.clamp(12.5, l__LocalPlayer__1.CameraMinZoomDistance, l__LocalPlayer__1.CameraMaxZoomDistance);
	v3.currentSubjectDistance = math.clamp(12.5, l__LocalPlayer__1.CameraMinZoomDistance, l__LocalPlayer__1.CameraMaxZoomDistance);
	v3.inFirstPerson = false;
	v3.inMouseLockedMode = false;
	v3.portraitMode = false;
	v3.isSmallTouchScreen = false;
	v3.resetCameraAngle = true;
	v3.enabled = false;
	v3.PlayerGui = nil;
	v3.cameraChangedConn = nil;
	v3.viewportSizeChangedConn = nil;
	v3.shouldUseVRRotation = false;
	v3.VRRotationIntensityAvailable = false;
	v3.lastVRRotationIntensityCheckTime = 0;
	v3.lastVRRotationTime = 0;
	v3.vrRotateKeyCooldown = {};
	v3.cameraTranslationConstraints = Vector3.new(1, 1, 1);
	v3.humanoidJumpOrigin = nil;
	v3.trackingHumanoid = nil;
	v3.cameraFrozen = false;
	v3.subjectStateChangedConn = nil;
	v3.gamepadZoomPressConnection = nil;
	v3.mouseLockOffset = u2;
	if l__LocalPlayer__1.Character then
		v3:OnCharacterAdded(l__LocalPlayer__1.Character);
	end;
	l__LocalPlayer__1.CharacterAdded:Connect(function(p1)
		v3:OnCharacterAdded(p1);
	end);
	if v3.cameraChangedConn then
		v3.cameraChangedConn:Disconnect();
	end;
	v3.cameraChangedConn = workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		v3:OnCurrentCameraChanged();
	end);
	v3:OnCurrentCameraChanged();
	if v3.playerCameraModeChangeConn then
		v3.playerCameraModeChangeConn:Disconnect();
	end;
	v3.playerCameraModeChangeConn = l__LocalPlayer__1:GetPropertyChangedSignal("CameraMode"):Connect(function()
		v3:OnPlayerCameraPropertyChange();
	end);
	if v3.minDistanceChangeConn then
		v3.minDistanceChangeConn:Disconnect();
	end;
	v3.minDistanceChangeConn = l__LocalPlayer__1:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(function()
		v3:OnPlayerCameraPropertyChange();
	end);
	if v3.maxDistanceChangeConn then
		v3.maxDistanceChangeConn:Disconnect();
	end;
	v3.maxDistanceChangeConn = l__LocalPlayer__1:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(function()
		v3:OnPlayerCameraPropertyChange();
	end);
	if v3.playerDevTouchMoveModeChangeConn then
		v3.playerDevTouchMoveModeChangeConn:Disconnect();
	end;
	v3.playerDevTouchMoveModeChangeConn = l__LocalPlayer__1:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
		v3:OnDevTouchMovementModeChanged();
	end);
	v3:OnDevTouchMovementModeChanged();
	if v3.gameSettingsTouchMoveMoveChangeConn then
		v3.gameSettingsTouchMoveMoveChangeConn:Disconnect();
	end;
	v3.gameSettingsTouchMoveMoveChangeConn = l__UserGameSettings__3:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
		v3:OnGameSettingsTouchMovementModeChanged();
	end);
	v3:OnGameSettingsTouchMovementModeChanged();
	l__UserGameSettings__3:SetCameraYInvertVisible();
	l__UserGameSettings__3:SetGamepadCameraSensitivityVisible();
	v3.hasGameLoaded = game:IsLoaded();
	if not v3.hasGameLoaded then
		v3.gameLoadedConn = game.Loaded:Connect(function()
			v3.hasGameLoaded = true;
			v3.gameLoadedConn:Disconnect();
			v3.gameLoadedConn = nil;
		end);
	end;
	v3:OnPlayerCameraPropertyChange();
	return v3;
end;
function v2.GetModuleName(p2)
	return "BaseCamera";
end;
local l__UserInputService__4 = game:GetService("UserInputService");
function v2.OnCharacterAdded(p3, p4)
	p3.resetCameraAngle = p3.resetCameraAngle or p3:GetEnabled();
	p3.humanoidRootPart = nil;
	if l__UserInputService__4.TouchEnabled then
		p3.PlayerGui = l__LocalPlayer__1:WaitForChild("PlayerGui");
		for v4, v5 in ipairs(p4:GetChildren()) do
			if v5:IsA("Tool") then
				p3.isAToolEquipped = true;
			end;
		end;
		p4.ChildAdded:Connect(function(p5)
			if p5:IsA("Tool") then
				p3.isAToolEquipped = true;
			end;
		end);
		p4.ChildRemoved:Connect(function(p6)
			if p6:IsA("Tool") then
				p3.isAToolEquipped = false;
			end;
		end);
	end;
end;
function v2.GetHumanoidRootPart(p7)
	if not p7.humanoidRootPart and l__LocalPlayer__1.Character then
		local v6 = l__LocalPlayer__1.Character:FindFirstChildOfClass("Humanoid");
		if v6 then
			p7.humanoidRootPart = v6.RootPart;
		end;
	end;
	return p7.humanoidRootPart;
end;
function v2.GetBodyPartToFollow(p8, p9, p10)
	local v7 = nil;
	if p9:GetState() == Enum.HumanoidStateType.Dead then
		v7 = p9.Parent;
		if not v7 or not v7:IsA("Model") then
			return p9.RootPart;
		end;
	else
		return p9.RootPart;
	end;
	return v7:FindFirstChild("Head") or p9.RootPart;
end;
local l__VRService__5 = game:GetService("VRService");
local u6 = Vector3.new(0, 1.5, 0);
local u7 = Vector3.new(2, 2, 1);
local u8 = Vector3.new(0, 2, 0);
local u9 = Vector3.new(0, 1.5, 0);
function v2.GetSubjectCFrame(p11)
	local v8 = p11.lastSubjectCFrame;
	local l__CurrentCamera__9 = workspace.CurrentCamera;
	local v10 = l__CurrentCamera__9 and l__CurrentCamera__9.CameraSubject;
	if not v10 then
		return v8;
	end;
	if v10:IsA("Humanoid") then
		local v11 = v10:GetState() == Enum.HumanoidStateType.Dead;
		if l__VRService__5.VREnabled and v11 and v10 == p11.lastSubject then
			v8 = p11.lastSubjectCFrame;
		else
			local v12 = v10.RootPart;
			if v11 and v10.Parent and v10.Parent:IsA("Model") then
				v12 = v10.Parent:FindFirstChild("Head") and v12;
			end;
			if v12 and v12:IsA("BasePart") then
				if v10.RigType == Enum.HumanoidRigType.R15 then
					if v10.AutomaticScalingEnabled then
						local v13 = u6;
						local l__RootPart__14 = v10.RootPart;
						if v12 == l__RootPart__14 then
							v13 = v13 + Vector3.new(0, (l__RootPart__14.Size.Y - u7.Y) / 2, 0);
						end;
					else
						v13 = u8;
					end;
				else
					v13 = u9;
				end;
				if v11 then
					v13 = u2;
				end;
				v8 = v12.CFrame * CFrame.new(v13 + v10.CameraOffset);
			end;
		end;
	elseif v10:IsA("BasePart") then
		v8 = v10.CFrame;
	elseif v10:IsA("Model") then
		if v10.PrimaryPart then
			v8 = v10:GetPrimaryPartCFrame();
		else
			v8 = CFrame.new();
		end;
	end;
	if v8 then
		p11.lastSubjectCFrame = v8;
	end;
	return v8;
end;
function v2.GetSubjectVelocity(p12)
	local l__CurrentCamera__15 = workspace.CurrentCamera;
	local v16 = l__CurrentCamera__15 and l__CurrentCamera__15.CameraSubject;
	if not v16 then
		return u2;
	end;
	if v16:IsA("BasePart") then
		return v16.Velocity;
	end;
	if v16:IsA("Humanoid") then
		local l__RootPart__17 = v16.RootPart;
		if l__RootPart__17 then
			return l__RootPart__17.Velocity;
		end;
	elseif v16:IsA("Model") then
		local l__PrimaryPart__18 = v16.PrimaryPart;
		if l__PrimaryPart__18 then
			return l__PrimaryPart__18.Velocity;
		end;
	end;
	return u2;
end;
function v2.GetSubjectRotVelocity(p13)
	local l__CurrentCamera__19 = workspace.CurrentCamera;
	local v20 = l__CurrentCamera__19 and l__CurrentCamera__19.CameraSubject;
	if not v20 then
		return u2;
	end;
	if v20:IsA("BasePart") then
		return v20.RotVelocity;
	end;
	if v20:IsA("Humanoid") then
		local l__RootPart__21 = v20.RootPart;
		if l__RootPart__21 then
			return l__RootPart__21.RotVelocity;
		end;
	elseif v20:IsA("Model") then
		local l__PrimaryPart__22 = v20.PrimaryPart;
		if l__PrimaryPart__22 then
			return l__PrimaryPart__22.RotVelocity;
		end;
	end;
	return u2;
end;
local u10 = require(script.Parent:WaitForChild("CameraInput"));
local u11 = require(script.Parent:WaitForChild("ZoomController"));
function v2.StepZoom(p14)
	local l__currentSubjectDistance__23 = p14.currentSubjectDistance;
	local v24 = u10.getZoomDelta();
	if math.abs(v24) > 0 then
		if v24 > 0 then
			local v25 = math.max(l__currentSubjectDistance__23 + v24 * (1 + l__currentSubjectDistance__23 * 0.5), p14.FIRST_PERSON_DISTANCE_THRESHOLD);
		else
			v25 = math.max((l__currentSubjectDistance__23 + v24) / (1 - v24 * 0.5), 0.5);
		end;
		if v25 < p14.FIRST_PERSON_DISTANCE_THRESHOLD then
			v25 = 0.5;
		end;
		p14:SetCameraToSubjectDistance(v25);
	end;
	return u11.GetZoomRadius();
end;
local u12 = Vector3.new(0, 5, 0);
local u13 = Vector3.new(0, 4, 0);
function v2.GetSubjectPosition(p15)
	local v26 = p15.lastSubjectPosition;
	local l__CurrentCamera__27 = game.Workspace.CurrentCamera;
	local v28 = l__CurrentCamera__27 and l__CurrentCamera__27.CameraSubject;
	if not v28 then
		return;
	end;
	if v28:IsA("Humanoid") then
		local v29 = v28:GetState() == Enum.HumanoidStateType.Dead;
		if l__VRService__5.VREnabled and v29 and v28 == p15.lastSubject then
			v26 = p15.lastSubjectPosition;
		else
			local v30 = v28.RootPart;
			if v29 and v28.Parent and v28.Parent:IsA("Model") then
				v30 = v28.Parent:FindFirstChild("Head") and v30;
			end;
			if v30 and v30:IsA("BasePart") then
				if v28.RigType == Enum.HumanoidRigType.R15 then
					if v28.AutomaticScalingEnabled then
						local v31 = u6;
						if v30 == v28.RootPart then
							v31 = v31 + Vector3.new(0, v28.RootPart.Size.Y / 2 - u7.Y / 2, 0);
						end;
					else
						v31 = u8;
					end;
				else
					v31 = u9;
				end;
				if v29 then
					v31 = u2;
				end;
				v26 = v30.CFrame.p + v30.CFrame:vectorToWorldSpace(v31 + v28.CameraOffset);
			end;
		end;
	elseif v28:IsA("VehicleSeat") then
		local v32 = u12;
		if l__VRService__5.VREnabled then
			v32 = u13;
		end;
		v26 = v28.CFrame.p + v28.CFrame:vectorToWorldSpace(v32);
	elseif v28:IsA("SkateboardPlatform") then
		v26 = v28.CFrame.p + u12;
	elseif v28:IsA("BasePart") then
		v26 = v28.CFrame.p;
	elseif v28:IsA("Model") then
		if v28.PrimaryPart then
			v26 = v28:GetPrimaryPartCFrame().p;
		else
			v26 = v28:GetModelCFrame().p;
		end;
	end;
	p15.lastSubject = v28;
	p15.lastSubjectPosition = v26;
	return v26;
end;
function v2.UpdateDefaultSubjectDistance(p16)
	if p16.portraitMode then
		p16.defaultSubjectDistance = math.clamp(25, l__LocalPlayer__1.CameraMinZoomDistance, l__LocalPlayer__1.CameraMaxZoomDistance);
		return;
	end;
	p16.defaultSubjectDistance = math.clamp(12.5, l__LocalPlayer__1.CameraMinZoomDistance, l__LocalPlayer__1.CameraMaxZoomDistance);
end;
function v2.OnViewportSizeChanged(p17)
	local l__ViewportSize__33 = game.Workspace.CurrentCamera.ViewportSize;
	p17.portraitMode = l__ViewportSize__33.X < l__ViewportSize__33.Y;
	local v34 = l__UserInputService__4.TouchEnabled;
	if v34 then
		v34 = true;
		if not (l__ViewportSize__33.Y < 500) then
			v34 = l__ViewportSize__33.X < 700;
		end;
	end;
	p17.isSmallTouchScreen = v34;
	p17:UpdateDefaultSubjectDistance();
end;
function v2.OnCurrentCameraChanged(p18)
	if l__UserInputService__4.TouchEnabled then
		if p18.viewportSizeChangedConn then
			p18.viewportSizeChangedConn:Disconnect();
			p18.viewportSizeChangedConn = nil;
		end;
		local l__CurrentCamera__35 = game.Workspace.CurrentCamera;
		if l__CurrentCamera__35 then
			p18:OnViewportSizeChanged();
			p18.viewportSizeChangedConn = l__CurrentCamera__35:GetPropertyChangedSignal("ViewportSize"):Connect(function()
				p18:OnViewportSizeChanged();
			end);
		end;
	end;
	if p18.cameraSubjectChangedConn then
		p18.cameraSubjectChangedConn:Disconnect();
		p18.cameraSubjectChangedConn = nil;
	end;
	local l__CurrentCamera__36 = game.Workspace.CurrentCamera;
	if l__CurrentCamera__36 then
		p18.cameraSubjectChangedConn = l__CurrentCamera__36:GetPropertyChangedSignal("CameraSubject"):Connect(function()
			p18:OnNewCameraSubject();
		end);
		p18:OnNewCameraSubject();
	end;
end;
function v2.OnDynamicThumbstickEnabled(p19)
	if l__UserInputService__4.TouchEnabled then
		p19.isDynamicThumbstickEnabled = true;
	end;
end;
function v2.OnDynamicThumbstickDisabled(p20)
	p20.isDynamicThumbstickEnabled = false;
end;
function v2.OnGameSettingsTouchMovementModeChanged(p21)
	if l__LocalPlayer__1.DevTouchMovementMode == Enum.DevTouchMovementMode.UserChoice then
		if l__UserGameSettings__3.TouchMovementMode ~= Enum.TouchMovementMode.DynamicThumbstick and l__UserGameSettings__3.TouchMovementMode ~= Enum.TouchMovementMode.Default then
			p21:OnDynamicThumbstickDisabled();
			return;
		end;
	else
		return;
	end;
	p21:OnDynamicThumbstickEnabled();
end;
function v2.OnDevTouchMovementModeChanged(p22)
	if l__LocalPlayer__1.DevTouchMovementMode == Enum.DevTouchMovementMode.DynamicThumbstick then
		p22:OnDynamicThumbstickEnabled();
		return;
	end;
	p22:OnGameSettingsTouchMovementModeChanged();
end;
function v2.OnPlayerCameraPropertyChange(p23)
	p23:SetCameraToSubjectDistance(p23.currentSubjectDistance);
end;
local u14 = math.rad(15);
function v2.GetCameraHeight(p24)
	if not l__VRService__5.VREnabled or not (not p24.inFirstPerson) then
		return 0;
	end;
	return math.sin(u14) * p24.currentSubjectDistance;
end;
function v2.InputTranslationToCameraAngleChange(p25, p26, p27)
	return p26 * p27;
end;
function v2.GamepadZoomPress(p28)
	local v37 = p28:GetCameraToSubjectDistance();
	if v37 > 15 then
		p28:SetCameraToSubjectDistance(10);
		return;
	end;
	if v37 > 5 then
		p28:SetCameraToSubjectDistance(0);
		return;
	end;
	p28:SetCameraToSubjectDistance(20);
end;
function v2.Enable(p29, p30)
	if p29.enabled ~= p30 then
		p29.enabled = p30;
		if p29.enabled then
			u10.setInputEnabled(true);
			p29.gamepadZoomPressConnection = u10.gamepadZoomPress:Connect(function()
				p29:GamepadZoomPress();
			end);
			if l__LocalPlayer__1.CameraMode == Enum.CameraMode.LockFirstPerson then
				p29.currentSubjectDistance = 0.5;
				if not p29.inFirstPerson then
					p29:EnterFirstPerson();
					return;
				end;
			end;
		else
			u10.setInputEnabled(false);
			if p29.gamepadZoomPressConnection then
				p29.gamepadZoomPressConnection:Disconnect();
				p29.gamepadZoomPressConnection = nil;
			end;
			p29:Cleanup();
		end;
	end;
end;
function v2.GetEnabled(p31)
	return p31.enabled;
end;
function v2.Cleanup(p32)
	if p32.subjectStateChangedConn then
		p32.subjectStateChangedConn:Disconnect();
		p32.subjectStateChangedConn = nil;
	end;
	if p32.viewportSizeChangedConn then
		p32.viewportSizeChangedConn:Disconnect();
		p32.viewportSizeChangedConn = nil;
	end;
	p32.lastCameraTransform = nil;
	p32.lastSubjectCFrame = nil;
	if l__UserInputService__4.MouseBehavior ~= Enum.MouseBehavior.LockCenter then
		l__UserInputService__4.MouseBehavior = Enum.MouseBehavior.Default;
	end;
end;
local u15 = require(script.Parent:WaitForChild("CameraUI"));
local u16 = require(script.Parent:WaitForChild("CameraToggleStateController"));
function v2.UpdateMouseBehavior(p33)
	if p33.isCameraToggle and l__UserGameSettings__3.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove == false then
		u15.setCameraModeToastEnabled(true);
		u10.enableCameraToggleInput();
		u16(p33.inFirstPerson);
		return;
	end;
	u15.setCameraModeToastEnabled(false);
	u10.disableCameraToggleInput();
	if not p33.inFirstPerson and not p33.inMouseLockedMode then
		l__UserGameSettings__3.RotationType = Enum.RotationType.MovementRelative;
		l__UserInputService__4.MouseBehavior = Enum.MouseBehavior.Default;
		return;
	end;
	l__UserGameSettings__3.RotationType = Enum.RotationType.CameraRelative;
	l__UserInputService__4.MouseBehavior = Enum.MouseBehavior.LockCenter;
end;
function v2.UpdateForDistancePropertyChange(p34)
	p34:SetCameraToSubjectDistance(p34.currentSubjectDistance);
end;
function v2.SetCameraToSubjectDistance(p35, p36)
	if l__LocalPlayer__1.CameraMode == Enum.CameraMode.LockFirstPerson then
		p35.currentSubjectDistance = 0.5;
		if not p35.inFirstPerson then
			p35:EnterFirstPerson();
		end;
	else
		local v38 = math.clamp(p36, l__LocalPlayer__1.CameraMinZoomDistance, l__LocalPlayer__1.CameraMaxZoomDistance);
		if v38 < 1 then
			p35.currentSubjectDistance = 0.5;
			if not p35.inFirstPerson then
				p35:EnterFirstPerson();
			end;
		else
			p35.currentSubjectDistance = v38;
			if p35.inFirstPerson then
				p35:LeaveFirstPerson();
			end;
		end;
	end;
	u11.SetZoomParameters(p35.currentSubjectDistance, math.sign(p36 - p35.currentSubjectDistance));
	return p35.currentSubjectDistance;
end;
function v2.SetCameraType(p37, p38)
	p37.cameraType = p38;
end;
function v2.GetCameraType(p39)
	return p39.cameraType;
end;
function v2.SetCameraMovementMode(p40, p41)
	p40.cameraMovementMode = p41;
end;
function v2.GetCameraMovementMode(p42)
	return p42.cameraMovementMode;
end;
function v2.SetIsMouseLocked(p43, p44)
	p43.inMouseLockedMode = p44;
end;
function v2.GetIsMouseLocked(p45)
	return p45.inMouseLockedMode;
end;
function v2.SetMouseLockOffset(p46, p47)
	p46.mouseLockOffset = p47;
end;
function v2.GetMouseLockOffset(p48)
	return p48.mouseLockOffset;
end;
function v2.InFirstPerson(p49)
	return p49.inFirstPerson;
end;
function v2.EnterFirstPerson(p50)

end;
function v2.LeaveFirstPerson(p51)

end;
function v2.GetCameraToSubjectDistance(p52)
	return p52.currentSubjectDistance;
end;
function v2.GetMeasuredDistanceToFocus(p53)
	local l__CurrentCamera__39 = game.Workspace.CurrentCamera;
	if not l__CurrentCamera__39 then
		return nil;
	end;
	return (l__CurrentCamera__39.CoordinateFrame.p - l__CurrentCamera__39.Focus.p).magnitude;
end;
local u17 = Vector3.new(0, 0, 1);
function v2.GetCameraLookVector(p54)
	return game.Workspace.CurrentCamera and game.Workspace.CurrentCamera.CFrame.lookVector or u17;
end;
local u18 = math.rad(80);
local u19 = math.rad(-80);
function v2.CalculateNewLookCFrameFromArg(p55, p56, p57)
	local v40 = p56 or p55:GetCameraLookVector();
	local v41 = math.asin(v40.y);
	local v42 = Vector2.new(p57.x, (math.clamp(p57.y, -u18 + v41, -u19 + v41)));
	return CFrame.Angles(0, -v42.x, 0) * CFrame.new(u2, v40) * CFrame.Angles(-v42.y, 0, 0);
end;
function v2.CalculateNewLookVectorFromArg(p58, p59, p60)
	return p58:CalculateNewLookCFrameFromArg(p59, p60).lookVector;
end;
local u20 = Vector3.new(1, 0, 1);
function v2.CalculateNewLookVectorVRFromArg(p61, p62)
	local v43 = Vector2.new(p62.x, 0);
	return ((CFrame.Angles(0, -v43.x, 0) * CFrame.new(u2, ((p61:GetSubjectPosition() - game.Workspace.CurrentCamera.CFrame.p) * u20).unit) * CFrame.Angles(-v43.y, 0, 0)).lookVector * u20).unit;
end;
function v2.GetHumanoid(p63)
	local v44 = l__LocalPlayer__1 and l__LocalPlayer__1.Character;
	if not v44 then
		return nil;
	end;
	local v45 = p63.humanoidCache[l__LocalPlayer__1];
	if v45 and v45.Parent == v44 then
		return v45;
	end;
	p63.humanoidCache[l__LocalPlayer__1] = nil;
	local v46 = v44:FindFirstChildOfClass("Humanoid");
	if v46 then
		p63.humanoidCache[l__LocalPlayer__1] = v46;
	end;
	return v46;
end;
function v2.GetHumanoidPartToFollow(p64, p65, p66)
	if p66 ~= Enum.HumanoidStateType.Dead then
		return p65.Torso;
	end;
	local l__Parent__47 = p65.Parent;
	if not l__Parent__47 then
		return p65.Torso;
	end;
	return l__Parent__47:FindFirstChild("Head") or p65.Torso;
end;
function v2.ApplyVRTransform(p67)
	if not l__VRService__5.VREnabled then
		return;
	end;
	local v48 = p67.humanoidRootPart and p67.humanoidRootPart:FindFirstChild("RootJoint");
	if not v48 then
		return;
	end;
	local l__CameraSubject__49 = game.Workspace.CurrentCamera.CameraSubject;
	if not p67.inFirstPerson or not (not l__CameraSubject__49) and not (not l__CameraSubject__49:IsA("VehicleSeat")) then
		v48.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0);
		return;
	end;
	local v50 = l__VRService__5:GetUserCFrame(Enum.UserCFrame.Head);
	v48.C0 = CFrame.new((v50 - v50.p):vectorToObjectSpace(v50.p)) * CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0);
end;
function v2.IsInFirstPerson(p68)
	return p68.inFirstPerson;
end;
local l__StarterGui__21 = game:GetService("StarterGui");
function v2.ShouldUseVRRotation(p69)
	if not l__VRService__5.VREnabled then
		return false;
	end;
	if not p69.VRRotationIntensityAvailable and tick() - p69.lastVRRotationIntensityCheckTime < 1 then
		return false;
	end;
	local v51, v52 = pcall(function()
		return l__StarterGui__21:GetCore("VRRotationIntensity");
	end);
	p69.VRRotationIntensityAvailable = v51 and v52 ~= nil;
	p69.lastVRRotationIntensityCheckTime = tick();
	local v53 = v51;
	if v53 then
		v53 = false;
		if v52 ~= nil then
			v53 = v52 ~= "Smooth";
		end;
	end;
	p69.shouldUseVRRotation = v53;
	return p69.shouldUseVRRotation;
end;
local u22 = Vector2.new(0, 0);
function v2.GetVRRotationInput(p70)
	local v54 = u22;
	local v55, v56 = pcall(function()
		return l__StarterGui__21:GetCore("VRRotationIntensity");
	end);
	if not v55 then
		return;
	end;
	local v57 = p70:GetRepeatDelayValue(v56) <= tick() - p70.lastVRRotationTime;
	if p70:GetActivateValue() <= math.abs(u22.x) then
		if v57 or not p70.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] then
			local v58 = 1;
			if u22.x < 0 then
				v58 = -1;
			end;
			v54 = v54 + p70:GetRotateAmountValue(v56) * v58;
			p70.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = true;
		end;
	elseif math.abs(u22.x) < p70:GetActivateValue() - 0.1 then
		p70.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = nil;
	end;
	p70.vrRotateKeyCooldown[Enum.KeyCode.Left] = nil;
	p70.vrRotateKeyCooldown[Enum.KeyCode.Right] = nil;
	if v54 ~= u22 then
		p70.lastVRRotationTime = tick();
	end;
	return v54;
end;
function v2.CancelCameraFreeze(p71, p72)
	if not p72 then
		p71.cameraTranslationConstraints = Vector3.new(p71.cameraTranslationConstraints.x, 1, p71.cameraTranslationConstraints.z);
	end;
	if p71.cameraFrozen then
		p71.trackingHumanoid = nil;
		p71.cameraFrozen = false;
	end;
end;
function v2.StartCameraFreeze(p73, p74, p75)
	if not p73.cameraFrozen then
		p73.humanoidJumpOrigin = p74;
		p73.trackingHumanoid = p75;
		p73.cameraTranslationConstraints = Vector3.new(p73.cameraTranslationConstraints.x, 0, p73.cameraTranslationConstraints.z);
		p73.cameraFrozen = true;
	end;
end;
function v2.OnNewCameraSubject(p76)
	if p76.subjectStateChangedConn then
		p76.subjectStateChangedConn:Disconnect();
		p76.subjectStateChangedConn = nil;
	end;
	local v59 = workspace.CurrentCamera and workspace.CurrentCamera.CameraSubject;
	if p76.trackingHumanoid ~= v59 then
		p76:CancelCameraFreeze();
	end;
	if v59 and v59:IsA("Humanoid") then
		p76.subjectStateChangedConn = v59.StateChanged:Connect(function(p77, p78)
			if l__VRService__5.VREnabled and p78 == Enum.HumanoidStateType.Jumping and not p76.inFirstPerson then
				p76:StartCameraFreeze(p76:GetSubjectPosition(), v59);
				return;
			end;
			if p78 ~= Enum.HumanoidStateType.Jumping and p78 ~= Enum.HumanoidStateType.Freefall then
				p76:CancelCameraFreeze(true);
			end;
		end);
	end;
end;
function v2.GetVRFocus(p79, p80, p81)
	local v60 = p79.LastCameraFocus and p80;
	if not p79.cameraFrozen then
		p79.cameraTranslationConstraints = Vector3.new(p79.cameraTranslationConstraints.x, math.min(1, p79.cameraTranslationConstraints.y + 0.42 * p81), p79.cameraTranslationConstraints.z);
	end;
	if p79.cameraFrozen and p79.humanoidJumpOrigin and v60.y < p79.humanoidJumpOrigin.y then
		local v61 = CFrame.new(Vector3.new(p80.x, math.min(p79.humanoidJumpOrigin.y, v60.y + 5 * p81), p80.z));
	else
		v61 = CFrame.new(Vector3.new(p80.x, v60.y, p80.z):lerp(p80, p79.cameraTranslationConstraints.y));
	end;
	if p79.cameraFrozen then
		if p79.inFirstPerson then
			p79:CancelCameraFreeze();
		end;
		if p79.humanoidJumpOrigin and p80.y < p79.humanoidJumpOrigin.y - 0.5 then
			p79:CancelCameraFreeze();
		end;
	end;
	return v61;
end;
local u23 = Vector2.new(math.rad(15), 0);
local u24 = Vector2.new(math.rad(45), 0);
function v2.GetRotateAmountValue(p82, p83)
	p83 = p83 or l__StarterGui__21:GetCore("VRRotationIntensity");
	if p83 then
		if p83 == "Low" then
			return u23;
		end;
		if p83 == "High" then
			return u24;
		end;
	end;
	return u22;
end;
function v2.GetRepeatDelayValue(p84, p85)
	p85 = p85 or l__StarterGui__21:GetCore("VRRotationIntensity");
	if p85 then
		if p85 == "Low" then
			return 0.1;
		end;
		if p85 == "High" then
			return 0.4;
		end;
	end;
	return 0;
end;
function v2.Update(p86, p87)
	error("BaseCamera:Update() This is a virtual function that should never be getting called.", 2);
end;
return v2;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1122"><Properties><string name="Name">CameraUI</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local v2 = l__Players__1.LocalPlayer;
if not v2 then
	l__Players__1:GetPropertyChangedSignal("LocalPlayer"):Wait();
	v2 = l__Players__1.LocalPlayer;
end;
local u1 = false;
local u2 = nil;
local function u3(p1)
	return function(p2)
		local v3 = Instance.new(p1);
		p2.Parent = nil;
		local v4, v5, v6 = pairs(p2);
		while true do
			local v7 = nil;
			local v8 = nil;
			v8, v7 = v4(v5, v6);
			if not v8 then
				break;
			end;
			v6 = v8;
			if type(v8) == "string" then
				v3[v8] = v7;
			else
				v7.Parent = v3;
			end;		
		end;
		v3.Parent = p2.Parent;
		return v3;
	end;
end;
local u4 = UDim2.new(0, 80, 0, 58);
local u5 = Color3.fromRGB(32, 32, 32);
local u6 = Color3.fromRGB(200, 200, 200);
local u7 = (function(p3, p4)
	local v9 = p3:FindFirstChildOfClass(p4);
	while not v9 or v9.ClassName ~= p4 do
		v9 = p3.ChildAdded:Wait();	
	end;
	return v9;
end)(v2, "PlayerGui");
local u8 = nil;
local u9 = nil;
local u10 = nil;
local u11 = nil;
local v10 = {};
local function u12()
	assert(not u1);
	u2 = u3("ScreenGui")({
		Name = "RbxCameraUI", 
		AutoLocalize = false, 
		Enabled = true, 
		DisplayOrder = -1, 
		IgnoreGuiInset = false, 
		ResetOnSpawn = false, 
		ZIndexBehavior = Enum.ZIndexBehavior.Sibling, 
		Parent = u7,
		(u3("ImageLabel")({
			Name = "Toast", 
			Visible = false, 
			AnchorPoint = Vector2.new(0.5, 0), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Position = UDim2.new(0.5, 0, 0, 8), 
			Size = u4, 
			Image = "rbxasset://textures/ui/Camera/CameraToast9Slice.png", 
			ImageColor3 = u5, 
			ImageRectSize = Vector2.new(6, 6), 
			ImageTransparency = 1, 
			ScaleType = Enum.ScaleType.Slice, 
			SliceCenter = Rect.new(3, 3, 3, 3), 
			ClipsDescendants = true,
			u3("Frame")({
				Name = "IconBuffer", 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Position = UDim2.new(0, 0, 0, 0), 
				Size = UDim2.new(0, 80, 1, 0),
				u3("ImageLabel")({
					Name = "Icon", 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(0, 48, 0, 48), 
					ZIndex = 2, 
					Image = "rbxasset://textures/ui/Camera/CameraToastIcon.png", 
					ImageColor3 = u6, 
					ImageTransparency = 1
				})
			}), u3("Frame")({
				Name = "TextBuffer", 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Position = UDim2.new(0, 80, 0, 0), 
				Size = UDim2.new(1, -80, 1, 0), 
				ClipsDescendants = true,
				u3("TextLabel")({
					Name = "Upper", 
					AnchorPoint = Vector2.new(0, 1), 
					BackgroundTransparency = 1, 
					Position = UDim2.new(0, 0, 0.5, 0), 
					Size = UDim2.new(1, 0, 0, 19), 
					Font = Enum.Font.GothamSemibold, 
					Text = "Camera control enabled", 
					TextColor3 = u6, 
					TextTransparency = 1, 
					TextSize = 19, 
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Center
				}), u3("TextLabel")({
					Name = "Lower", 
					AnchorPoint = Vector2.new(0, 0), 
					BackgroundTransparency = 1, 
					Position = UDim2.new(0, 0, 0.5, 3), 
					Size = UDim2.new(1, 0, 0, 15), 
					Font = Enum.Font.Gotham, 
					Text = "Right mouse button to toggle", 
					TextColor3 = u6, 
					TextTransparency = 1, 
					TextSize = 15, 
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Center
				})
			})
		}))
	});
	u8 = u2.Toast;
	u9 = u8.IconBuffer.Icon;
	u10 = u8.TextBuffer.Upper;
	u11 = u8.TextBuffer.Lower;
	u1 = true;
end;
function v10.setCameraModeToastEnabled(p5)
	if not p5 and not u1 then
		return;
	end;
	if not u1 then
		u12();
	end;
	u8.Visible = p5;
	if not p5 then
		v10.setCameraModeToastOpen(false);
	end;
end;
local l__TweenService__13 = game:GetService("TweenService");
local u14 = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out);
local u15 = UDim2.new(0, 326, 0, 58);
function v10.setCameraModeToastOpen(p6)
	assert(u1);
	local v11 = {
		Size = p6 and u15 or u4
	};
	if p6 then
		local v12 = 0.4;
	else
		v12 = 1;
	end;
	v11.ImageTransparency = v12;
	l__TweenService__13:Create(u8, u14, v11):Play();
	local v13 = {};
	if p6 then
		local v14 = 0;
	else
		v14 = 1;
	end;
	v13.ImageTransparency = v14;
	l__TweenService__13:Create(u9, u14, v13):Play();
	local v15 = {};
	if p6 then
		local v16 = 0;
	else
		v16 = 1;
	end;
	v15.TextTransparency = v16;
	l__TweenService__13:Create(u10, u14, v15):Play();
	local v17 = {};
	if p6 then
		local v18 = 0;
	else
		v18 = 1;
	end;
	v17.TextTransparency = v18;
	l__TweenService__13:Create(u11, u14, v17):Play();
end;
return v10;
]]></ProtectedString></Properties></Item></Item></Item><Item class="LocalScript" referent="RBX1131"><Properties><string name="Name">PlayerScriptsLoader</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

require(script.Parent:WaitForChild("PlayerModule"));
]]></ProtectedString></Properties></Item></Item><Item class="Folder" referent="RBX1140"><Properties><string name="Name">PlayerGui</string></Properties><Item class="Folder" referent="RBX1143"><Properties><string name="Name">topbarkek</string></Properties><Item class="LocalScript" referent="RBX1146"><Properties><string name="Name">identifier</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__serverID__1 = workspace.ServerStuff.serverID;
while true do
	wait();
	if l__serverID__1.Value ~= "empty" then
		break;
	end;
end;
while true do
	if l__serverID__1.outdated.Value == true then
		script.Parent.frame.TextLabel.Text = "SERVER V.1." .. tostring(l__serverID__1.serverVer.Value) .. " | " .. l__serverID__1.Value .. " | CURRENT SERVER IS OUTDATED";
	else
		script.Parent.frame.TextLabel.Text = "SERVER V.1." .. tostring(l__serverID__1.serverVer.Value) .. " | " .. l__serverID__1.Value .. " |";
	end;
	wait();
end;
]]></ProtectedString></Properties></Item></Item><Item class="Folder" referent="RBX1155"><Properties><string name="Name">controlsGui</string></Properties><Item class="LocalScript" referent="RBX1158"><Properties><string name="Name">handler</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

wait();
local u1 = false;
local l__RenderStepped__2 = game:GetService("RunService").RenderStepped;
local function u3()
	if u1 == true then
		return;
	end;
	u1 = true;
	if script.Parent.keyboardfade.ImageTransparency <= 0.2 then
		while true do
			script.Parent.keyboardfade.ImageTransparency = script.Parent.keyboardfade.ImageTransparency + 0.05;
			for v1, v2 in ipairs(script.Parent:GetChildren()) do
				if v2.Name == "controls" then
					v2.TextTransparency = script.Parent.keyboardfade.ImageTransparency;
				end;
			end;
			l__RenderStepped__2:wait();
			if script.Parent.keyboardfade.ImageTransparency >= 1 then
				break;
			end;		
		end;
		script.Parent.keyboardfade.ImageTransparency = 1;
		for v3, v4 in ipairs(script.Parent:GetChildren()) do
			if v4.Name == "controls" then
				v4.TextTransparency = script.Parent.keyboardfade.ImageTransparency;
			end;
		end;
	else
		while true do
			script.Parent.keyboardfade.ImageTransparency = script.Parent.keyboardfade.ImageTransparency - 0.05;
			for v5, v6 in ipairs(script.Parent:GetChildren()) do
				if v6.Name == "controls" then
					v6.TextTransparency = script.Parent.keyboardfade.ImageTransparency;
				end;
			end;
			l__RenderStepped__2:wait();
			if script.Parent.keyboardfade.ImageTransparency <= 0.2 then
				break;
			end;		
		end;
		script.Parent.keyboardfade.ImageTransparency = 0.19;
		for v7, v8 in ipairs(script.Parent:GetChildren()) do
			if v8.Name == "controls" then
				v8.TextTransparency = script.Parent.keyboardfade.ImageTransparency;
			end;
		end;
	end;
	u1 = false;
end;
local v9 = game:GetService("UserInputService").InputBegan:connect(function(p1, p2)
	if p2 == true then
		return;
	end;
	p1 = p1.KeyCode;
	if p1 == Enum.KeyCode.K then
		u3();
	end;
end);
]]></ProtectedString></Properties></Item></Item></Item><Item class="Folder" referent="RBX1168"><Properties><string name="Name">Backpack</string></Properties><Item class="LocalScript" referent="RBX1171"><Properties><string name="Name">mainHandler</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Failed to decompile script (timed out)]]></ProtectedString></Properties></Item></Item></Item></Item><Item class="Folder" referent="RBX1182"><Properties><string name="Name">LOADED MODULES</string></Properties></Item><Item class="Workspace" referent="RBX1186"><Properties><string name="Name">Workspace</string></Properties><Item class="Folder" referent="RBX1189"><Properties><string name="Name">ServerStuff</string></Properties><Item class="RemoteFunction" referent="RBX1192"><Properties><string name="Name">say</string></Properties></Item><Item class="RemoteEvent" referent="RBX1196"><Properties><string name="Name">refillAmmo</string></Properties></Item><Item class="RemoteFunction" referent="RBX1200"><Properties><string name="Name">retrieveStats</string></Properties></Item><Item class="RemoteEvent" referent="RBX1204"><Properties><string name="Name">toggleFlashlight</string></Properties></Item><Item class="RemoteEvent" referent="RBX1208"><Properties><string name="Name">adjustStats</string></Properties></Item><Item class="RemoteEvent" referent="RBX1212"><Properties><string name="Name">throwWeapon</string></Properties></Item><Item class="RemoteEvent" referent="RBX1216"><Properties><string name="Name">hitmarker</string></Properties></Item><Item class="RemoteEvent" referent="RBX1220"><Properties><string name="Name">playAudio</string></Properties></Item><Item class="Folder" referent="RBX1224"><Properties><string name="Name">Statistics</string></Properties><Item class="ModuleScript" referent="RBX1227"><Properties><string name="Name">AUX_STATISTICS</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

return {
	resp = {
		name = "Emergency Respirator", 
		desc = "Quick-Attach Respirator allowing you to temporarily ignore damage from contaminated areas.", 
		locked = false, 
		manu = "Verkut H.", 
		subtext = "'Why the hell do they not add these filters to our normal respirators?' -Yosef", 
		use_per_night = 1, 
		activestats = {}
	}, 
	knives = {
		name = "Throwing Knives", 
		desc = "Set of knives that allow for silent takedowns. Highly effective on unaware enemies.", 
		locked = "huntingaxe", 
		manu = "Kerry J.", 
		subtext = "'They're quiet alright, but a bottle taped on a pistol would do a better job.' -Valorii", 
		use_per_night = 4, 
		activestats = {
			held = true
		}
	}, 
	decoy = {
		name = "Inveigle Device", 
		desc = "Blank cartridges loaded on a fuse triggered device. Creates a Decoy that can distract enemies.", 
		locked = "archer", 
		manu = "James C.", 
		subtext = "'Yes it's crude, but it helped me escape once, that's what matters.' -Rayzen", 
		use_per_night = 3, 
		activestats = {
			held = true, 
			trigger_timer = 3, 
			cycles = 6, 
			time_between_cycle = 2, 
			trigger_range = 200, 
			throw_velocity = 35
		}
	}, 
	ballistic = {
		name = "Ballistic Dagger", 
		desc = "Spring loaded knife that ejects the blade with a toxic payload. Can be swung in a pinch.", 
		locked = "melee", 
		manu = "Jacob K.", 
		subtext = "'You would think they'd keep their Compound X formula a little harder to find.' -Esau", 
		use_per_night = 1, 
		activestats = {
			impact_damage = 12
		}
	}, 
	tgas = {
		name = "Tear Gas", 
		desc = "Riot Control grenade that detonates on impact. Disorientates enemies, causing them to lose focus.", 
		locked = "headshot", 
		manu = "ULACYLON", 
		subtext = "'I know I've been faithful to Ulacylon, but these are honestly awful compared to NANO bombs.' -Void", 
		use_per_night = 1, 
		activestats = {
			held = true
		}
	}, 
	buffer = {
		name = "Koldera Black", 
		desc = "Rolled chemicals that help improve focus and alleviate some stress.", 
		locked = "locker", 
		manu = "Koldera Inc", 
		subtext = "'Why Koldera? It's the cheapest brand I could find, now leave me alone.' -Jackson", 
		use_per_night = 1, 
		activestats = {}
	}, 
	holo = {
		name = "HOLO Emitter", 
		desc = "Emission device that creates a convincing Hologram to seek out and divert attention.", 
		locked = "firearms", 
		manu = "R.I.S", 
		subtext = "'Yeah so, that's how we got into the UMG lab, stupid right?' -Purger", 
		use_per_night = 2, 
		activestats = {}
	}, 
	ladder = {
		name = "Collapsible Ladder", 
		desc = "Steel framed ladder that allow access to vertical travel or escape. Fickle.", 
		locked = "mantler", 
		manu = "Frank H.", 
		subtext = "'It's actually mindboggling how useful this is. Yes that was sarcasm.' -Amelia", 
		use_per_night = 2, 
		activestats = {}
	}, 
	concertina = {
		name = "Concertina Bomb", 
		desc = "Razor wire bundle that can block an area with sharp Concertina. Will cause Bleeding.", 
		locked = "trapper", 
		manu = "Carter T.", 
		subtext = "'The amount of these damn razors around the workshop should qualify as a safety hazard.' -James", 
		use_per_night = 1, 
		activestats = {
			held = true, 
			throw_velocity = 30, 
			trigger_timer = 2.5, 
			bleed_intensity = 4, 
			slow_time = 4, 
			damage = 3, 
			num_wires = 13
		}
	}
};
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1234"><Properties><string name="Name">CRAFTING_LIST</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(workspace.ServerStuff.Statistics.W_STATISTICS);
return {
	["Stone Rock"] = {
		CRStone = "CRStoneS", 
		CRKnife = "CRQuiver", 
		CRBranch = "CRCaltrop"
	}, 
	["Stone Scrap"] = {
		CRStone = "CRKnife"
	}, 
	["Wood Scrap"] = {
		CRBranch = "CRBandage", 
		CRStone = "CRPavise"
	}, 
	["Crafted Knife"] = {
		CRWoodS = "CRPTrap", 
		CRBranch = "CRBow", 
		CRStone = "CRQuiver", 
		CRBandage = "CRSplint"
	}, 
	["Wood Branch"] = {
		CRKnife = "CRBow", 
		CRStone = "CRCaltrop", 
		CRBranch = "CRWoodS"
	}, 
	["Decommissioned Musket"] = {
		Barrel = "MusketR"
	}, 
	["Crude Bandage"] = {
		CRKnife = "CRSplint"
	}, 
	["Crafted Bow"] = {
		CRBranch = "CRBow", 
		CRQuiver = "CRBow"
	}, 
	["Recurve Bow"] = {
		CRQuiver = "RBow", 
		CRBranch = "RBow"
	}, 
	["Compound MilBow"] = {
		CRQuiver = "CPBow", 
		CRBranch = "CPBow"
	}
};
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1241"><Properties><string name="Name">G_SCRIPTS</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local u1 = {
	createtag = function(p1, p2, p3, p4, p5)
		if p1:FindFirstChild("Humanoid") == nil then
			return;
		end;
		if not p1.Humanoid:FindFirstChild("lastHit") then
			local v1 = Instance.new("StringValue");
			v1.Name = "lastHit";
			v1.Value = p2;
			v1.Parent = p1.Humanoid;
			local v2 = Instance.new("IntValue");
			v2.Name = "damage";
			v2.Value = p3;
			v2.Parent = v1;
			local v3 = Instance.new("StringValue");
			v3.Name = "wepused";
			v3.Value = p4;
			v3.Parent = v1;
			local v4 = Instance.new("BoolValue");
			v4.Name = "backstab";
			v4.Value = p5;
			v4.Parent = v1;
			return;
		end;
		if p2 ~= "NONE" then
			p1.Humanoid.lastHit.Value = p2;
		end;
		p1.Humanoid.lastHit.damage.Value = p3;
		p1.Humanoid.lastHit.wepused.Value = p4;
		p1.Humanoid.lastHit.backstab.Value = p5;
	end, 
	paint = function(p6, p7)
		for v5 = 0, 5 do
			local v6 = Instance.new("Decal");
			v6.Name = "dust";
			v6.Texture = "rbxassetid://" .. p7;
			v6.Color3 = Color3.new(1, 0, 0);
			v6.Face = v5;
			v6.Parent = p6;
		end;
	end, 
	debugline = function(p8, p9)
		local v7 = Instance.new("Part");
		game:GetService("Debris"):AddItem(v7, 2);
		v7.Material = "Neon";
		v7.BrickColor = BrickColor.new("Bright red");
		v7.Name = "debugRay";
		v7.Transparency = 0.5;
		v7.Anchored = true;
		v7.CanCollide = false;
		v7.Locked = true;
		local l__magnitude__8 = (p8 - p9).magnitude;
		v7.CFrame = CFrame.new(p8, p9) * CFrame.new(0, 0, -l__magnitude__8 / 2);
		v7.Size = Vector3.new(0.25, 0.25, l__magnitude__8);
		v7.BrickColor = BrickColor.new("Bright red");
		v7.Material = "Neon";
		v7.Parent = workspace.NoTarget;
		return v7;
	end, 
	findsides = function(p10)
		p10 = string.sub(p10, 7, 7);
		if p10 == "L" then
			return "4387655946";
		end;
		if p10 == "D" then
			return "4387654967";
		end;
		if p10 == "R" then
			return "4387656701";
		end;
		if p10 ~= "U" then
			return;
		end;
		return "4387657360";
	end, 
	paintchar = function(p11, p12, p13)
		if p12 == "setup" then
			local v9 = game.ReplicatedStorage.effects.bodypaint:Clone();
			for v10, v11 in ipairs(v9:GetChildren()) do
				v11.Parent = p11["Right Arm"];
			end;
			v9:Destroy();
			for v12, v13 in ipairs(game.ReplicatedStorage.effects.bodypaint:Clone():GetChildren()) do
				v13.Parent = p11["Left Arm"];
			end;
			return;
		end;
		if p12 == "arms" then
			if p13 == 1 then
				for v14, v15 in ipairs(p11:GetChildren()) do
					if v15.Name == "Left Arm" or v15.Name == "Right Arm" then
						u1.paint(v15, "4387608968");
					end;
				end;
				return;
			end;
			if p13 == 2 then
				for v16, v17 in ipairs(p11:GetChildren()) do
					if v17.Name == "Right Arm" or v17.Name == "Left Arm" then
						for v18, v19 in ipairs(v17:GetChildren()) do
							if v19:IsA("Decal") then
								v19.Transparency = 0;
							end;
						end;
					end;
				end;
				return;
			end;
			if p13 == 3 then
				for v20, v21 in ipairs(p11:GetChildren()) do
					if v21.Name == "Right Arm" or v21.Name == "Left Arm" then
						u1.paint(v21, "4387609686");
					end;
				end;
				return;
			end;
			if p13 == 4 then
				for v22, v23 in ipairs(p11:GetChildren()) do
					if v23.Name == "Right Arm" or v23.Name == "Left Arm" then
						for v24, v25 in ipairs(v23:GetChildren()) do
							if v25.Name ~= "dust" and v25.Name ~= "paint" and v25:IsA("Decal") then
								local v26 = v25:Clone();
								v26.Texture = "rbxassetid://" .. u1.findsides(v25.Name);
								v26.Parent = v23;
							end;
						end;
					end;
				end;
				return;
			elseif p13 == 5 then
				for v27, v28 in ipairs(p11:GetChildren()) do
					if v28.Name == "Right Arm" or v28.Name == "Left Arm" then
						u1.paint(v28, "4387610779");
					end;
				end;
				return;
			end;
		elseif p12 == "body" then
			if p13 == 1 then
				for v29, v30 in ipairs(p11:GetChildren()) do
					if v30.Name == "Head" or v30.Name == "Torso" or v30.Name == "Left Leg" or v30.Name == "Right Leg" then
						u1.paint(v30, "4387608968");
					end;
				end;
				return;
			end;
			if p13 == 2 then
				for v31, v32 in ipairs(p11:GetChildren()) do
					if v32.Name == "Head" or v32.Name == "Torso" or v32.Name == "Left Leg" or v32.Name == "Right Leg" then
						u1.paint(v32, "4387609686");
					end;
				end;
				return;
			end;
			if p13 == 3 then
				for v33, v34 in ipairs(p11:GetChildren()) do
					if v34.Name == "Head" or v34.Name == "Torso" or v34.Name == "Left Leg" or v34.Name == "Right Leg" then
						u1.paint(v34, "4387610779");
					end;
				end;
			end;
		end;
	end, 
	paintwep = function(p14, p15)
		if p15 == 1 then
			for v35, v36 in ipairs(p14:GetChildren()) do
				if v36.Name == "sprayable" then
					u1.paint(v36, "4387608968");
				end;
			end;
			return;
		end;
		if p15 == 2 then
			for v37, v38 in ipairs(p14:GetChildren()) do
				if v38.Name == "sprayable" then
					for v39, v40 in ipairs(v38:GetChildren()) do
						if v40.Name ~= "dust" and v40.Name ~= "paint" then
							if v40:IsA("Decal") then
								v40.Transparency = 0.7;
								v40.Color3 = Color3.new(1, 0, 0);
							end;
						elseif v40.Name == "paint" then
							v40.Transparency = 0.7;
							v40.Color3 = Color3.new(1, 0, 0);
						end;
					end;
				end;
			end;
			return;
		end;
		if p15 == 3 then
			for v41, v42 in ipairs(p14:GetChildren()) do
				if v42.Name == "sprayable" then
					u1.paint(v42, "4387609686");
				end;
			end;
			return;
		end;
		if p15 == 4 then
			for v43, v44 in ipairs(p14:GetChildren()) do
				if v44.Name == "sprayable" then
					for v45, v46 in ipairs(v44:GetChildren()) do
						if v46.Name ~= "dust" and v46.Name ~= "paint" then
							if v46:IsA("Decal") then
								v46.Transparency = 0;
							end;
						elseif v46.Name == "paint" then
							v46.Transparency = 0;
							v46.Color3 = Color3.new(1, 0, 0);
						end;
					end;
				end;
			end;
			return;
		end;
		if p15 == 5 then
			for v47, v48 in ipairs(p14:GetChildren()) do
				if v48.Name == "sprayable" then
					u1.paint(v48, "4387610779");
				end;
			end;
			return;
		end;
		if p15 == 6 then
			for v49, v50 in ipairs(p14:GetChildren()) do
				if v50.Name == "sprayable" then
					for v51, v52 in ipairs(v50:GetChildren()) do
						if v52.Name ~= "dust" and v52.Name ~= "paint" and v52:IsA("Decal") then
							local v53 = v52:Clone();
							v53.Texture = "rbxassetid://" .. u1.findsides(v52.Name);
							v53.Parent = v50;
						end;
					end;
				end;
			end;
		end;
	end
};
local function u2(p16, p17, p18, p19)
	local v54 = Instance.new("Model");
	v54.Name = p18;
	local v55 = p17:Clone();
	for v56, v57 in ipairs(v55:GetChildren()) do
		if p16:FindFirstChild(v57.Name) then
			local v58 = Instance.new("Motor6D");
			v58.Name = "ClothingWeld";
			v58.Part0 = p16:FindFirstChild(v57.Name);
			v58.Part1 = v57;
			v58.Parent = v57;
			v57.Parent = v54;
			if p19 ~= nil then
				local v59 = "primary";
				for v60 = 1, 2 do
					if v60 == 2 then
						v59 = "secondary";
					end;
					if p19[v60] and p19[v60] ~= "original" and v57:FindFirstChild(v59) then
						local v61 = Color3.new(p19[v60][1], p19[v60][2], p19[v60][3]);
						for v62, v63 in ipairs(v57:FindFirstChild(v59):GetChildren()) do
							if v63:IsA("BasePart") then
								v63.Color = v61;
								if v61 == Color3.new(0.9372549019607843, 0.7215686274509804, 0.2196078431372549) then
									v63.Reflectance = 0.5;
									v63.Material = "Metal";
								end;
							end;
						end;
					end;
				end;
			end;
		end;
	end;
	v55:Destroy();
	return v54;
end;
function u1.applycosmetic(p20, p21, p22, p23, p24)
	local l__thirdperson__64 = game.ReplicatedStorage.skins.thirdperson;
	local v65 = {
		CustomColours = {
			Tops = { "original", "original" }, 
			Bottom = { "original", "original" }, 
			Head = { "original", "original" }, 
			Helmet = { "original", "original" }, 
			Face = { "original", "original" }, 
			Lower = { "original", "original" }
		}
	};
	if p24 ~= nil then
		v65 = p24;
	end;
	if p20:FindFirstChild("Outfit") then
		p20:FindFirstChild("Outfit"):Destroy();
	end;
	local v66 = Instance.new("Folder");
	v66.Name = "Outfit";
	local v67 = p21.EquippedCosmetics;
	if p22 == true then
		v67 = p21.PreviewedCosmetics;
	end;
	if v67.Shirt ~= nil and l__thirdperson__64:FindFirstChild(v67.Shirt) then
		u2(p20, l__thirdperson__64:FindFirstChild(v67.Shirt), "Top", v65.Tops).Parent = v66;
	end;
	if v67.Pants ~= nil and l__thirdperson__64:FindFirstChild(v67.Pants) then
		u2(p20, l__thirdperson__64:FindFirstChild(v67.Pants), "Bottom", v65.Bottom).Parent = v66;
	end;
	if p20:FindFirstChild("Head") and p20.Head:FindFirstChild("face") then
		p20.Head:FindFirstChild("face"):Destroy();
	end;
	if v67.Head then
		if p20:FindFirstChild("Head") then
			p20:FindFirstChild("Head").Transparency = 1;
			u2(p20, l__thirdperson__64:FindFirstChild(v67.Head), "Head", v65.Head).Parent = v66;
		end;
	else
		if p20:FindFirstChild("Head") then
			p20:FindFirstChild("Head").Transparency = 0;
		end;
		if v67.Helmet ~= nil and l__thirdperson__64:FindFirstChild(v67.Helmet) then
			u2(p20, l__thirdperson__64:FindFirstChild(v67.Helmet), "Head", v65.Helmet).Parent = v66;
		end;
		if v67.Face ~= nil and l__thirdperson__64:FindFirstChild(v67.Face) then
			u2(p20, l__thirdperson__64:FindFirstChild(v67.Face), "Head", v65.Face).Parent = v66;
		end;
		if v67.Lower ~= nil and l__thirdperson__64:FindFirstChild(v67.Lower) then
			u2(p20, l__thirdperson__64:FindFirstChild(v67.Lower), "Head", v65.Lower).Parent = v66;
		end;
	end;
	local v68 = BrickColor.new("Pastel brown");
	if p21.Settings and p21.Settings.AltSkin and p21.Settings.AltSkin == true then
		v68 = BrickColor.new("Dark taupe");
	end;
	for v69, v70 in ipairs(p20:GetChildren()) do
		if v70:IsA("BasePart") then
			v70.BrickColor = v68;
		end;
	end;
	if p23 == true then
		if p20["Right Arm"]:FindFirstChild("WeaponJoint") then
			p20["Right Arm"]:FindFirstChild("WeaponJoint"):Destroy();
		end;
		local v71 = require(workspace.ServerStuff.Statistics.W_STATISTICS)[p21.SelectedWep];
		if v71 then
			local v72 = game.ReplicatedStorage.Weapons:FindFirstChild(p21.SelectedWep);
			if v72 ~= nil then
				local v73 = v72:Clone();
				v73.JointGrip.CFrame = p20["Right Arm"].CFrame;
				v73.JointGrip.Locked = true;
				v73.JointGrip.Anchored = false;
				local l__weldval__74 = game.ReplicatedStorage.animationSets.TPanimSets:FindFirstChild(v71.animset):FindFirstChild("weldval");
				local v75 = Instance.new("Motor6D");
				v75.Part0 = p20["Right Arm"];
				v75.Part1 = v73.JointGrip;
				if l__weldval__74 then
					v75.C1 = l__weldval__74.Value;
				else
					v75.C1 = game.ReplicatedStorage.animationSets.TPanimSets.global.gweldval.Value;
				end;
				v75.Parent = p20["Right Arm"];
				v73.Parent = v66;
			end;
		end;
	end;
	v66.Parent = p20;
	return p20;
end;
u1.leveltitles = { "Novice", "Experienced", "Competent", "Skilled", "Proficient", "Expert", "Elite", "Master", "Veteran" };
u1.leveltitles[100] = "Legendary";
u1.title_designation = {
	default = "Rank", 
	defaultclass = "Rank + Perk", 
	distinguished = "Distinguished", 
	testerA = "'Archetypal + Perk'", 
	testerB = "'From Origin'", 
	testerC = "'True Legend'", 
	testerD = "'Core Veteran'", 
	earlywinner = "'Primordial Agent'", 
	bludgeonhits = "Skull Cracker", 
	spearhits = "Footmen", 
	axehits = "Axe Maniac", 
	bladehits = "Bladesmith", 
	fisthits = "Fisting Artist", 
	locker = "Scavenger", 
	trap = "Trapsetter", 
	tankdamage = "Juggernaut", 
	pincush = "Pincushion", 
	lowdamage = "Fool", 
	headshots = "Marksman", 
	hunter = "Hunter", 
	meleedamage = "Butcher", 
	gundamage = "Slayer", 
	mantler = "Athlete", 
	redlol = "Ms. Mediocre", 
	apostle = "'The Heretic'", 
	survival = "'Jack of All Trades'", 
	berz = "'Calamity Harbringer'", 
	revolver = "'Argent Peacemaker'", 
	scan = "'The True Seer'", 
	sword = "'Kira'", 
	shield = "'Helios Guardian'", 
	trapper = "'PARAGON Advocate'", 
	lazarus = "'Fallen Uriel'", 
	gunner = "'Blaze of Glory'", 
	shotgun = "'Sentenza'", 
	damn = "'Punished and Condemned'", 
	ranger = "'Rolling Thunder'", 
	mind = "'Archaic Mastermind'", 
	goggles = "'Bounty Assassin'", 
	hive = "'Collective Consciousness'", 
	fire = "'Hellfire Demon'", 
	dagger = "'Voidwalker'"
};
u1.ammovalues = {
	["Light Ammo"] = 8, 
	["Small Ammo"] = 8, 
	["Short Ammo"] = 6, 
	["Medium Ammo"] = 15, 
	["Heavy Ammo"] = 10, 
	["Long Ammo"] = 3, 
	["Shells Ammo"] = 4
};
return u1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1248"><Properties><string name="Name">HOLSTER_WELDS</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

return {
	["1HAXE"] = CFrame.new(-0.92596817, -0.824986458, -0.906089783, 0, -0.766042054, -0.642788053, -0.342020094, -0.604021549, 0.71984607, -0.939692736, 0.219845831, -0.262002468), 
	["1HB"] = CFrame.new(-0.220947266, -1.1095829, 1.10159683, 0, 0, -1, 0, -0.999997258, 0, -1, 0, 0), 
	["1HBL"] = CFrame.new(0.551021576, 0.701659203, -0.561216354, 1, 0, 0, 0, -0.999997258, 0, 0, 0, -1), 
	["1HS"] = CFrame.new(0.896166801, -0.106002808, 0.554815292, 0.173647955, 0.984805048, 0, 0.984807789, -0.173647478, -0, 0, 0, -1), 
	["2H"] = CFrame.new(-0.212701797, -0.0615081787, 0.528972626, -0.866025388, 0.499998868, 0, 0.500000238, 0.866023004, 0, 0, 0, -1), 
	["2HB"] = CFrame.new(1.01575851, -0.560050964, 0.733545303, -0.939692616, -0.116977632, 0.321393877, 0.342020303, -0.321393192, 0.883022189, -4.6949669E-08, 0.939689994, 0.342020422), 
	["2HSPR"] = CFrame.new(-0.811595917, 1.04539084, 0.545555115, -1, 0, 0, 0, 0.999997258, 0, 0, 0, -1), 
	Fists = CFrame.new(0.496313095, -0.885838985, -0.546188354, 0, 0, 1, 0, -0.999998212, 0, 1, 0, 0), 
	["1PB"] = CFrame.new(-0.212701797, -0.0615081787, 0.528972626, -0.866025388, 0.499998868, 0, 0.500000238, 0.866023004, 0, 0, 0, -1), 
	["2SC"] = CFrame.new(-0.212701797, -0.0615081787, 0.528972626, -0.866025388, 0.499998868, 0, 0.500000238, 0.866023004, 0, 0, 0, -1)
};
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1255"><Properties><string name="Name">W_STATISTICS</string><ProtectedString name="Source"><![CDATA[-- Failed to decompile script, or script is empty]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1262"><Properties><string name="Name">Q_STATISTICS</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

return {
	rzbody = {
		name = "rsbody", 
		typ = "cos", 
		param = "RZAttire", 
		desc = "An outfit belonging to a Raider of old and their followers. Words of their accomplishments are heard out far and wide, becoming marked as a legend of sorts to the Scavengers.", 
		cost = 75
	}, 
	rzhead = {
		name = "rshead", 
		typ = "cos", 
		param = "RZHead", 
		desc = "A modified welding helmet, commonly worn by most Raiders. Plating and a full head seal were designed, allowing protection from at most small calibre arms - heavy but it was an easy and cheap form of full face protection.", 
		cost = 50
	}, 
	soldat = {
		name = "soldateyes", 
		typ = "cos", 
		param = "SoldatH", 
		desc = "Single eyepiece that is surgically welded on. Provided Agents were willing to give up their eyes, these optics provided a substantial increase in visibility and includes other elements making up a HUD.", 
		cost = 25
	}, 
	skullb = {
		name = "skullbal", 
		typ = "cos", 
		param = "SKMask", 
		desc = "Valerii let out a chuckle as her partner slid open the barracks door. 'That is incredibly tacky.' said the female Agent, returning to spinning her karambit around her thumb. 'I know, but at least it will be the last thing the scavs will see.'", 
		cost = 25
	}, 
	crownhair = {
		name = "crownedhair", 
		typ = "cos", 
		param = "BLCrownA", 
		desc = "Dyed hair with a bloodied crown, a symbol or a reminder of the past. That or a showcase of gnarly fashion sense. After all, dyes are a rarity.", 
		cost = 25
	}, 
	dshelm = {
		name = "dshelm", 
		typ = "cos", 
		param = "OldDSquadHelmet", 
		desc = "An old and damaged rare combat helmet, still usable, if broken. The external cameras no longer work, giving the user limited vision, but the old helmet nonetheless still held a lot of history to it.", 
		cost = 50
	}, 
	dsbody = {
		name = "dsbody", 
		typ = "cos", 
		param = "OldDSquadShirt", 
		desc = "Worn out exotic armour, has seen better days. The Hardsuit was capable of being used by many roles, although its history lies in the rumour of a supposed Death Squad with bright red lights. Nobody can confirm if they're truly real or not.", 
		cost = 75
	}, 
	dslegs = {
		name = "dslegs", 
		typ = "cos", 
		param = "OldDSquadPants", 
		desc = "Broken leg supports from special legwear, no longer function. Prior to extensive damage, these legs could allow fall from great heights without damage to the user, although its most common use is the ability to Anchor for warping drives.", 
		cost = 75
	}, 
	rishelm = {
		name = "rishelm", 
		typ = "cos", 
		param = "OldRISHelm", 
		desc = "High quality damaged recon helmet, still usable. There came a time when scouting was easier than ever, high quality HUD tech, on board aerial view and all other gizmos. While these no longer work, rest assured this was the pioneer of scouting.", 
		cost = 50
	}, 
	risbody = {
		name = "risbody", 
		typ = "cos", 
		param = "OldRISBody", 
		desc = "Antiquated recon vest, no longer provides camouflage. Active camouflage and the ability to Anchor for warps, designed from the ground up for covert recon activities - these designs have truly made this piece of armour history.", 
		cost = 75
	}, 
	rislegs = {
		name = "rislegs", 
		typ = "cos", 
		param = "OldRISLegs", 
		desc = "Broken leg supports from scouting legwear, no longer function. Although they remain a popular choice for scouts, the legs were undoubtedly the weakest part for the line of armour, providing just a fall dampener and a weak Anchor.", 
		cost = 75
	}, 
	brokeshirt = {
		name = "brokeshirt", 
		typ = "cos", 
		param = "BrokenShirt", 
		desc = "Damaged and patched up shirt belonging to a not so fortunate Agent of old. They endured many hardships, more than any could ask for, but at what costs? Regret, contempt and most of all, Malice.", 
		cost = 50
	}, 
	DeoSkin = {
		name = "Deo Volente", 
		typ = "skin", 
		param = { "DeoSkin", "ExecSword", "Bring them to the hallowed grounds that you tread on." }, 
		desc = "Legend has it that this blade was passed down through centuries by the Emperor planning to massacre the children of the Church with the Commanders old steel. It has bathed in the blood of many, and hopefully, many more to come.", 
		cost = 50
	}, 
	MaliceSkin = {
		name = "Malice", 
		typ = "skin", 
		param = { "MaliceSkin", "DFAxe", "More and more to the bloodshed they come until none is left." }, 
		desc = "The Agent ran like a wolf, his head ducked occasionally under the hail of gunfire. His back rested behind a shoddy barricade, trying to steady his breathing - One last time, his arms wrapped the bloodied wire between the crude axe heads, one more for Julia.", 
		cost = 50
	}, 
	BHookSkin = {
		name = "Snake Eyes", 
		typ = "skin", 
		param = { "BHookSkin", "BHook", "The Gambler rolled the dice, luck was on their side now." }, 
		desc = "'How many more are you going to play?', the weary traveller asked, his tone showed concern as he raised an eyebrow. The Agent has been playing for weeks - waiting for the storm to pass - luck really wasn't on his side, but he could afford the loss.", 
		cost = 50
	}, 
	GClubSkin = {
		name = "'Abbie'", 
		typ = "skin", 
		param = { "GClubSkin", "NailedB", "Fill the graves, come along now, we'll fill the graves." }, 
		desc = "'The hell is that?', asked the bewildered Agent. 'Abbie.', she stoutly replied. 'That.. doesn't explain anything. Why is it a golf club with barbed wires on it?', he responded in kind. 'Abbie always liked golf.', she slung the club over her shoulder, leaving the base into the cold mist.", 
		cost = 50
	}, 
	HammerSkin = {
		name = "Merci-fall", 
		typ = "skin", 
		param = { "HammerSkin", "RBHammer", "The un-ending burden must be acted upon." }, 
		desc = "'Will it hold, James?', asked the infamous Raider - met only with silence. 'The sledgehammers gone, I need this to work-', the Raider spoke before being cut off. 'There we go! We got sumthin' 'ere. Is only a prototype, but we'll refine it more when its done.', the craftsman said, brandishing the new tool.", 
		cost = 50
	}, 
	Tanto = {
		name = "Tanto", 
		typ = "exotic", 
		param = { "Tanto", "1HT", "Take it upon yourself and open the truth." }, 
		desc = "A Japanese Knife or Dagger, clay forged with tempered steel. An old earth relic kept to remember the past, although its true meaning is not fully understood even now. Nonetheless, it still cuts even if the blade is quite worn from past use.", 
		cost = 100
	}, 
	EFBaton = {
		name = "Enforcer-BT", 
		typ = "exotic", 
		param = { "EFBaton", "1BT", "Enforce and keep the peace." }, 
		desc = "The Enforcer Baton was an old tool used by law keeper Enforcers. Built with solid steel, weighty and knuckle duster assists allowed the tool to enforce the right hand of the law - whether through force or not.", 
		cost = 100
	}, 
	GKnuckles = {
		name = "Dusters", 
		typ = "exotic", 
		param = { "GKnuckles", "BK", "Return retribution with the golden hand." }, 
		desc = "A pair of gilded dusters, commonly known over the knuckles with holes for each finger. While most are made of brass traditionally, these have been gilded with 18K gold and made of titanium alloys with menacing spikes for extra impact.", 
		cost = 100
	}
};
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1269"><Properties><string name="Name">Filth</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

return { "Praise the sun!", "Bless the lord!", "Annihilated within a single strike!", "Reminder that overconfidence is a slow and insidious killer!", "Lights shine upon me!", "Confidence surges as the enemy crumbles!", "Press this advantage, give them no quarter!", "Their formation is broken - maintain the offensive!", "Another abomination cleansed from our lands!", "Another one falls!", "Destroyed with impunity!", "Another soul battered and broken, cast aside like a spent torch!", "Prodigious size alone does not dissuade the sharpened blade!", "Excommunicated!" };
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1276"><Properties><string name="Name">EarlyAccess</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	ea = {}
};
v1.ea["203438203"] = true;
v1.ea["16136245"] = true;
v1.ea["1047641095"] = true;
v1.ea["1109450290"] = true;
v1.ea["62968884"] = true;
v1.ea["21742759"] = true;
v1.ea["100660028"] = true;
v1.ea["336412712"] = true;
v1.ea["141332871"] = true;
v1.ea["843043075"] = true;
v1.ea["37482936"] = true;
v1.ea["25435957"] = true;
v1.ea["120294521"] = true;
v1.ea["62835518"] = true;
v1.ea["2284881302"] = true;
v1.ea["118434837"] = true;
v1.ea["57600328"] = true;
v1.ea["39361684"] = true;
v1.ea["79838683"] = true;
v1.ea["39011329"] = true;
v1.ea["46603812"] = true;
v1.ea["78726976"] = true;
v1.ea["105354032"] = true;
v1.ea["1780785772"] = true;
v1.ea["73804598"] = true;
v1.ea["8485741"] = true;
v1.ea["258262856"] = true;
v1.ea["366896928"] = true;
v1.ea["1623260910"] = true;
v1.ea["1089306"] = true;
v1.ea["1335814635"] = true;
v1.ea["93693150"] = true;
v1.ea["8138689"] = true;
v1.ea["83766995"] = true;
v1.ea["-1"] = true;
v1.ea["-2"] = true;
v1.ea["-3"] = true;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1283"><Properties><string name="Name">S_STATISTICS</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	Crp = {}
};
v1.Crp.name = "Cripple";
v1.Crp.intensity = 1;
v1.Crp.ints = { 8, 10, 15, 25 };
v1.Crp.dur = 150;
v1.Crp.desc = "Slows the opponent's base walkspeed by " .. v1.Crp.ints[1] .. "/" .. v1.Crp.ints[2] .. "/" .. v1.Crp.ints[3] .. "/" .. v1.Crp.ints[4] .. "% for " .. v1.Crp.dur .. " seconds.";
v1.Crp.icon = "6072299646";
v1.Frac = {};
v1.Frac.name = "Fracture";
v1.Frac.intensity = 1;
v1.Frac.ints = { 10 };
v1.Frac.dur = 150;
v1.Frac.desc = "Unable to aim or shove and slows all melee swings for " .. v1.Frac.dur .. " seconds.";
v1.Frac.icon = "6497721676";
v1.CrpPrv = {};
v1.CrpPrv.name = "Cripple Prevention";
v1.CrpPrv.intensity = 1;
v1.CrpPrv.ints = {};
v1.CrpPrv.dur = 180;
v1.CrpPrv.desc = "Prevents Cripple and Fractures.";
v1.CrpPrv.icon = "6118095773";
v1.CrpPrv.colour = Color3.new(0, 0.5882352941176471, 0.9019607843137255);
v1.Bld = {};
v1.Bld.name = "Bleed";
v1.Bld.intensity = 1;
v1.Bld.ints = { 12, 10, 8, 6 };
v1.Bld.dur = 200;
v1.Bld.desc = "Deals 1 damage every " .. v1.Bld.ints[1] .. "/" .. v1.Bld.ints[2] .. "/" .. v1.Bld.ints[3] .. "/" .. v1.Bld.ints[4] .. " seconds to the opponent for " .. v1.Bld.dur .. " seconds.";
v1.Bld.icon = "6072299883";
v1.HeavBld = {};
v1.HeavBld.name = "Arterial Bleed";
v1.HeavBld.intensity = 1;
v1.HeavBld.ints = { 3 };
v1.HeavBld.dur = 100000;
v1.HeavBld.desc = "Deals 1 damage every " .. v1.HeavBld.ints[1] .. " seconds to the opponent until cured.\nCan kill.";
v1.HeavBld.icon = "6497721953";
v1.BldPrv = {};
v1.BldPrv.name = "Bleed Prevention";
v1.BldPrv.intensity = 1;
v1.BldPrv.ints = {};
v1.BldPrv.dur = 180;
v1.BldPrv.desc = "Prevents Bleed.";
v1.BldPrv.icon = "6072357857";
v1.BldPrv.colour = Color3.new(0, 0.5882352941176471, 0.9019607843137255);
v1.Brn = {};
v1.Brn.name = "Burning";
v1.Brn.intensity = 1;
v1.Brn.ints = { 1 };
v1.Brn.dur = 10;
v1.Brn.desc = "Burn";
v1.Brn.icon = "7035889412";
v1.Brn.colour = Color3.new(1, 0.37254901960784315, 0.043137254901960784);
v1.RespA = {};
v1.RespA.name = "Respirator";
v1.RespA.intensity = 1;
v1.RespA.ints = {};
v1.RespA.dur = 10;
v1.RespA.desc = "Prevents damage from contaminated areas.";
v1.RespA.icon = "6825352692";
v1.RespA.colour = Color3.new(1, 1, 0.2);
v1.BuffC = {};
v1.BuffC.name = "Koldera Buff";
v1.BuffC.intensity = 1;
v1.BuffC.ints = {};
v1.BuffC.dur = 50;
v1.BuffC.desc = "Calms the nerves.";
v1.BuffC.icon = "2163475507";
v1.BuffC.colour = Color3.new(1, 1, 0.2);
v1.FireBuff = {};
v1.FireBuff.name = "Immolator Buff";
v1.FireBuff.intensity = 1;
v1.FireBuff.ints = {};
v1.FireBuff.dur = 30;
v1.FireBuff.desc = "Grants immunity to fire, burning melee and incendiary bullets.";
v1.FireBuff.icon = "7249229464";
v1.FireBuff.colour = Color3.new(1, 0.5882352941176471, 0.27450980392156865);
v1.Exha = {};
v1.Exha.name = "Exhaustion";
v1.Exha.intensity = 1;
v1.Exha.ints = {};
v1.Exha.dur = 8;
v1.Exha.desc = "Slows movespeed.";
v1.Exha.icon = "2163475346";
v1.Exha.colour = Color3.new(0.7450980392156863, 0.7450980392156863, 0.7450980392156863);
v1.VirusA = {};
v1.VirusA.name = "Virus Stage 1";
v1.VirusA.intensity = 1;
v1.VirusA.ints = {};
v1.VirusA.dur = 420;
v1.VirusA.desc = "No noticable effects.";
v1.VirusA.icon = "6118098328";
v1.VirusA.colour = Color3.new(1, 0.05, 0.05);
v1.VirusB = {};
v1.VirusB.name = "Virus Stage 2";
v1.VirusB.intensity = 1;
v1.VirusB.ints = { 10 };
v1.VirusB.dur = 400;
v1.VirusB.desc = "Speed penalty.";
v1.VirusB.icon = "6072300313";
v1.VirusB.colour = Color3.new(1, 0.05, 0.05);
v1.VirusC = {};
v1.VirusC.name = "Virus Stage 3";
v1.VirusC.intensity = 1;
v1.VirusC.ints = { 20, 20, 10 };
v1.VirusC.dur = 400;
v1.VirusC.desc = "Body resistances reduced.";
v1.VirusC.icon = "6072320522";
v1.VirusC.colour = Color3.new(1, 0.05, 0.05);
v1.VirusD = {};
v1.VirusD.name = "Virus Stage 4";
v1.VirusD.intensity = 1;
v1.VirusD.ints = { 35, 40, 25, 35 };
v1.VirusD.dur = 400;
v1.VirusD.desc = "Sepsis imminent. Health critical.";
v1.VirusD.icon = "6118102623";
v1.VirusD.colour = Color3.new(1, 0.05, 0.05);
v1.DMoraleA = {};
v1.DMoraleA.name = "Death Morale 1";
v1.DMoraleA.intensity = 1;
v1.DMoraleA.ints = { 20, 20, 20 };
v1.DMoraleA.dur = 100000;
v1.DMoraleA.desc = "Morale lost.";
v1.DMoraleA.icon = "5840511239";
v1.DMoraleA.colour = Color3.new(1, 0.05, 0.05);
v1.DMoraleB = {};
v1.DMoraleB.name = "Death Morale 2";
v1.DMoraleB.intensity = 1;
v1.DMoraleB.ints = { 10, 10, 10 };
v1.DMoraleB.dur = 100000;
v1.DMoraleB.desc = "Morale lost.";
v1.DMoraleB.icon = "5840511239";
v1.DMoraleB.colour = Color3.new(1, 0.05, 0.05);
v1.DMoraleC = {};
v1.DMoraleC.name = "Death Morale 3";
v1.DMoraleC.intensity = 1;
v1.DMoraleC.ints = { 15, 15, 15 };
v1.DMoraleC.dur = 100000;
v1.DMoraleC.desc = "Morale lost.";
v1.DMoraleC.icon = "5840511239";
v1.DMoraleC.colour = Color3.new(1, 0.05, 0.05);
v1.DMoraleD = {};
v1.DMoraleD.name = "Death Morale 4";
v1.DMoraleD.intensity = 1;
v1.DMoraleD.ints = { 20, 20, 20 };
v1.DMoraleD.dur = 100000;
v1.DMoraleD.desc = "Morale lost.";
v1.DMoraleD.icon = "5840511239";
v1.DMoraleD.colour = Color3.new(1, 0.05, 0.05);
v1.Exp = {};
v1.Exp.name = "Expose";
v1.Exp.intensity = 1;
v1.Exp.ints = { 10, 15, 20, 25 };
v1.Exp.dur = 3;
v1.Exp.desc = "Increases next axe melee damage by " .. v1.Exp.ints[1] .. "/" .. v1.Exp.ints[2] .. "/" .. v1.Exp.ints[3] .. "/" .. v1.Exp.ints[4] .. "% to the opponent for " .. v1.Exp.dur .. " seconds.";
v1.Exp.icon = "2175167163";
v1.Prc = {};
v1.Prc.name = "Exhausted";
v1.Prc.intensity = 1;
v1.Prc.ints = { 0.6 };
v1.Prc.dur = 25;
v1.Prc.desc = "Reduces melee damage opponent deals by " .. v1.Prc.ints[1] * 100 .. "% for " .. v1.Prc.dur .. " seconds.";
v1.Prc.icon = "2502169390";
v1.Vcd = {};
v1.Vcd.name = "Vomit";
v1.Vcd.intensity = 1;
v1.Vcd.ints = {};
v1.Vcd.dur = 1.7;
v1.Vcd.desc = "Induces vomiting which temporarily disables the player's actions.";
v1.Vcd.icon = "2309316181";
v1.Scs = {};
v1.Scs.name = "Sickness";
v1.Scs.intensity = 1;
v1.Scs.ints = {};
v1.Scs.dur = 4;
v1.Scs.desc = "Disorientates player vision and causes vomiting at the end of the duration.";
v1.Scs.icon = "2981508320";
v1.Sus = {};
v1.Sus.name = "Susceptible";
v1.Sus.intensity = 1;
v1.Sus.ints = { 25 };
v1.Sus.dur = 5;
v1.Sus.desc = "Increases damage taken from melee by " .. v1.Sus.ints[1] .. "% for " .. v1.Sus.dur .. " seconds.";
v1.Sus.icon = "5869011381";
v1.Psn = {};
v1.Psn.name = "Toxins";
v1.Psn.intensity = 1;
v1.Psn.ints = { 5, 0.75 };
v1.Psn.dur = 3;
v1.Psn.desc = "Disorientates player vision and damages them by " .. v1.Psn.ints[1] .. " every " .. v1.Psn.ints[2] .. " seconds.\nPrevents healing.";
v1.Psn.icon = "4736517682";
v1.Bnd = {};
v1.Bnd.name = "Blindness";
v1.Bnd.intensity = 1;
v1.Bnd.ints = {};
v1.Bnd.dur = 20;
v1.Bnd.desc = "Blinds the player's screen temporarily for " .. v1.Bnd.dur .. " seconds.";
v1.Bnd.icon = "2477476695";
v1.Brz = {};
v1.Brz.name = "Berserk";
v1.Brz.intensity = 1;
v1.Brz.ints = { 160 };
v1.Brz.dur = 120;
v1.Brz.desc = "Improves fist damage by " .. v1.Brz.ints[1] .. "% for " .. v1.Brz.dur .. " seconds.";
v1.Brz.icon = "2985564779";
v1.Brz.colour = Color3.new(0, 1, 0.4);
v1.Arm = {};
v1.Arm.name = "Armoured";
v1.Arm.intensity = 1;
v1.Arm.ints = { 1 };
v1.Arm.dur = 600;
v1.Arm.desc = "Grants " .. v1.Arm.ints[1] * 100 .. "% bonus defense to melee attacks for " .. v1.Arm.dur .. " seconds. Melee damage taken will deduct from this duration.";
v1.Arm.icon = "4489086408";
v1.Arm.colour = Color3.new(0.9529411764705882, 0.9529411764705882, 0.1607843137254902);
v1.Bls = {};
v1.Bls.name = "Bloodthirst";
v1.Bls.intensity = 1;
v1.Bls.ints = { 2 };
v1.Bls.dur = 120;
v1.Bls.desc = "Heals " .. v1.Bls.ints[1] .. " health every melee hit for " .. v1.Bls.dur .. " seconds.";
v1.Bls.icon = "2335815150";
v1.Bls.colour = Color3.new(0, 1, 0.4);
v1.ArtiB = {};
v1.ArtiB.name = "Artillerist Buff";
v1.ArtiB.intensity = 1;
v1.ArtiB.ints = { 50, 60 };
v1.ArtiB.dur = 20;
v1.ArtiB.desc = "Reduces recoil. Faster reloading. Faster aiming. Stability.";
v1.ArtiB.icon = "6135554440";
v1.ArtiB.colour = Color3.new(0.5, 0, 0.7);
v1.AlkyA = {};
v1.AlkyA.name = "Alky Buff";
v1.AlkyA.intensity = 1;
v1.AlkyA.ints = { 30, 60 };
v1.AlkyA.dur = 25;
v1.AlkyA.desc = "Improve defense, Painkillers effect, I4S effect.";
v1.AlkyA.icon = "6135554440";
v1.AlkyA.colour = Color3.new(0.5, 0, 0.7);
v1["3-(cbSTM)"] = {};
v1["3-(cbSTM)"].name = "Damage Buff";
v1["3-(cbSTM)"].intensity = 1;
v1["3-(cbSTM)"].ints = { 35 };
v1["3-(cbSTM)"].dur = 60;
v1["3-(cbSTM)"].desc = "Increases damage dealt by melee by " .. v1["3-(cbSTM)"].ints[1] .. "% for " .. v1["3-(cbSTM)"].dur .. " seconds.";
v1["3-(cbSTM)"].icon = "2313562669";
v1["3-(cbSTM)"].colour = Color3.new(0, 0.5882352941176471, 0.9019607843137255);
v1["I4S-DS"] = {};
v1["I4S-DS"].name = "Defense Buff";
v1["I4S-DS"].intensity = 1;
v1["I4S-DS"].ints = { 35 };
v1["I4S-DS"].dur = 60;
v1["I4S-DS"].desc = "Reduces melee damage taken by " .. v1["I4S-DS"].ints[1] .. "% for " .. v1["I4S-DS"].dur .. " seconds.";
v1["I4S-DS"].icon = "2313562503";
v1["I4S-DS"].colour = Color3.new(0, 0.5882352941176471, 0.9019607843137255);
v1["BL1 (Neloprephine)"] = {};
v1["BL1 (Neloprephine)"].name = "Stamina Buff";
v1["BL1 (Neloprephine)"].intensity = 1;
v1["BL1 (Neloprephine)"].ints = { 1 };
v1["BL1 (Neloprephine)"].dur = 60;
v1["BL1 (Neloprephine)"].desc = "Increases rapidly increases stamina gain by " .. v1["BL1 (Neloprephine)"].ints[1] .. " points for " .. v1["BL1 (Neloprephine)"].dur .. " seconds.";
v1["BL1 (Neloprephine)"].icon = "2313563272";
v1["BL1 (Neloprephine)"].colour = Color3.new(0, 0.5882352941176471, 0.9019607843137255);
v1["S44-UL1"] = {};
v1["S44-UL1"].name = "Speed Buff";
v1["S44-UL1"].intensity = 1;
v1["S44-UL1"].ints = { 30 };
v1["S44-UL1"].dur = 60;
v1["S44-UL1"].desc = "Increases movement speed by " .. v1["S44-UL1"].ints[1] .. "% of the base for " .. v1["S44-UL1"].dur .. " seconds.";
v1["S44-UL1"].icon = "2313563080";
v1["S44-UL1"].colour = Color3.new(0, 0.5882352941176471, 0.9019607843137255);
v1.Rgn = {};
v1.Rgn.name = "Regeneration";
v1.Rgn.intensity = 1;
v1.Rgn.ints = { 100 };
v1.Rgn.dur = 60;
v1.Rgn.desc = "Restores " .. v1.Rgn.ints[1] .. " health over " .. v1.Rgn.dur .. " seconds.";
v1.Rgn.icon = "2520490152";
v1.Rgn.colour = Color3.new(0, 1, 0.4);
v1.Pnk = {};
v1.Pnk.name = "Painkillers";
v1.Pnk.intensity = 1;
v1.Pnk.ints = { 15 };
v1.Pnk.dur = 60;
v1.Pnk.desc = "Removes low health glow and camera shake on damage for " .. v1.Pnk.dur .. " seconds and reduces incoming melee damage taken by " .. v1.Pnk.ints[1] .. "%.";
v1.Pnk.icon = "4375572977";
v1.Pnk.colour = Color3.new(0, 1, 0.4);
v1.Laz = {};
v1.Laz.name = "Lazarus";
v1.Laz.intensity = 1;
v1.Laz.ints = { 15 };
v1.Laz.dur = 20;
v1.Laz.desc = "Heal when taking damage, buffs attack and provides Painkillers buff as long as its active.";
v1.Laz.icon = "6575395974";
v1.Laz.colour = Color3.new(0, 1, 0.4);
v1.Bsg = {};
v1.Bsg.name = "Block Stagger";
v1.Bsg.intensity = 1;
v1.Bsg.ints = {};
v1.Bsg.dur = 0.7;
v1.Bsg.desc = "Prevents blocking for " .. v1.Bsg.dur .. " seconds.";
v1.Bsg.icon = "4394971239";
v1.Snr = {};
v1.Snr.name = "Snared";
v1.Snr.intensity = 1;
v1.Snr.ints = {};
v1.Snr.dur = 5;
v1.Snr.desc = "Prevents movement and turning for " .. v1.Snr.dur .. " seconds.\nBroken by taking any damage.";
v1.Snr.icon = "4552193861";
v1.Bcn = {};
v1.Bcn.name = "Tracking Beacon";
v1.Bcn.intensity = 1;
v1.Bcn.ints = { 5 };
v1.Bcn.dur = 68;
v1.Bcn.desc = "Lights up player and applies a sound beacon for " .. v1.Snr.dur .. " seconds.\nCan be disabled by standing still for " .. v1.Bcn.ints[1] .. " seconds.";
v1.Bcn.icon = "4984305674";
v1.Tnt = {};
v1.Tnt.name = "Tinnitus";
v1.Tnt.intensity = 1;
v1.Tnt.ints = {};
v1.Tnt.dur = 6;
v1.Tnt.desc = "Disorientates vision, causes ringing and blurs vision in and out for " .. v1.Tnt.dur .. " seconds.";
v1.Tnt.icon = "4826619030";
v1.Shd = {};
v1.Shd.name = "Showdown";
v1.Shd.intensity = 1;
v1.Shd.ints = {};
v1.Shd.dur = 4;
v1.Shd.desc = "Showdown timer that lasts for " .. v1.Shd.dur .. " seconds.\nIf the timer expires before the event is completed, target is obliterated by the benefactors.";
v1.Shd.icon = "5002662085";
v1.Rge = {};
v1.Rge.name = "Unwaivered";
v1.Rge.intensity = 1;
v1.Rge.ints = { 30 };
v1.Rge.dur = 10;
v1.Rge.desc = "Be unable to be shoved for " .. v1.Rge.dur .. " seconds.\nGain " .. v1.Rge.ints[1] .. "% bonus damage.\nCannot be disarmed.\nCharged attacks do not cancel upon taking damage.";
v1.Rge.icon = "4810588696";
v1.Rge.colour = Color3.new(0, 1, 0.4);
v1.Slc = {};
v1.Slc.name = "Silencer";
v1.Slc.intensity = 1;
v1.Slc.ints = { 100 };
v1.Slc.dur = 10;
v1.Slc.desc = "Increases movement speed by " .. v1.Slc.ints[1] .. "% for " .. v1.Slc.dur .. "% seconds.\nCannot be afflicted by Cripple or Bleed.\nCannot block.\nCannot pick up items.";
v1.Slc.icon = "5784970100";
v1.Slc.colour = Color3.new(0, 1, 0.4);
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1290"><Properties><string name="Name">P_STATISTICS</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	rustic = {
		name = "Methodical", 
		cat = "Systematic in thought, approach and execution. Predictable.", 
		efx = { 15 }
	}
};
v1.rustic.desc = "Deal " .. v1.rustic.efx[1] .. "% more melee damage.";
v1.tough = {
	name = "Dependable", 
	cat = "Has a team first mentality. Always last to leave the fight.", 
	efx = { 15 }
};
v1.tough.desc = "Receive " .. v1.tough.efx[1] .. "% less damage.";
v1.leg = {
	name = "Impatient", 
	cat = "Shoot first, think later. Wants to take the fight to the enemy.", 
	efx = { 15 }
};
v1.leg.desc = "Gain " .. v1.leg.efx[1] .. "% more movement speed.";
v1.manic = {
	name = "Manic", 
	cat = "Commonly exhibits feeling of higher power.", 
	efx = { 30 }
};
v1.manic.desc = "Perform Heavy Swings with melee weapons " .. v1.manic.efx[1] .. "% faster.";
v1.violence = {
	name = "Violent Tendencies", 
	cat = "Exhibits low to medium magnitude of cognitive dissonance.", 
	efx = { 30 }
};
v1.violence.desc = "Perform Light Swings with melee weapons " .. v1.violence.efx[1] .. "% faster.";
v1.recoil = {
	name = "Professional", 
	cat = "Highly regimented, lacks empathy. Sees team members as mission assets only.", 
	efx = { 50 }
};
v1.recoil.desc = "Reduce felt recoil from all firearms by " .. v1.recoil.efx[1] .. "%.\nCleaner Racking.";
v1.paranoia = {
	name = "Paranoid", 
	cat = "Tends to interpret the actions of others as hostile. Trusts no one.", 
	efx = { 100, 50 }
};
v1.paranoia.desc = "Shoot semi-automatic firearms " .. 100 - v1.paranoia.efx[2] .. "% faster.\nSnappy Aiming.";
v1.reliab = {
	name = "Reliable", 
	cat = "Always planning ahead. Dedicated to following orders.", 
	efx = { 65 }
};
v1.reliab.desc = "Perform reloads with firearms " .. v1.reliab.efx[1] .. "% faster.\nFaster Chambering.";
v1.hip = {
	name = "Lone Wolf", 
	cat = "Prefers to act independently. Often times questions authority.", 
	efx = { 55 }
};
v1.hip.desc = "Hip fire ranged weapons " .. v1.hip.efx[1] .. "% more accurately.\nFanning and Levering.";
v1.thick = {
	name = "Fearless", 
	cat = "Will disregard threats, even in the face of immediate danger.", 
	efx = { 25 }
};
v1.thick.desc = "Receive " .. v1.thick.efx[1] .. "% less damage from firearms and explosives.";
v1.boxer = {
	name = "Aggressive Behaviour", 
	cat = "Overly reactive. Prefers to escalate conflicts through physical means.", 
	efx = { 15, 25 }
};
v1.boxer.desc = "Gain " .. v1.boxer.efx[1] .. "% more melee damage while using Fists and perform shoves " .. v1.boxer.efx[2] .. "% faster.";
v1.honor = {
	name = "Honorable", 
	cat = "Highly stubborn. Holds deep seated respect for arts of old.", 
	efx = { 25 }
};
v1.honor.desc = "Gain " .. v1.honor.efx[1] .. "% more melee damage while using Fists.\nCan Parry with Fists.";
v1.boned = {
	name = "Tormented", 
	cat = "Always expects the worst. Overprepares for a negative outcome.", 
	efx = { 15 }
};
v1.boned.desc = "Max Health increased by " .. v1.boned.efx[1] .. ".";
v1.lungs = {
	name = "Calm", 
	cat = "Outstanding mental aptitude. Always effective even under pressure.", 
	efx = { 50 }
};
v1.lungs.desc = "Max Stamina increased by " .. v1.lungs.efx[1] .. ".";
v1.regen = {
	name = "Survivor", 
	cat = "Highly resourceful. Adaptable to any environment or situation.", 
	efx = { 10 }
};
v1.regen.desc = "Restore 1 health every " .. v1.regen.efx[1] .. " seconds.";
v1.second = {
	name = "Relentless", 
	cat = "Can become overly fixated to completing the current task at all costs.", 
	efx = { 30, 100, 5 }
};
v1.second.desc = "When dropping to below " .. v1.second.efx[1] .. " health, instantly gain " .. v1.second.efx[2] .. " stamina.\n" .. v1.second.efx[3] .. " second cooldown.";
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1297"><Properties><string name="Name">CLASS_STATISTICS</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

return {
	survival = {
		name = "Survivalist", 
		desc = "You've learned that the only way to survive alone is to be prepared for everything.", 
		icon = "6135554733", 
		typing = "balanced", 
		basestats = {
			backpack = true
		}, 
		pros = { "Start with all inventory slots.", "Start Nourished and Quenched." }, 
		cons = {}, 
		activename = "None", 
		activedetails = "Jack of most trades, master of none.\nPerfect beginner Perk.", 
		activestats = {}
	}, 
	damn = {
		name = "Damned", 
		desc = "Condemned and cursed, you've lost everything. The only way forward is to survive when all is lost.", 
		icon = "6885820351", 
		typing = "balanced", 
		basestats = {
			nomorale = true, 
			atkmod = -40, 
			defmod = -40, 
			shovemod = -40, 
			lightatkspeed = -40, 
			heavyatkspeed = -40, 
			recoilmod = -55, 
			accmod = -55, 
			reloadmod = -55, 
			noaimmod = true, 
			mvtmod = -40, 
			no_sprint = true
		}, 
		pros = { "Gain double XP and Odens.", "Does not suffer from Death Morale." }, 
		cons = { "Reduced combat capabilities.", "Reduced movement capabilities.", "Starved.", "No access to Auxiliary Equipment." }, 
		activename = "None", 
		activedetails = "Condemned and cursed.\nThis is for those seeking a challenge.", 
		activestats = {}
	}, 
	berz = {
		name = "Berserker", 
		desc = "Carving a path through relentless battles, you believe that survival is to overcome anything alone, no matter the odds.", 
		icon = "6135553884", 
		typing = "melee", 
		pros = { "Increased melee damage.", "Increased resistances to damage.", "Unable to be Grappled." }, 
		cons = { "Heavily reduced recoil control.", "Heavily reduced hipfire accuracy.", "Scavenge less ammo." }, 
		basestats = {
			atkmod = 25, 
			defmod = 15, 
			recoilmod = -100, 
			accmod = -100, 
			scavmod = -40, 
			grap = true
		}, 
		activename = "Calamity Serum", 
		activedetails = "Upon injection, gain increased attack damage, speed and bloodlust.\nDuration increased on kills and parries.\nFatigue on end.", 
		activestats = {
			atkboost = 45, 
			speedboost = 25, 
			duration = 8, 
			regenonkill = 2, 
			regenonparry = 4, 
			healthonaction = 2, 
			cooldown = 45, 
			activeend = 1
		}
	}, 
	revolver = {
		name = "Artillerist", 
		desc = "One shot one kill - an art form you believe in, with every shot capable of opening new opportunities.", 
		icon = "6135554440", 
		typing = "ranged", 
		pros = { "Faster reloading.", "Increased hipfire accuracy.", "Scavenge more ammo." }, 
		cons = { "Reduced defense.", "Slower Shoves." }, 
		basestats = {
			defmod = -15, 
			reloadmod = 50, 
			accmod = 40, 
			shovemod = -25, 
			scavmod = 30
		}, 
		activename = "M.A.G.N.U.M 'Impusca Vana'", 
		activedetails = "Ready a high calibre revolver before firing.\nGain a buff and reduce cooldown on Headshot kill.\nPierces Resistances.", 
		activestats = {
			revolver_range = 300, 
			revolver_damage = 45, 
			revolver_headshot_multi = 2, 
			revolver_cooldown_reduce_on_kill = 20, 
			cooldown = 40, 
			activeend = 1.8
		}
	}, 
	scan = {
		name = "Prophet", 
		desc = "A keen eye for supplies and tactical planning is the only way for survival, you intend to capitalise on that.", 
		icon = "6136979647", 
		typing = "support", 
		pros = { "Increased max health.", "Faster movement speed.", "Faster harvesting.", "No fall damage." }, 
		cons = { "Increased crafting cost.", "Reduced melee damage." }, 
		basestats = {
			healthmod = 10, 
			craftcostmod = 5, 
			atkmod = -10, 
			mvtmod = 20, 
			harvestmod = 4, 
			falldamagemod = true
		}, 
		activename = "Savant's Scanner", 
		activedetails = "Hold to scan and analyse the surrounding, marking supplies for yourself.\nPress to scan in front of you, marking Enemies for teammates.\nMarked Enemies are more susceptible.", 
		activestats = {
			front = 60, 
			healthreduction = 25, 
			studsscan = 80, 
			scanlast = 20, 
			scan_around = 60, 
			scan_around_timer = 2, 
			cooldown = 50, 
			activeend = 1, 
			useanyduration = true
		}
	}, 
	sword = {
		name = "Vagabond", 
		desc = "There is only one constant to surviving alone - taking matters into your own hands, no matter the costs.", 
		icon = "6184935645", 
		typing = "melee", 
		pros = { "Increased Melee swing speed.", "Faster movement speed.", "Increased melee damage." }, 
		cons = { "Reduced max health.", "Reduced defense." }, 
		basestats = {
			lightatkspeed = 30, 
			heavyatkspeed = 30, 
			mvtmod = 15, 
			atkmod = 15, 
			healthmod = -15, 
			defmod = -10
		}, 
		activename = "Nomad Blade 'Kira'", 
		activedetails = "Swing 'Kira' in a slash in-front of you.\nExecuting Enemies with 'Kira' grants 1 Dogtag.\nHold to redeem Dogtags for health.", 
		activestats = {
			frontradius = 6, 
			kiramindamage = 15, 
			kiramaxdamage = 65, 
			healthperdogtag = 8, 
			dogtagreduction = 4, 
			dogtagmovementbuff = 10, 
			dogtagmaxmovement = 10, 
			dogtagslostondamage = 50, 
			dogtagsheavydamage = 15, 
			dogtagsdamagetimer = 1.5, 
			mincooldown = 1.5, 
			cooldown = 30, 
			activeend = 1.4, 
			useanyduration = true
		}
	}, 
	shield = {
		name = "Zealot", 
		desc = "You believe that a strong bond is the true path to survival, Will and Dedication would only get you so far alone.", 
		icon = "6184936590", 
		typing = "support", 
		pros = { "Increased resistances to damage.", "Increased max health." }, 
		cons = { "Reduced movement speed.", "Reduced Heavy swing speed." }, 
		basestats = {
			healthmod = 35, 
			defmod = 35, 
			mvtmod = -15, 
			heavyatkspeed = -25
		}, 
		activename = "Aegis VOID-DS", 
		activedetails = "Deploy the Aegis barrier and automated turret in Guard mode.\nHold to guard with the Aegis shield in Protect mode.", 
		activestats = {
			aegisduration = 50, 
			aegisdamagetakenmelee = 4, 
			aegisrangeddamagemultiplier = 0.5, 
			aegisdefenseboost = 4, 
			targetfront = 12, 
			turretRPM = 266, 
			turrethealth = 65, 
			turretduration = 30, 
			turretdamage = 8, 
			activeend = 0.7, 
			cooldown = 40
		}
	}, 
	trapper = {
		name = "Tickspider", 
		desc = "Trickery and cunningness is what lets you survive on your own terms without relying on others.", 
		icon = "6184927767", 
		typing = "ranged", 
		pros = { "Increased damage with Explosives.", "Faster trap deployment.", "Increased recoil control." }, 
		cons = { "Reduced defense.", "Reduced melee damage." }, 
		basestats = {
			explosivemod = 30, 
			trapmod = 50, 
			recoilmod = 50, 
			atkmod = -20, 
			defmod = -20
		}, 
		activename = "PARAGON Ticks", 
		activedetails = "Throw an explosive Tick in front of you.\nTicks will detonate in the presence of nearby Enemies.\nHold to enable Seeking.\nThree Charges.", 
		activestats = {
			tickexplosionradius = 15, 
			tickexplosiondamage = 40, 
			tickwoundintensity = 4, 
			tickslowduration = 8, 
			ticktimetodet = 1.2, 
			tickseekrange = 35, 
			tickthrow = 10, 
			maxticks = 8, 
			tickarmtime = 2.25, 
			multicooldown = 40, 
			cooldown = 120, 
			activeend = 1.5
		}
	}, 
	lazarus = {
		name = "Lazarus", 
		desc = "Through the art of experience, you believe that self perseverance is the strongest motivator to survival.", 
		icon = "6575395974", 
		typing = "support", 
		pros = { "Increased max health.", "Immune to bleeds." }, 
		cons = { "Drop ranged weapons on damage.", "Slower reloading.", "Reduced melee damage." }, 
		basestats = {
			healthmod = 20, 
			bleed_immune = true, 
			atkmod = -20, 
			drop_ranged = true, 
			reloadmod = -25
		}, 
		activename = "ARTIK-NCU Device", 
		activedetails = "Fire an energised nanite-charged bolt that can save lives.\nTeammates hit will receive the Lazarus buff and Enemies hit will be Shocked.\nTwo charges.", 
		activestats = {
			bolt_radius = 15, 
			lazarus_max_heal = 8, 
			enemy_slow_duration = 8, 
			lazarus_shoot_range = 70, 
			min_heal = 20, 
			multicooldown = 35, 
			cooldown = 70, 
			activeend = 0.8
		}
	}, 
	gunner = {
		name = "Riskrunner", 
		desc = "You believe that overwhelming firepower is the only way to survive, to be able to blaze through all odds.", 
		icon = "6676026731", 
		typing = "ranged", 
		pros = { "Greatly increased hipfire accuracy.", "Greatly increased recoil control.", "Unable to be Grappled." }, 
		cons = { "Inability to aim ranged weapons.", "Scavenge much less ammo." }, 
		basestats = {
			recoilmod = 80, 
			accmod = 80, 
			grap = true, 
			scavmod = -75, 
			noaimmod = true
		}, 
		activename = "TYPE-19 VULKA-MG", 
		activedetails = "Arm and wield the high power VULKA Machine Gun.\nAmmo Pickups will refill VULKA faster.\nCan only be armed at 50% or more.\nDesigned for sustained fire only.", 
		activestats = {
			vulka_ammo_usage = 4, 
			vulka_damage = 18, 
			vulka_rpm = 900, 
			vulka_accuracy = 3.5, 
			vulka_range = 200, 
			vulka_slowdown = 7, 
			vulka_overheat_duration = 3, 
			vulka_accuracy_timer = 2.5, 
			start_empty = true, 
			ammo_cd_pickup = 50, 
			cooldown = 360, 
			activeend = 1, 
			perk_mincd = 180
		}
	}, 
	shotgun = {
		name = "Arbiter", 
		desc = "You believe that taking initiative and setting things straight first is the only way for survival to succeed.", 
		icon = "6633220126", 
		typing = "melee", 
		pros = { "Increased melee damage.", "Immune to Cripple.", "Increased max health." }, 
		cons = { "Heavily slower reloading.", "Heavily reduced hipfire accuracy." }, 
		basestats = {
			atkmod = 35, 
			healthmod = 30, 
			cripple_immune = true, 
			accmod = -100, 
			reloadmod = -65
		}, 
		activename = "Augmentation 'Knuckleboom'", 
		activedetails = "Fire an shotshell blast from your wrist.\nDisorientates and damages Enemies - causes user knockback.\nIf timed right, punch the shotshell for more range.", 
		activestats = {
			blast_forward = 5, 
			blast_range = 8, 
			blast_damage = 45, 
			blast_knockback = 60, 
			blast_punch_window = 0.1, 
			blast_punch_range = 50, 
			blast_punch_multiplier = 1.6, 
			cooldown = 10, 
			activeend = 1
		}
	}, 
	ranger = {
		name = "Blitzer", 
		desc = "You believe in the brave and the risk takers who have survived from their commitment - you intend to be a part of that list.", 
		icon = "6928000185", 
		typing = "ranged", 
		pros = { "Increased aiming speed.", "Increased resistances to damage.", "Immune to Fracture.", "Immune to Explosives effects." }, 
		cons = { "Reduced melee damage.", "Slower Trap deployment." }, 
		basestats = {
			defmod = 15, 
			aimmod = 65, 
			frac_immune = true, 
			explosive_resist = true, 
			atkmod = -20, 
			trapmod = -50
		}, 
		activename = "'Izbucni' Gift", 
		activedetails = "Arm an explosive air-burst payload that causes disorientation and sticks to anything.\nHold to detonate.\nSix Charges.", 
		activestats = {
			clusters = 6, 
			explosiondamage = 10, 
			explosionradius = 10, 
			cooldown = 90, 
			multicooldown = 15, 
			activeend = 0.5, 
			throwvelocity = 50, 
			cluserfuse = 0.65, 
			useanyduration = true
		}
	}, 
	mind = {
		name = "Mindflayer", 
		desc = "You believe intellect and wits are the only way to truly survive - without planning ahead, others are lost.", 
		icon = "6932977178", 
		typing = "support", 
		pros = { "Faster movement speed.", "Faster Shoves.", "Reduced crafting costs." }, 
		cons = { "Reduced recoil control.", "Reduced max health.", "Reduced defense." }, 
		basestats = {
			craftcostmod = -3, 
			shovemod = 25, 
			mvtmod = 20, 
			defmod = -20, 
			healthmod = -15, 
			recoilmod = -15
		}, 
		activename = "MD.K1LR-6B Prototype", 
		activedetails = "Release a Mindkiller spider in front of you.\nWill latch onto and convert Enemies.\nTwo Charges.", 
		activestats = {
			low_count = 79, 
			latch_range = 12, 
			latch_min_active = 0.2, 
			latch_throw = 15, 
			time_until_det = 50, 
			hang_time = 60, 
			multicooldown = 40, 
			reducecooldown = 40, 
			cooldown = 80, 
			activeend = 1.2
		}
	}, 
	goggles = {
		name = "Executioner", 
		desc = "You believe you have a job to do and surviving only comes second to accomplishing what is due.", 
		icon = "7002539723", 
		typing = "melee", 
		pros = { "Increased resistances to damage.", "Increased max Stamina.", "Increased Melee swing speed." }, 
		cons = { "Heavily reduced hipfire accuracy.", "Reduced recoil control.", "Cannot use Scrappers." }, 
		basestats = {
			defmod = 20, 
			stammod = 50, 
			lightatkspeed = 30, 
			heavyatkspeed = 30, 
			accmod = -100, 
			norecycle = true, 
			recoilmod = -30
		}, 
		activename = "Kill-Warrant GPNVG-M42", 
		activedetails = "Lower goggles to view information on Enemies.\nClaim and redeem bounties for melee damage and scrap.\nReceiving attacks will damage goggles.", 
		activestats = {
			boostonkill = 10, 
			damage_taken_multi = 1.75, 
			goggle_broken_cd = 95, 
			scrap_per_bounty = 7, 
			cooldown = 190, 
			activeend = 0.7, 
			useanyduration = true
		}
	}, 
	hive = {
		name = "Hivemind", 
		desc = "We believe in the safety of us, in safety of numbers, survival is only second nature to being collective as one.", 
		icon = "7146206840", 
		typing = "ranged", 
		pros = { "Faster Shoves.", "Immune to Bleed.", "HIVE Aura." }, 
		cons = { "Reduced max health.", "Reduced defense.", "Reduced max Stamina." }, 
		basestats = {
			healthmod = -15, 
			defmod = -15, 
			stammod = -30, 
			shovemod = 25, 
			bleed_immune = true
		}, 
		activename = "HIVE Actuator", 
		activedetails = "Release a swarm of programmed toxic insects.\nSwap between DISPERSE, DIVIDE and DIRECT.\nSwarms will debilitate enemies.", 
		activestats = {
			aura_slow = 1.5, 
			aura_sickness = 1.5, 
			aura_tick = 0.5, 
			attack_tick = 0.5, 
			hunt_damage = 5, 
			normal_damage = 8, 
			slow_duration = 2, 
			sickness_wait = 2, 
			hive_divide_studs = 50, 
			hive_disperse_studs = 25, 
			hunt_lerpspeed = 0.03, 
			hunt_chargespeed = 0.1, 
			hunt_charge_duration = 1, 
			hive_duration = 40, 
			cooldown = 40, 
			activeend = 0.7, 
			useanyduration = true
		}
	}, 
	dagger = {
		name = "Sovereign", 
		desc = "You believe in the truth of higher power that will guide you to not only survival - but also true enlightenment.", 
		icon = "7352265074", 
		typing = "support", 
		pros = { "Increased max Stamina.", "Cursed Dagger." }, 
		cons = { "Reduced melee damage.", "Reduced movement speed." }, 
		basestats = {
			stammod = 50, 
			atkmod = -10, 
			mvmtmod = -10
		}, 
		activename = "'Cytherean' Ritual Dagger", 
		activedetails = "Throw an Accursed Dagger that hexes nearby enemies.\nCan be used out of cooldown by performing Bloodletting.", 
		activestats = {
			dagger_damage = 10, 
			spectral_decay = 8, 
			spectral_range = 35, 
			spectral_amount = 3, 
			blood_damage = 5, 
			cooldown = 40, 
			activeend = 1.3, 
			useanyduration = true
		}
	}, 
	fire = {
		name = "Immolator", 
		desc = "Cursing all as unclean, you firmly stand that the only way to survive is to light a torch to all that is unwelcome.", 
		icon = "7239401851", 
		typing = "melee", 
		pros = { "Immune to Burning.", "Increased melee damage." }, 
		cons = { "Inability to aim ranged weapons.", "Slower reloading." }, 
		basestats = {
			burnimmune = true, 
			atkmod = 25, 
			noaimmod = true, 
			reloadmod = -25
		}, 
		activename = "Flamer Unit 'CHAOS'", 
		activedetails = "Immolate everything around you.\nHold to prime OV-FT, igniting enemies.\nMore Overheat increases melee damage.\nDo not fully Overheat.", 
		activestats = {
			immolate_damage = 40, 
			immolate_range = 15, 
			immolate_overheat = 40, 
			flamer_range = 10, 
			flamer_burn_tick = 0.5, 
			flamer_burn_damage = 5, 
			flamer_overheat = 3, 
			flamer_slowdown = 3, 
			overheat_damage_buff = 90, 
			overheat_cooldown_multiplier = 0.85, 
			overheat_gun_multiplier = 0.45, 
			overheat_graceperiod = 0.5, 
			cooldown = 80, 
			inverse_cd = true, 
			activeend = 0.9, 
			useanyduration = true
		}
	}
};
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1304"><Properties><string name="Name">SpecialAccess</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	ea = {}
};
v1.ea["37579615"] = true;
v1.ea["591704459"] = true;
v1.ea["78726976"] = true;
v1.ea["190809220"] = true;
v1.ea["118434837"] = true;
v1.ea["1109450290"] = true;
v1.ea["52134822"] = true;
v1.ea["39011329"] = true;
v1.ea["91702509"] = true;
v1.ea["1496602700"] = true;
v1.ea["67834224"] = true;
v1.ea["30185014"] = true;
v1.ea["16136245"] = true;
v1.ea["84606980"] = true;
v1.ea["130978737"] = true;
v1.ea["61288221"] = true;
v1.ea["254382548"] = true;
v1.ea["166662007"] = true;
v1.ea["82029783"] = true;
v1.ea["235086239"] = true;
v1.ea["284993067"] = true;
v1.ea["612108814"] = true;
v1.ea["22901680"] = true;
v1.ea["391273764"] = true;
v1.ea["66917693"] = true;
v1.ea["81815297"] = true;
v1.ea["924255031"] = true;
v1.ea["204033184"] = true;
v1.ea["68146579"] = true;
v1.ea["39361684"] = true;
v1.ea["1276853320"] = true;
v1.ea["90475276"] = true;
v1.ea["141332871"] = true;
v1.ea["105637970"] = true;
v1.ea["179562469"] = true;
v1.ea["1089306"] = true;
v1.ea["600226"] = true;
v1.ea["6892363"] = true;
v1.ea["37482936"] = true;
v1.ea["830723525"] = true;
v1.ea["129565393"] = true;
v1.ea["201729998"] = true;
v1.ea["16729118"] = true;
v1.ea["130523371"] = true;
v1.ea["306840664"] = true;
v1.ea["129119806"] = true;
v1.ea["147518443"] = true;
v1.ea["2550992"] = true;
v1.ea["91458100"] = true;
v1.ea["93693150"] = true;
v1.ea["6553839"] = true;
v1.ea["8138689"] = true;
v1.ea["83766995"] = true;
v1.ea["-1"] = true;
v1.ea["-2"] = true;
v1.ea["-3"] = true;
return v1;
]]></ProtectedString></Properties></Item><Item class="ModuleScript" referent="RBX1311"><Properties><string name="Name">C_STATISTICS</string><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = { "Casual", "Combat", "Standard", "Special" };
v1.Tops = {};
v1.Bottom = {};
v1.Head = {};
v1.Helmet = {};
v1.Face = {};
v1.Lower = {};
v1.Tops.ShirtsOveralls = {};
v1.Tops.ShirtsOveralls.category = v2[3];
v1.Tops.ShirtsOveralls.name = "Prison Jumpsuit";
v1.Tops.ShirtsOveralls.tooltip = "Standard issue jumpsuit for all contestants.\nCan't dye it.";
v1.Bottom.PantsOveralls = {};
v1.Bottom.PantsOveralls.category = v2[3];
v1.Bottom.PantsOveralls.name = "Prison Overalls";
v1.Bottom.PantsOveralls.tooltip = "Standard issue lower for all contestants.\nCan't dye it.";
v1.Face.WantedG = {};
v1.Face.WantedG.category = v2[2];
v1.Face.WantedG.name = "Red Goggles";
v1.Face.WantedG.tooltip = "A pair of Goggles worn by someone who is very very wanted.\nNow you can be him too.";
v1.Face.HockeyM = {};
v1.Face.HockeyM.category = v2[1];
v1.Face.HockeyM.name = "Hockey Mask";
v1.Face.HockeyM.tooltip = "A mask worn by people who liked to eat Hockey or something.\nWhatever that is.";
v1.Lower.SKMask = {};
v1.Lower.SKMask.category = v2[4];
v1.Lower.SKMask.name = "Skull Bandana";
v1.Lower.SKMask.tooltip = "Old earth bandana intended to be wrapped around the mouth.\nUsed to be worn by either bikers or very angsty teenagers.";
v1.Lower.SKMask.hidden = true;
v1.Face.Aviator = {};
v1.Face.Aviator.category = v2[1];
v1.Face.Aviator.name = "Aviator Shades";
v1.Face.Aviator.tooltip = "A cool pair of Aviators, recreated from rather cool people who let us use their cool shades.\nNow you can be cool too.";
v1.Face.NGlasses = {};
v1.Face.NGlasses.category = v2[1];
v1.Face.NGlasses.name = "Nerd Glasses";
v1.Face.NGlasses.tooltip = "Worn by scientists, not nerds.\nThere's a distinctive difference between the two.\nI think.";
v1.Helmet.BRCap = {};
v1.Helmet.BRCap.category = v2[1];
v1.Helmet.BRCap.name = "Old Cap";
v1.Helmet.BRCap.tooltip = "A boring old cap.\nCover up your bald head with something for the opponent to aim at.";
v1.Helmet.BaseCap = {};
v1.Helmet.BaseCap.category = v2[1];
v1.Helmet.BaseCap.name = "Baseball Cap";
v1.Helmet.BaseCap.tooltip = "Old earth cap used to be worn by people who frequented Plasma-Ball.\nDo not get hit by a Plasma Ball.";
v1.Helmet.CBHelmet = {};
v1.Helmet.CBHelmet.category = v2[2];
v1.Helmet.CBHelmet.name = "Combat Helmet";
v1.Helmet.CBHelmet.tooltip = "Tactical and sturdy helmet for protecting your skull.\nNo longer effective.";
v1.Helmet.BrimHat = {};
v1.Helmet.BrimHat.category = v2[2];
v1.Helmet.BrimHat.name = "Brimmed Hat";
v1.Helmet.BrimHat.tooltip = "Tactical and sturdy helmet for protecting your skull.\nNo longer effective.";
v1.Lower.Balaclava = {};
v1.Lower.Balaclava.category = v2[4];
v1.Lower.Balaclava.name = "Basic Balaclava";
v1.Lower.Balaclava.tooltip = "A standard head cover-er.\nCan be used for a variety of reasons.\nSuch as theft.";
v1.Face.GMask = {};
v1.Face.GMask.category = v2[3];
v1.Face.GMask.name = "Gas Mask";
v1.Face.GMask.tooltip = "A mask used for breathing in gas.\nDoesn't actually allow you to breathe in gas.";
v1.Face.EPatch = {};
v1.Face.EPatch.category = v2[3];
v1.Face.EPatch.name = "Eyepatch";
v1.Face.EPatch.tooltip = "A face wear used to conceal a single eye for reasons unknown.\nWorks well enough.";
v1.Lower.FaceMask = {};
v1.Lower.FaceMask.category = v2[1];
v1.Lower.FaceMask.name = "Face Mask";
v1.Lower.FaceMask.tooltip = "Clean and hygienic mouth cover.\nStay safe out there.";
v1.Bottom.CTrousersBl = {};
v1.Bottom.CTrousersBl.category = v2[2];
v1.Bottom.CTrousersBl.name = "Combat Trousers";
v1.Bottom.CTrousersBl.tooltip = "Old earth combat trousers used for urban operations.";
v1.Bottom.BlueJ = {};
v1.Bottom.BlueJ.category = v2[1];
v1.Bottom.BlueJ.name = "Classic Jeans";
v1.Bottom.BlueJ.tooltip = "Classic old earth jeans.\nStylish for murdering Russians.\nWhatever they are.";
v1.Bottom.BShorts = {};
v1.Bottom.BShorts.category = v2[1];
v1.Bottom.BShorts.name = "Comfy Shorts";
v1.Bottom.BShorts.tooltip = "Comfy shorts worn to feel as comfortable as possible.\nComes with free slippers.";
v1.Tops.PTShirt = {};
v1.Tops.PTShirt.category = v2[1];
v1.Tops.PTShirt.name = "Short Sleeved T-Shirt";
v1.Tops.PTShirt.tooltip = "A stylish and attention seeking short sleeved t-shirt.";
v1.Tops.BHoodie = {};
v1.Tops.BHoodie.category = v2[1];
v1.Tops.BHoodie.name = "Classic Hoodie";
v1.Tops.BHoodie.tooltip = "Remnant of the old earth clothing, passable warmth in Eden-227.";
v1.Tops.WinterC = {};
v1.Tops.WinterC.category = v2[1];
v1.Tops.WinterC.name = "Winter Coat";
v1.Tops.WinterC.tooltip = "A coat for surviving the harsh winters of Eden-227.\nStill effective.";
v1.Tops.ProfSuit = {};
v1.Tops.ProfSuit.category = v2[3];
v1.Tops.ProfSuit.name = "Professional Suit";
v1.Tops.ProfSuit.tooltip = "A professional suit for professional acts, made by professionals and worn by professionals.\nKeep it classy.";
v1.Bottom.ProfSlacks = {};
v1.Bottom.ProfSlacks.category = v2[3];
v1.Bottom.ProfSlacks.name = "Professional Slacks";
v1.Bottom.ProfSlacks.tooltip = "Slacks worn by men who know how to keep standards straight, fit with stylish oxford shoes.\nKeep it classy.";
v1.Tops.BXTShirt = {};
v1.Tops.BXTShirt.category = v2[1];
v1.Tops.BXTShirt.name = "Boxing T-Shirt";
v1.Tops.BXTShirt.tooltip = "A clean T-Shirt used to be worn by Boxers, provided alongside with 'Boxing Gloves', whatever they are.";
v1.Tops.LettermanJ = {};
v1.Tops.LettermanJ.category = v2[3];
v1.Tops.LettermanJ.name = "Letterman Jacket";
v1.Tops.LettermanJ.tooltip = "Faithfully recreated from an infamous event in Miami, on the 23rd of July, 1989";
v1.Tops.GHMantle = {};
v1.Tops.GHMantle.category = v2[2];
v1.Tops.GHMantle.name = "Ghillie Mantle";
v1.Tops.GHMantle.tooltip = "Grass netting around an old earth military jacket to camouflage the person wearing it.\nUsed to be used before cloaking devices.";
v1.Bottom.GHTrouser = {};
v1.Bottom.GHTrouser.category = v2[2];
v1.Bottom.GHTrouser.name = "Ghillie Lowers";
v1.Bottom.GHTrouser.tooltip = "Grass netting around an old earth military combat trousers to camouflage the person wearing it.\nUsed to be used before cloaking devices.";
v1.Tops.SwatG = {};
v1.Tops.SwatG.category = v2[2];
v1.Tops.SwatG.name = "SWAT Gear";
v1.Tops.SwatG.tooltip = "Special Weapons And Turtles.\nYes.";
v1.Bottom.SwatP = {};
v1.Bottom.SwatP.category = v2[2];
v1.Bottom.SwatP.name = "SWAT Pants";
v1.Bottom.SwatP.tooltip = "The lower half of the turtle outfit.\nYes.";
v1.Tops.CoatTop = {};
v1.Tops.CoatTop.category = v2[2];
v1.Tops.CoatTop.name = "Coat Jacket";
v1.Tops.CoatTop.tooltip = "Special Weapons And Turtles.\nYes.";
v1.Bottom.CoatTrouser = {};
v1.Bottom.CoatTrouser.category = v2[2];
v1.Bottom.CoatTrouser.name = "Coat Trousers";
v1.Bottom.CoatTrouser.tooltip = "The lower half of the turtle outfit.\nYes.";
v1.Tops.ScavG = {};
v1.Tops.ScavG.category = v2[3];
v1.Tops.ScavG.name = "Scav Gear";
v1.Tops.ScavG.tooltip = "Worn by the lower classes for scavenging raids.\nFit with pouches and a duffle bag to carry the stuff that you stole.";
v1.Tops.HunterJ = {};
v1.Tops.HunterJ.category = v2[3];
v1.Tops.HunterJ.name = "Hunter's Jacket";
v1.Tops.HunterJ.tooltip = "Dusty old jacket with de-activated rounds.\nUsed to be worn by big game hunters.\nThey don't exist anymore.";
v1.Bottom.HunterP = {};
v1.Bottom.HunterP.category = v2[3];
v1.Bottom.HunterP.name = "Hunting Legwear";
v1.Bottom.HunterP.tooltip = "Dusty old trousers with de-activated rounds.\nCarries all the supplies you need for hunting.\nExcept they don't work.";
v1.Lower.BFaceM = {};
v1.Lower.BFaceM.category = v2[3];
v1.Lower.BFaceM.name = "Lower Face Cover";
v1.Lower.BFaceM.tooltip = "A classic face cover used for concealing the lower face.";
v1.Lower.EmoticonMask = {};
v1.Lower.EmoticonMask.category = v2[4];
v1.Lower.EmoticonMask.name = "Emoticon Mask";
v1.Lower.EmoticonMask.tooltip = "A mask with an emoticon.\nUgh.";
v1.Lower.CMScarf = {};
v1.Lower.CMScarf.category = v2[2];
v1.Lower.CMScarf.name = "Combat Scarf";
v1.Lower.CMScarf.tooltip = "Combat scarf for the lower face.\nCombat effectiveness varies.";
v1.Lower.RespM = {};
v1.Lower.RespM.category = v2[3];
v1.Lower.RespM.name = "Respirator";
v1.Lower.RespM.tooltip = "Used to be basic respiratory protective equipment.\nFilters don't work anymore.";
v1.Head.MotorcycleH = {};
v1.Head.MotorcycleH.category = v2[3];
v1.Head.MotorcycleH.name = "Motorcycle Helmet";
v1.Head.MotorcycleH.tooltip = "Sturdy helmet used by people who rode bikes that ran on motors.\nThey don't exist anymore.";
v1.Helmet.SweatB = {};
v1.Helmet.SweatB.category = v2[1];
v1.Helmet.SweatB.name = "Sweatband";
v1.Helmet.SweatB.tooltip = "A band for picking up sweat.\nObviously.";
v1.Helmet.hairVar1 = {};
v1.Helmet.hairVar1.category = "hair";
v1.Helmet.hairVar1.name = "Hair 1";
v1.Helmet.hairVar1.tooltip = "Hair is cool.";
v1.Helmet.hairVar2 = {};
v1.Helmet.hairVar2.category = "hair";
v1.Helmet.hairVar2.name = "Hair 2";
v1.Helmet.hairVar2.tooltip = "Hair is cool.";
v1.Helmet.hairVar3 = {};
v1.Helmet.hairVar3.category = "hair";
v1.Helmet.hairVar3.name = "Hair 3";
v1.Helmet.hairVar3.tooltip = "Hair is cool.";
v1.Helmet.hairVar4 = {};
v1.Helmet.hairVar4.category = "hair";
v1.Helmet.hairVar4.name = "Hair 4";
v1.Helmet.hairVar4.tooltip = "Hair is cool.";
v1.Helmet.hairVar5 = {};
v1.Helmet.hairVar5.category = "hair";
v1.Helmet.hairVar5.name = "Hair 5";
v1.Helmet.hairVar5.tooltip = "Hair is cool.";
v1.Helmet.hairVar6 = {};
v1.Helmet.hairVar6.category = "hair";
v1.Helmet.hairVar6.name = "Hair 6";
v1.Helmet.hairVar6.tooltip = "Hair is cool.";
v1.Helmet.hairVar7 = {};
v1.Helmet.hairVar7.category = "hair";
v1.Helmet.hairVar7.name = "Hair 7";
v1.Helmet.hairVar7.tooltip = "Hair is cool.";
v1.Helmet.hairVar8 = {};
v1.Helmet.hairVar8.category = "hair";
v1.Helmet.hairVar8.name = "Hair 8";
v1.Helmet.hairVar8.tooltip = "Hair is cool.";
v1.Helmet.hairVar9 = {};
v1.Helmet.hairVar9.category = "hair";
v1.Helmet.hairVar9.name = "Hair 9";
v1.Helmet.hairVar9.tooltip = "Hair is cool.";
v1.Head.RZHead = {};
v1.Head.RZHead.category = v2[2];
v1.Head.RZHead.name = "Welding Helmet";
v1.Head.RZHead.tooltip = "The burden of truth.";
v1.Head.RZHead.hidden = true;
v1.Tops.RZAttire = {};
v1.Tops.RZAttire.category = v2[2];
v1.Tops.RZAttire.name = "Raiders Attire";
v1.Tops.RZAttire.tooltip = "The merciless slaying.";
v1.Tops.RZAttire.hidden = true;
v1.Head.OldDSquadHelmet = {};
v1.Head.OldDSquadHelmet.category = v2[2];
v1.Head.OldDSquadHelmet.name = "Damaged Headgear";
v1.Head.OldDSquadHelmet.tooltip = "> LAW 1: DO NOT HARM DEATH SQUAD AGENTS";
v1.Head.OldDSquadHelmet.hidden = true;
v1.Tops.OldDSquadShirt = {};
v1.Tops.OldDSquadShirt.category = v2[2];
v1.Tops.OldDSquadShirt.name = "Damaged Hardsuit";
v1.Tops.OldDSquadShirt.tooltip = "> LAW 2: ELIMINATE ALL CONTESTANTS";
v1.Tops.OldDSquadShirt.hidden = true;
v1.Bottom.OldDSquadPants = {};
v1.Bottom.OldDSquadPants.category = v2[2];
v1.Bottom.OldDSquadPants.name = "Damaged Supports";
v1.Bottom.OldDSquadPants.tooltip = "> LAW 3: PROTECT YOUR OWN EXISTENCE";
v1.Bottom.OldDSquadPants.hidden = true;
v1.Head.OldRISHelm = {};
v1.Head.OldRISHelm.category = v2[2];
v1.Head.OldRISHelm.name = "Deteriorated Helmet";
v1.Head.OldRISHelm.tooltip = "Justice";
v1.Head.OldRISHelm.hidden = true;
v1.Tops.OldRISBody = {};
v1.Tops.OldRISBody.category = v2[2];
v1.Tops.OldRISBody.name = "Deteriorated Armour";
v1.Tops.OldRISBody.tooltip = "Justice";
v1.Tops.OldRISBody.hidden = true;
v1.Bottom.OldRISLegs = {};
v1.Bottom.OldRISLegs.category = v2[2];
v1.Bottom.OldRISLegs.name = "Deteriorated Leggings";
v1.Bottom.OldRISLegs.tooltip = "Justice";
v1.Bottom.OldRISLegs.hidden = true;
v1.Tops.BrokenShirt = {};
v1.Tops.BrokenShirt.category = v2[3];
v1.Tops.BrokenShirt.name = "War Torn Shirt";
v1.Tops.BrokenShirt.tooltip = "Old relic.";
v1.Tops.BrokenShirt.hidden = true;
v1.Face.SoldatH = {};
v1.Face.SoldatH.category = v2[2];
v1.Face.SoldatH.name = "Agent Eyepiece";
v1.Face.SoldatH.tooltip = "Surgically welded onto the face.";
v1.Face.SoldatH.hidden = true;
v1.Helmet.BLCrownA = {};
v1.Helmet.BLCrownA.category = v2[4];
v1.Helmet.BLCrownA.name = "Bloody Crown";
v1.Helmet.BLCrownA.tooltip = "A true Crown for those who were committed to the end.\nThank you.";
v1.Helmet.BLCrownA.hidden = true;
return { v1, v2 };
]]></ProtectedString></Properties></Item></Item><Item class="RemoteEvent" referent="RBX1319"><Properties><string name="Name">callEvent</string></Properties></Item><Item class="RemoteFunction" referent="RBX1323"><Properties><string name="Name">confirmBlock</string></Properties></Item><Item class="RemoteEvent" referent="RBX1327"><Properties><string name="Name">detBarrel</string></Properties></Item><Item class="RemoteFunction" referent="RBX1331"><Properties><string name="Name">consoleCommand</string></Properties></Item><Item class="BindableEvent" referent="RBX1335"><Properties><string name="Name">handlePlayerGains</string></Properties></Item><Item class="RemoteEvent" referent="RBX1339"><Properties><string name="Name">getStatsBack</string></Properties></Item><Item class="RemoteEvent" referent="RBX1343"><Properties><string name="Name">quickDisplay</string></Properties></Item><Item class="RemoteEvent" referent="RBX1347"><Properties><string name="Name">harvest</string></Properties></Item><Item class="RemoteEvent" referent="RBX1351"><Properties><string name="Name">playerMatsHandler</string></Properties></Item><Item class="RemoteEvent" referent="RBX1355"><Properties><string name="Name">killFeed</string></Properties></Item><Item class="RemoteFunction" referent="RBX1359"><Properties><string name="Name">setReady</string></Properties></Item><Item class="RemoteEvent" referent="RBX1363"><Properties><string name="Name">handlePerkVisibility</string></Properties></Item><Item class="RemoteEvent" referent="RBX1367"><Properties><string name="Name">spawnPlayer</string></Properties></Item><Item class="RemoteEvent" referent="RBX1371"><Properties><string name="Name">applyGore</string></Properties></Item><Item class="RemoteEvent" referent="RBX1375"><Properties><string name="Name">useupItem</string></Properties></Item><Item class="RemoteEvent" referent="RBX1379"><Properties><string name="Name">BREATHE</string></Properties></Item><Item class="RemoteEvent" referent="RBX1383"><Properties><string name="Name">deployTrap</string></Properties></Item><Item class="RemoteEvent" referent="RBX1387"><Properties><string name="Name">paintWeapon</string></Properties></Item><Item class="RemoteEvent" referent="RBX1391"><Properties><string name="Name">givePlayerIndicator</string></Properties></Item><Item class="RemoteEvent" referent="RBX1395"><Properties><string name="Name">handleClientAudio</string></Properties></Item><Item class="RemoteFunction" referent="RBX1399"><Properties><string name="Name">getCosmetics</string></Properties></Item><Item class="RemoteEvent" referent="RBX1403"><Properties><string name="Name">alertPlay</string></Properties></Item><Item class="RemoteEvent" referent="RBX1407"><Properties><string name="Name">craftItem</string></Properties></Item><Item class="BindableEvent" referent="RBX1411"><Properties><string name="Name">communicateAI</string></Properties></Item><Item class="RemoteEvent" referent="RBX1415"><Properties><string name="Name">voiceline</string></Properties></Item><Item class="RemoteEvent" referent="RBX1419"><Properties><string name="Name">duel</string></Properties></Item><Item class="RemoteEvent" referent="RBX1423"><Properties><string name="Name">dealDamage</string></Properties></Item><Item class="RemoteEvent" referent="RBX1427"><Properties><string name="Name">dropAmmo</string></Properties></Item><Item class="BindableEvent" referent="RBX1431"><Properties><string name="Name">convert</string></Properties></Item><Item class="RemoteEvent" referent="RBX1435"><Properties><string name="Name">blorp</string></Properties></Item><Item class="RemoteFunction" referent="RBX1439"><Properties><string name="Name">changeStats</string></Properties></Item><Item class="RemoteEvent" referent="RBX1443"><Properties><string name="Name">movementAdjust</string></Properties></Item><Item class="RemoteEvent" referent="RBX1447"><Properties><string name="Name">eventTime</string></Properties></Item><Item class="RemoteEvent" referent="RBX1451"><Properties><string name="Name">handleVoiceLine</string></Properties></Item><Item class="RemoteFunction" referent="RBX1455"><Properties><string name="Name">claimItem</string></Properties></Item><Item class="RemoteEvent" referent="RBX1459"><Properties><string name="Name">deathPlay</string></Properties></Item><Item class="RemoteFunction" referent="RBX1463"><Properties><string name="Name">relaylobbystat</string></Properties></Item><Item class="BindableEvent" referent="RBX1467"><Properties><string name="Name">boomBoom</string></Properties></Item><Item class="RemoteEvent" referent="RBX1471"><Properties><string name="Name">communicate</string></Properties></Item><Item class="RemoteEvent" referent="RBX1475"><Properties><string name="Name">takeDamage</string></Properties></Item><Item class="RemoteEvent" referent="RBX1479"><Properties><string name="Name">initiateblock</string></Properties></Item><Item class="RemoteEvent" referent="RBX1483"><Properties><string name="Name">flinchTarget</string></Properties></Item><Item class="RemoteFunction" referent="RBX1487"><Properties><string name="Name">relayStats</string></Properties></Item><Item class="RemoteFunction" referent="RBX1491"><Properties><string name="Name">ask</string></Properties></Item><Item class="RemoteEvent" referent="RBX1495"><Properties><string name="Name">getTPWeapon</string></Properties></Item><Item class="BindableEvent" referent="RBX1499"><Properties><string name="Name">activateGas</string></Properties></Item><Item class="RemoteEvent" referent="RBX1503"><Properties><string name="Name">adjustArms</string></Properties></Item></Item><Item class="Folder" referent="RBX1508"><Properties><string name="Name">activePlayers</string></Properties><Item class="Folder" referent="RBX1511"><Properties><string name="Name">Steffie_lsEpicGamer</string></Properties><Item class="LocalScript" referent="RBX1514"><Properties><string name="Name">Animate</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__Parent__1 = script.Parent;
local l__Torso__2 = l__Parent__1:WaitForChild("Torso");
local l__Right_Shoulder__3 = l__Torso__2:WaitForChild("Right Shoulder");
local l__Left_Shoulder__4 = l__Torso__2:WaitForChild("Left Shoulder");
local l__Right_Hip__5 = l__Torso__2:WaitForChild("Right Hip");
local l__Left_Hip__6 = l__Torso__2:WaitForChild("Left Hip");
local l__Neck__7 = l__Torso__2:WaitForChild("Neck");
local l__Humanoid__8 = l__Parent__1:WaitForChild("Humanoid");
local u1 = {};
function configureAnimationSet(p1, p2)
	if u1[p1] ~= nil then
		local v9, v10, v11 = pairs(u1[p1].connections);
		while true do
			local v12, v13 = v9(v10, v11);
			if v12 then

			else
				break;
			end;
			v11 = v12;
			v13:disconnect();		
		end;
	end;
	u1[p1] = {};
	u1[p1].count = 0;
	u1[p1].totalWeight = 0;
	u1[p1].connections = {};
	local v14 = script:FindFirstChild(p1);
	if v14 ~= nil then
		table.insert(u1[p1].connections, v14.ChildAdded:connect(function(p3)
			configureAnimationSet(p1, p2);
		end));
		table.insert(u1[p1].connections, v14.ChildRemoved:connect(function(p4)
			configureAnimationSet(p1, p2);
		end));
		local v15 = 1;
		local v16, v17, v18 = pairs(v14:GetChildren());
		while true do
			local v19, v20 = v16(v17, v18);
			if v19 then

			else
				break;
			end;
			v18 = v19;
			if v20:IsA("Animation") then
				table.insert(u1[p1].connections, v20.Changed:connect(function(p5)
					configureAnimationSet(p1, p2);
				end));
				u1[p1][v15] = {};
				u1[p1][v15].anim = v20;
				local l__Weight__21 = v20:FindFirstChild("Weight");
				if l__Weight__21 == nil then
					u1[p1][v15].weight = 1;
				else
					u1[p1][v15].weight = l__Weight__21.Value;
				end;
				u1[p1].count = u1[p1].count + 1;
				u1[p1].totalWeight = u1[p1].totalWeight + u1[p1][v15].weight;
				v15 = v15 + 1;
			end;		
		end;
	end;
	if u1[p1].count <= 0 then
		local v22, v23, v24 = pairs(p2);
		while true do
			local v25, v26 = v22(v23, v24);
			if v25 then

			else
				break;
			end;
			v24 = v25;
			u1[p1][v25] = {};
			u1[p1][v25].anim = Instance.new("Animation");
			u1[p1][v25].anim.Name = p1;
			u1[p1][v25].anim.AnimationId = v26.id;
			u1[p1][v25].weight = v26.weight;
			u1[p1].count = u1[p1].count + 1;
			u1[p1].totalWeight = u1[p1].totalWeight + v26.weight;		
		end;
	end;
end;
local u2 = {
	idle = { {
			id = "http://www.roblox.com/asset/?id=180435571", 
			weight = 9
		}, {
			id = "http://www.roblox.com/asset/?id=180435792", 
			weight = 1
		} }, 
	walk = { {
			id = "http://www.roblox.com/asset/?id=180426354", 
			weight = 10
		} }, 
	run = { {
			id = "run.xml", 
			weight = 10
		} }, 
	jump = { {
			id = "http://www.roblox.com/asset/?id=125750702", 
			weight = 10
		} }, 
	fall = { {
			id = "http://www.roblox.com/asset/?id=180436148", 
			weight = 10
		} }, 
	climb = { {
			id = "http://www.roblox.com/asset/?id=180436334", 
			weight = 10
		} }, 
	sit = { {
			id = "http://www.roblox.com/asset/?id=178130996", 
			weight = 10
		} }, 
	toolnone = { {
			id = "http://www.roblox.com/asset/?id=182393478", 
			weight = 10
		} }, 
	toolslash = { {
			id = "http://www.roblox.com/asset/?id=129967390", 
			weight = 10
		} }, 
	toollunge = { {
			id = "http://www.roblox.com/asset/?id=129967478", 
			weight = 10
		} }, 
	wave = { {
			id = "http://www.roblox.com/asset/?id=128777973", 
			weight = 10
		} }, 
	point = { {
			id = "http://www.roblox.com/asset/?id=128853357", 
			weight = 10
		} }, 
	dance1 = { {
			id = "http://www.roblox.com/asset/?id=182435998", 
			weight = 10
		}, {
			id = "http://www.roblox.com/asset/?id=182491037", 
			weight = 10
		}, {
			id = "http://www.roblox.com/asset/?id=182491065", 
			weight = 10
		} }, 
	dance2 = { {
			id = "http://www.roblox.com/asset/?id=182436842", 
			weight = 10
		}, {
			id = "http://www.roblox.com/asset/?id=182491248", 
			weight = 10
		}, {
			id = "http://www.roblox.com/asset/?id=182491277", 
			weight = 10
		} }, 
	dance3 = { {
			id = "http://www.roblox.com/asset/?id=182436935", 
			weight = 10
		}, {
			id = "http://www.roblox.com/asset/?id=182491368", 
			weight = 10
		}, {
			id = "http://www.roblox.com/asset/?id=182491423", 
			weight = 10
		} }, 
	laugh = { {
			id = "http://www.roblox.com/asset/?id=129423131", 
			weight = 10
		} }, 
	cheer = { {
			id = "http://www.roblox.com/asset/?id=129423030", 
			weight = 10
		} }
};
function scriptChildModified(p6)
	local v27 = u2[p6.Name];
	if v27 ~= nil then
		configureAnimationSet(p6.Name, v27);
	end;
end;
script.ChildAdded:connect(scriptChildModified);
script.ChildRemoved:connect(scriptChildModified);
for v28, v29 in pairs(u2) do
	configureAnimationSet(v28, v29);
end;
local u3 = "";
local u4 = {
	wave = false, 
	point = false, 
	dance1 = true, 
	dance2 = true, 
	dance3 = true, 
	laugh = false, 
	cheer = false
};
local u5 = nil;
local u6 = nil;
local u7 = nil;
function stopAllAnimations()
	local v30 = u3;
	if u4[v30] ~= nil then
		if u4[v30] == false then
			v30 = "idle";
		end;
	end;
	u3 = "";
	u5 = nil;
	if u6 ~= nil then
		u6:disconnect();
	end;
	if u7 ~= nil then
		u7:Stop();
		u7:Destroy();
		u7 = nil;
	end;
	return v30;
end;
local u8 = 1;
function setAnimationSpeed(p7)
	if p7 ~= u8 then
		u8 = p7;
		u7:AdjustSpeed(u8);
	end;
end;
function keyFrameReachedFunc(p8)
	if p8 == "End" then
		local v31 = u3;
		if u4[v31] ~= nil then
			if u4[v31] == false then
				v31 = "idle";
			end;
		end;
		playAnimation(v31, 0, l__Humanoid__8);
		setAnimationSpeed(u8);
	end;
end;
function playAnimation(p9, p10, p11)
	local v32 = math.random(1, u1[p9].totalWeight);
	local v33 = 1;
	while true do
		if u1[p9][v33].weight < v32 then

		else
			break;
		end;
		v32 = v32 - u1[p9][v33].weight;
		v33 = v33 + 1;	
	end;
	local l__anim__34 = u1[p9][v33].anim;
	if l__anim__34 ~= u5 then
		if u7 ~= nil then
			u7:Stop(p10);
			u7:Destroy();
		end;
		u8 = 1;
		u7 = p11:LoadAnimation(l__anim__34);
		u7.Priority = Enum.AnimationPriority.Core;
		u7:Play(p10);
		u3 = p9;
		u5 = l__anim__34;
		if u6 ~= nil then
			u6:disconnect();
		end;
		u6 = u7.KeyframeReached:connect(keyFrameReachedFunc);
	end;
end;
local u9 = "";
function toolKeyFrameReachedFunc(p12)
	if p12 == "End" then
		playToolAnimation(u9, 0, l__Humanoid__8);
	end;
end;
local u10 = nil;
local u11 = nil;
local u12 = nil;
function playToolAnimation(p13, p14, p15, p16)
	local v35 = math.random(1, u1[p13].totalWeight);
	local v36 = 1;
	while true do
		if u1[p13][v36].weight < v35 then

		else
			break;
		end;
		v35 = v35 - u1[p13][v36].weight;
		v36 = v36 + 1;	
	end;
	local l__anim__37 = u1[p13][v36].anim;
	if u10 ~= l__anim__37 then
		if u11 ~= nil then
			u11:Stop();
			u11:Destroy();
			p14 = 0;
		end;
		u11 = p15:LoadAnimation(l__anim__37);
		if p16 then
			u11.Priority = p16;
		end;
		u11:Play(p14);
		u9 = p13;
		u10 = l__anim__37;
		u12 = u11.KeyframeReached:connect(toolKeyFrameReachedFunc);
	end;
end;
function stopToolAnimations()
	if u12 ~= nil then
		u12:disconnect();
	end;
	u9 = "";
	u10 = nil;
	if u11 ~= nil then
		u11:Stop();
		u11:Destroy();
		u11 = nil;
	end;
	return u9;
end;
local u13 = "Standing";
function onRunning(p17)
	if 0.01 < p17 then

	else
		if u4[u3] == nil then
			playAnimation("idle", 0.1, l__Humanoid__8);
			u13 = "Standing";
		end;
		return;
	end;
	playAnimation("walk", 0.1, l__Humanoid__8);
	if u5 then
		if u5.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(p17 / 14.5);
		end;
	end;
	u13 = "Running";
end;
function onDied()
	u13 = "Dead";
end;
local u14 = 0;
function onJumping()
	playAnimation("jump", 0.1, l__Humanoid__8);
	u14 = 0.3;
	u13 = "Jumping";
end;
function onClimbing(p18)
	playAnimation("climb", 0.1, l__Humanoid__8);
	setAnimationSpeed(p18 / 12);
	u13 = "Climbing";
end;
function onGettingUp()
	u13 = "GettingUp";
end;
function onFreeFall()
	if u14 <= 0 then
		playAnimation("fall", 0.3, l__Humanoid__8);
	end;
	u13 = "FreeFall";
end;
function onFallingDown()
	u13 = "FallingDown";
end;
function onSeated()
	u13 = "Seated";
end;
function onPlatformStanding()
	u13 = "PlatformStanding";
end;
function onSwimming(p19)
	if 0 < p19 then
		u13 = "Running";
		return;
	end;
	u13 = "Standing";
end;
function getTool()
	local v38, v39, v40 = ipairs(l__Parent__1:GetChildren());
	while true do
		local v41, v42 = v38(v39, v40);
		if v41 then

		else
			break;
		end;
		v40 = v41;
		if v42.className == "Tool" then
			return v42;
		end;	
	end;
	return nil;
end;
function getToolAnim(p20)
	local v43, v44, v45 = ipairs(p20:GetChildren());
	while true do
		local v46, v47 = v43(v44, v45);
		if v46 then

		else
			break;
		end;
		v45 = v46;
		if v47.Name == "toolanim" then
			if v47.className == "StringValue" then
				return v47;
			end;
		end;	
	end;
	return nil;
end;
local u15 = "None";
function animateTool()
	if u15 == "None" then
		playToolAnimation("toolnone", 0.1, l__Humanoid__8, Enum.AnimationPriority.Idle);
		return;
	end;
	if u15 == "Slash" then
		playToolAnimation("toolslash", 0, l__Humanoid__8, Enum.AnimationPriority.Action);
		return;
	end;
	if u15 == "Lunge" then

	else
		return;
	end;
	playToolAnimation("toollunge", 0, l__Humanoid__8, Enum.AnimationPriority.Action);
end;
function moveSit()
	l__Right_Shoulder__3.MaxVelocity = 0.15;
	l__Left_Shoulder__4.MaxVelocity = 0.15;
	l__Right_Shoulder__3:SetDesiredAngle(1.57);
	l__Left_Shoulder__4:SetDesiredAngle(-1.57);
	l__Right_Hip__5:SetDesiredAngle(1.57);
	l__Left_Hip__6:SetDesiredAngle(-1.57);
end;
local u16 = 0;
local u17 = 0;
function move(p21)
	local v48 = 1;
	local v49 = 1;
	u16 = p21;
	local v50 = false;
	if 0 < u14 then
		u14 = u14 - (p21 - u16);
	end;
	if u13 == "FreeFall" then
		if u14 <= 0 then
			playAnimation("fall", 0.3, l__Humanoid__8);
		else
			if u13 == "Seated" then
				playAnimation("sit", 0.5, l__Humanoid__8);
				return;
			end;
			if u13 == "Running" then
				playAnimation("walk", 0.1, l__Humanoid__8);
			elseif u13 ~= "Dead" then
				if u13 ~= "GettingUp" then
					if u13 ~= "FallingDown" then
						if u13 ~= "Seated" then
							if u13 == "PlatformStanding" then
								stopAllAnimations();
								v48 = 0.1;
								v49 = 1;
								v50 = true;
							end;
						else
							stopAllAnimations();
							v48 = 0.1;
							v49 = 1;
							v50 = true;
						end;
					else
						stopAllAnimations();
						v48 = 0.1;
						v49 = 1;
						v50 = true;
					end;
				else
					stopAllAnimations();
					v48 = 0.1;
					v49 = 1;
					v50 = true;
				end;
			else
				stopAllAnimations();
				v48 = 0.1;
				v49 = 1;
				v50 = true;
			end;
		end;
	else
		if u13 == "Seated" then
			playAnimation("sit", 0.5, l__Humanoid__8);
			return;
		end;
		if u13 == "Running" then
			playAnimation("walk", 0.1, l__Humanoid__8);
		elseif u13 ~= "Dead" then
			if u13 ~= "GettingUp" then
				if u13 ~= "FallingDown" then
					if u13 ~= "Seated" then
						if u13 == "PlatformStanding" then
							stopAllAnimations();
							v48 = 0.1;
							v49 = 1;
							v50 = true;
						end;
					else
						stopAllAnimations();
						v48 = 0.1;
						v49 = 1;
						v50 = true;
					end;
				else
					stopAllAnimations();
					v48 = 0.1;
					v49 = 1;
					v50 = true;
				end;
			else
				stopAllAnimations();
				v48 = 0.1;
				v49 = 1;
				v50 = true;
			end;
		else
			stopAllAnimations();
			v48 = 0.1;
			v49 = 1;
			v50 = true;
		end;
	end;
	if v50 then
		local v51 = v48 * math.sin(p21 * v49);
		l__Right_Shoulder__3:SetDesiredAngle(v51 + 0);
		l__Left_Shoulder__4:SetDesiredAngle(v51 - 0);
		l__Right_Hip__5:SetDesiredAngle(-v51);
		l__Left_Hip__6:SetDesiredAngle(-v51);
	end;
	local v52 = getTool();
	if v52 then
		if v52:FindFirstChild("Handle") then

		else
			stopToolAnimations();
			u15 = "None";
			u10 = nil;
			u17 = 0;
			return;
		end;
	else
		stopToolAnimations();
		u15 = "None";
		u10 = nil;
		u17 = 0;
		return;
	end;
	local v53 = getToolAnim(v52);
	if v53 then
		u15 = v53.Value;
		v53.Parent = nil;
		u17 = p21 + 0.3;
	end;
	if u17 < p21 then
		u17 = 0;
		u15 = "None";
	end;
	animateTool();
end;
l__Humanoid__8.Died:connect(onDied);
l__Humanoid__8.Running:connect(onRunning);
l__Humanoid__8.Jumping:connect(onJumping);
l__Humanoid__8.Climbing:connect(onClimbing);
l__Humanoid__8.GettingUp:connect(onGettingUp);
l__Humanoid__8.FreeFalling:connect(onFreeFall);
l__Humanoid__8.FallingDown:connect(onFallingDown);
l__Humanoid__8.Seated:connect(onSeated);
l__Humanoid__8.PlatformStanding:connect(onPlatformStanding);
l__Humanoid__8.Swimming:connect(onSwimming);
local u18 = { "dance1", "dance2", "dance3" };
game:GetService("Players").LocalPlayer.Chatted:connect(function(p22)
	local v54 = "";
	if p22 == "/e dance" then
		v54 = u18[math.random(1, #u18)];
	elseif string.sub(p22, 1, 3) == "/e " then
		v54 = string.sub(p22, 4);
	elseif string.sub(p22, 1, 7) == "/emote " then
		v54 = string.sub(p22, 8);
	end;
	if u13 == "Standing" and u4[v54] ~= nil then
		playAnimation(v54, 0.1, l__Humanoid__8);
	end;
end);
playAnimation("idle", 0.1, l__Humanoid__8);
u13 = "Standing";
while l__Parent__1.Parent ~= nil do
	local v55, v56 = wait(0.1);
	move(v56);
end;
]]></ProtectedString></Properties></Item></Item></Item></Item><Item class="StarterGui" referent="RBX1525"><Properties><string name="Name">StarterGui</string></Properties><Item class="Folder" referent="RBX1528"><Properties><string name="Name">controlsGui</string></Properties><Item class="LocalScript" referent="RBX1531"><Properties><string name="Name">handler</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

wait();
local u1 = false;
local l__RenderStepped__2 = game:GetService("RunService").RenderStepped;
local function u3()
	if u1 == true then
		return;
	end;
	u1 = true;
	if script.Parent.keyboardfade.ImageTransparency <= 0.2 then
		while true do
			script.Parent.keyboardfade.ImageTransparency = script.Parent.keyboardfade.ImageTransparency + 0.05;
			for v1, v2 in ipairs(script.Parent:GetChildren()) do
				if v2.Name == "controls" then
					v2.TextTransparency = script.Parent.keyboardfade.ImageTransparency;
				end;
			end;
			l__RenderStepped__2:wait();
			if script.Parent.keyboardfade.ImageTransparency >= 1 then
				break;
			end;		
		end;
		script.Parent.keyboardfade.ImageTransparency = 1;
		for v3, v4 in ipairs(script.Parent:GetChildren()) do
			if v4.Name == "controls" then
				v4.TextTransparency = script.Parent.keyboardfade.ImageTransparency;
			end;
		end;
	else
		while true do
			script.Parent.keyboardfade.ImageTransparency = script.Parent.keyboardfade.ImageTransparency - 0.05;
			for v5, v6 in ipairs(script.Parent:GetChildren()) do
				if v6.Name == "controls" then
					v6.TextTransparency = script.Parent.keyboardfade.ImageTransparency;
				end;
			end;
			l__RenderStepped__2:wait();
			if script.Parent.keyboardfade.ImageTransparency <= 0.2 then
				break;
			end;		
		end;
		script.Parent.keyboardfade.ImageTransparency = 0.19;
		for v7, v8 in ipairs(script.Parent:GetChildren()) do
			if v8.Name == "controls" then
				v8.TextTransparency = script.Parent.keyboardfade.ImageTransparency;
			end;
		end;
	end;
	u1 = false;
end;
local v9 = game:GetService("UserInputService").InputBegan:connect(function(p1, p2)
	if p2 == true then
		return;
	end;
	p1 = p1.KeyCode;
	if p1 == Enum.KeyCode.K then
		u3();
	end;
end);
]]></ProtectedString></Properties></Item></Item><Item class="Folder" referent="RBX1540"><Properties><string name="Name">menuGui</string></Properties><Item class="LocalScript" referent="RBX1543"><Properties><string name="Name">main</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

while true do
	wait();
	if game.Players.LocalPlayer then
		break;
	end;
end;
wait();
if game.Players.LocalPlayer.PlayerGui:FindFirstChild("loadmenu") then
	while true do
		wait();
		if game.Players.LocalPlayer.PlayerGui:FindFirstChild("loadmenu") == nil then
			break;
		end;	
	end;
end;
if workspace.ServerStuff.Statistics:FindFirstChild("Filth") then
	filth = require(workspace.ServerStuff.Statistics:FindFirstChild("Filth"));
else
	filth = { "Praise the sun!" };
end;
if _G.seedk == nil then
	game.Workspace.ServerStuff.spawnPlayer.OnClientEvent:Connect(function(p1)
		if typeof(p1) ~= "table" or _G.seedk ~= nil then
			return;
		end;
		_G.seedk = {};
		for v1 = 1, 1000 do
			local v2 = math.random(-100000, 100000);
			if v2 ~= p1[2] then
				_G.seedk[v2] = math.random(-100000, 100000);
			end;
		end;
		_G.seedk[p1[2]] = p1[1];
	end);
end;
_G.keylist = workspace.ServerStuff.ask:InvokeServer(script.Name, false);
while true do
	wait();
	if game.Players.LocalPlayer then
		break;
	end;
end;
for v3, v4 in ipairs(workspace.CurrentCamera:GetChildren()) do
	v4:Destroy();
end;
for v5, v6 in ipairs(game.Lighting:GetChildren()) do
	v6:Destroy();
end;
local l__LocalPlayer__7 = game.Players.LocalPlayer;
local l__Parent__8 = script.Parent;
while true do
	wait();
	if l__Parent__8 ~= nil then
		break;
	end;
end;
local l__loadoutframe__9 = l__Parent__8:WaitForChild("loadoutframe");
local l__mouse__10 = l__LocalPlayer__7:GetMouse();
local v11 = require(workspace.ServerStuff.Statistics.G_SCRIPTS);
game:GetService("UserInputService").MouseIconEnabled = true;
local u1 = game:GetService("StarterGui");
local l__RenderStepped__2 = game:GetService("RunService").RenderStepped;
u1 = game.Players.LocalPlayer.Backpack;
u1 = u1.FindFirstChild;
u1 = u1(u1, "mainHandler");
if u1 then
	u1 = l__Parent__8.Destroy;
	u1(l__Parent__8);
	u1 = script.Destroy;
	u1(script);
end;
u1 = function(p2, ...)
	local v12 = nil;
	local v13 = {};
	for v14 = 1, 8 do
		v12 = { pcall(u1[p2], u1, ...) };
		if v12[1] then
			break;
		end;
		l__RenderStepped__2:wait();
	end;
	return unpack(v12);
end;
u1("SetCore", "ResetButtonCallback", false);
u1 = game.GetService;
u1 = u1(game, "StarterGui");
u1 = u1.SetCoreGuiEnabled;
u1(u1, Enum.CoreGuiType.Chat, true);
u1 = require;
u1 = u1(workspace.ServerStuff.Statistics.W_STATISTICS);
local v15 = require(workspace.ServerStuff.Statistics.S_STATISTICS);
local v16 = require(workspace.ServerStuff.Statistics.C_STATISTICS);
local v17 = require(workspace.ServerStuff.Statistics.Q_STATISTICS);
local v18 = require(workspace.ServerStuff.Statistics.P_STATISTICS);
local v19 = require(workspace.ServerStuff.Statistics.CLASS_STATISTICS);
local v20 = workspace.ServerStuff.retrieveStats:InvokeServer();
while true do
	l__RenderStepped__2:wait();
	if v20 then
		break;
	end;
end;
local v21 = {};
for v22, v23 in ipairs(game.ReplicatedStorage.challenges:GetChildren()) do
	if v23.Name ~= "start" then
		local v24 = require(v23);
		if v20.Trackers and v20.Trackers[v24.req] and v24.reqamount <= v20.Trackers[v24.req] then
			for v25, v26 in pairs(v24.req_rewards) do
				if v26[1] == "title" and v20.Titles[v26[2]] == nil then
					local v27 = workspace.ServerStuff.changeStats:InvokeServer("checkchallenge", v23);
					v20 = workspace.ServerStuff.retrieveStats:InvokeServer();
					while true do
						l__RenderStepped__2:wait();
						if v20 then
							break;
						end;					
					end;
				end;
			end;
		end;
	end;
end;
if v20.Level >= 5 and v20.Titles.defaultclass == nil then
	local v28 = workspace.ServerStuff.changeStats:InvokeServer("givedefault");
	v20 = workspace.ServerStuff.retrieveStats:InvokeServer();
	while true do
		l__RenderStepped__2:wait();
		if v20 then
			break;
		end;	
	end;
end;
while true do
	l__RenderStepped__2:wait();
	if script.Parent ~= nil then
		break;
	end;
end;
script.Parent.Enabled = true;
local u3 = true;
spawn(function()
	while true do
		l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency = l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency + 0.02;
		l__RenderStepped__2:wait();
		if l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency >= 1 then
			break;
		end;	
	end;
	l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency = 1;
	u3 = false;
end);
local v29 = {
	home = CFrame.new(-81.0454178, -380.852966, 346.342163, -0.98864907, 0.00797797088, -0.150031343, -0, 0.998589277, 0.0531003401, 0.150243312, 0.052497603, -0.987254322), 
	quarter = CFrame.new(-77.8884811, -395.367188, 248.776855, -0.534277737, 0.254562497, 0.806067824, -0, 0.953577757, -0.301147252, -0.845309019, -0.160896271, -0.50947535)
};
local l__home__30 = v29.home;
local l__home__31 = v29.home;
workspace.CurrentCamera.CameraType = "Scriptable";
workspace.CurrentCamera.CameraSubject = nil;
workspace.CurrentCamera.CFrame = l__home__30;
workspace.CurrentCamera.FieldOfView = 90;
local l__SpawnModel__32 = workspace:FindFirstChild("SpawnModel");
local l__homeframe__4 = l__Parent__8.homeframe;
local u5 = v20;
local l__leveltitles__6 = v11.leveltitles;
local l__combatlist__7 = l__Parent__8.profileframe.combatlist;
local l__survivallist__8 = l__Parent__8.profileframe.survivallist;
local l__workspace__9 = workspace;
local l__settingsmenu__10 = l__Parent__8.settingsframe.settingsmenu;
local l__clientmusic__11 = workspace.clientmusic;
local u12 = nil;
local function v33()
	u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
	if u5 then
		if u5.Level < 5 then
			l__settingsmenu__10.Anonymous.title.Text = "[LOCKED UNTIL LEVEL 5]";
		else
			l__settingsmenu__10.Anonymous.title.Text = "Toggle Anonymity";
		end;
		if u5.Settings.MuteMusic == true then
			l__clientmusic__11.Volume = 0;
		end;
		local v34 = u12(false, true);
		for v35, v36 in pairs(u5.Settings) do
			local v37 = l__settingsmenu__10:FindFirstChild(v35);
			if v37 then
				if typeof(v36) == "boolean" then
					if v36 == true then
						v37.button.Text = "X";
					else
						v37.button.Text = " ";
					end;
				else
					v37.disp.Text = math.floor(v36 * 100) .. "%";
				end;
			end;
		end;
	end;
end;
local u13 = "";
local u14 = "";
local l__game__15 = game;
local u16 = false;
local function u17()
	l__homeframe__4.level.Text = "Level: " .. tostring(math.clamp(u5.Level, 1, 100));
	l__homeframe__4.title.Text = l__leveltitles__6[math.clamp(u5.Prestige, 1, #l__leveltitles__6)];
	l__homeframe__4.xpamt.Text = "XP Required for next Level: " .. u5.XP .. "/" .. u5.NextLevel;
	if u5.XP == 0 then
		l__homeframe__4.levelbar.bar.Size = UDim2.new(0, 0, 0.7, 0);
	else
		l__homeframe__4.levelbar.bar.Size = UDim2.new(u5.XP / u5.NextLevel, -6, 0.7, 0);
	end;
	if u5.Level >= 100 then
		l__homeframe__4.xpamt.Text = "MAX LEVEL";
		l__homeframe__4.levelbar.bar.Size = UDim2.new(1, -6, 0.7, 0);
	else
		l__homeframe__4.pledgebutton.Visible = false;
	end;
	l__homeframe__4.tokens.Text = "Odens: " .. u5.Tokens;
	if u5.Prestige > 1 then
		l__homeframe__4.bonds.Text = "Bonds: " .. u5.Bonds;
		l__homeframe__4.bonds.Visible = true;
		if l__Parent__8.home.Visible == false then
			if u5.Level >= 100 then
				l__homeframe__4.pledgebutton.Visible = true;
			end;
			l__Parent__8.quarter.Visible = true;
		end;
	end;
end;
l__loadoutframe__9.previewFrame.buybutton.MouseButton1Click:connect(function()
	if l__loadoutframe__9.previewFrame.buybutton.Text == "Purchase" then
		if u5.Tokens < 500 then
			return;
		else
			local v38 = u13;
			if v38 == "Tops" then
				v38 = "Shirt";
			elseif v38 == "Bottom" then
				v38 = "Pants";
			end;
			if v38 == "hair" then
				v38 = "Helmet";
			end;
			if u13 == "hair" then
				u13 = "Helmet";
			end;
			if l__workspace__9.ServerStuff.changeStats:InvokeServer("purchase", { v38, u14, u13 }) then
				local v39 = l__game__15.ReplicatedStorage.soundLibrary.general.purchase:Clone();
				v39.Parent = l__workspace__9.CurrentCamera;
				l__game__15:GetService("Debris"):AddItem(v39, 1);
				v39:Play();
				u16 = true;
				l__loadoutframe__9.previewFrame.buybutton.Visible = false;
				u5 = nil;
				while true do
					u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
					l__RenderStepped__2:wait();
					if u5 ~= nil then
						break;
					end;				
				end;
				local v40 = u12(false, true);
				u17();
				u16 = false;
			end;
			return;
		end;
	end;
	if l__loadoutframe__9.previewFrame.buybutton.Text == "Equip" then
		local v41 = u13;
		if v41 == "Tops" then
			v41 = "Shirt";
		elseif v41 == "Bottom" then
			v41 = "Pants";
		end;
		if v41 == "hair" then
			v41 = "Helmet";
		end;
		if l__workspace__9.ServerStuff.changeStats:InvokeServer("changecosmetic", { v41, u14 }) then
			local v42 = l__game__15.ReplicatedStorage.soundLibrary.general.equipcos:Clone();
			v42.Parent = l__workspace__9.CurrentCamera;
			l__game__15:GetService("Debris"):AddItem(v42, 1);
			v42:Play();
			u16 = true;
			l__loadoutframe__9.previewFrame.buybutton.Visible = false;
			u5 = nil;
			while true do
				u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
				l__RenderStepped__2:wait();
				if u5 ~= nil then
					break;
				end;			
			end;
			u17();
			local v43 = u12(false, true);
			u16 = false;
			return;
		end;
	elseif l__loadoutframe__9.previewFrame.buybutton.Text == "Un-Equip" then
		local v44 = u13;
		if v44 == "Tops" or v44 == "Bottom" then
			return;
		end;
		if v44 == "hair" then
			v44 = "Helmet";
		end;
		if l__workspace__9.ServerStuff.changeStats:InvokeServer("changecosmetic", { v44, nil }) then
			local v45 = l__game__15.ReplicatedStorage.soundLibrary.general.equipcos:Clone();
			v45.Parent = l__workspace__9.CurrentCamera;
			l__game__15:GetService("Debris"):AddItem(v45, 1);
			v45:Play();
			u16 = true;
			l__loadoutframe__9.previewFrame.buybutton.Visible = false;
			u5 = nil;
			while true do
				u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
				l__RenderStepped__2:wait();
				if u5 ~= nil then
					break;
				end;			
			end;
			local v46 = u12(false, true);
			u16 = false;
		end;
	end;
end);
u12 = function(p3, p4)
	l__SpawnModel__32.Parent = nil;
	if l__SpawnModel__32:FindFirstChild("RIGHT") then
		l__SpawnModel__32:FindFirstChild("RIGHT"):Destroy();
	end;
	if l__SpawnModel__32:FindFirstChild("LEFT") then
		l__SpawnModel__32:FindFirstChild("LEFT"):Destroy();
	end;
	if l__SpawnModel__32:FindFirstChild("ROOT") then
		l__SpawnModel__32:FindFirstChild("ROOT"):Destroy();
	end;
	if l__SpawnModel__32:FindFirstChild("PERKCOS") then
		l__SpawnModel__32:FindFirstChild("PERKCOS"):Destroy();
	end;
	if l__SpawnModel__32:FindFirstChild("PERKWEP") then
		l__SpawnModel__32:FindFirstChild("PERKWEP"):Destroy();
	end;
	local v47 = l__game__15.ReplicatedStorage.perk_cosmetics:FindFirstChild(u5.Class);
	if v47 and u5.Class ~= "gunner" and u5.Class ~= "lazarus" then
		local v48 = v47:Clone();
		v48.Name = "PERKCOS";
		local v49 = Instance.new("Weld");
		v49.Part0 = v48;
		v49.Part1 = l__SpawnModel__32.Torso;
		v49.Parent = v48;
		v48.Parent = l__SpawnModel__32;
	end;
	if u5.Class == "shotgun" or u5.Class == "scan" then
		local v50 = "shotshell";
		if u5.Class == "scan" then
			v50 = "scanner";
		end;
		local v51 = l__game__15.ReplicatedStorage.perkAbilities:FindFirstChild(v50):Clone();
		for v52, v53 in ipairs(v51:GetDescendants()) do
			if v53:IsA("BasePart") then
				v53.Locked = true;
			end;
		end;
		v51.Name = "PERKWEP";
		v51.Parent = l__SpawnModel__32;
		local v54 = Instance.new("Motor6D");
		v54.Part0 = v51;
		v54.Part1 = l__SpawnModel__32["Left Arm"];
		v54.C0 = CFrame.new(-13.4847937, 2.39296269, 31.8319225, 1, 0, 0, 0, 0.999999881, 0, 0, 0, 1);
		v54.C1 = CFrame.new(13.3041697, 2.36263275, -31.7611885, -1, 0, 0, 0, 1, 0, 0, 0, -1);
		v54.Parent = v51;
		if u5.Class == "scan" then
			v51.neonfx.BrickColor = BrickColor.new("Bright blue");
			v51.neonfx.Material = Enum.Material.Neon;
		end;
	end;
	if u5.Class == "damn" then
		local v55 = l__game__15.ReplicatedStorage.perk_cosmetics.cuffs:Clone();
		v55.CFrame = l__SpawnModel__32["Right Arm"].CFrame;
		local v56 = Instance.new("Weld");
		v56.Part0 = v55;
		v56.Part1 = l__SpawnModel__32["Right Arm"];
		v56.C0 = CFrame.new(-85.3201218, 2.39995384, 6.98597288, 1, 0, 0, 0, 0.999999881, 0, 0, 0, 1);
		v56.C1 = CFrame.new(-85.3201218, 2.85723853, 6.98597288, 1, 0, 0, 0, 0.999999881, 0, 0, 0, 1) * CFrame.new(0, -1, 0);
		v56.Parent = v55;
		v55.cuffB.CFrame = l__SpawnModel__32["Left Arm"].CFrame;
		local v57 = Instance.new("Weld");
		v57.Part0 = v55.cuffB;
		v57.Part1 = l__SpawnModel__32["Left Arm"];
		v57.C0 = CFrame.new(-82.3201218, 2.39995384, 6.98597288, 1, 0, 0, 0, 0.999999881, 0, 0, 0, 1);
		v57.C1 = CFrame.new(-82.3201218, 2.85723853, 6.98597288, 1, 0, 0, 0, 0.999999881, 0, 0, 0, 1) * CFrame.new(0, -1, 0);
		v57.Parent = v55.cuffB;
		v55.Parent = l__SpawnModel__32;
	elseif l__SpawnModel__32:FindFirstChild("cuffs") then
		l__SpawnModel__32:FindFirstChild("cuffs"):Destroy();
	end;
	local v58 = l__game__15.ReplicatedStorage.lobby_setup:FindFirstChild(u5.Class);
	if v58 then
		if v58:FindFirstChild("RIGHT") then
			local v59 = v58:FindFirstChild("RIGHT"):Clone();
			v59.Parent = l__SpawnModel__32;
			local v60 = Instance.new("Weld");
			v60.Part0 = v59;
			v60.Part1 = l__SpawnModel__32["Right Arm"];
			v60.Parent = v59;
		end;
		if v58:FindFirstChild("LEFT") then
			local v61 = v58:FindFirstChild("LEFT"):Clone();
			v61.Parent = l__SpawnModel__32;
			local v62 = Instance.new("Weld");
			v62.Part0 = v61;
			v62.Part1 = l__SpawnModel__32["Left Arm"];
			v62.Parent = v61;
		end;
		if v58:FindFirstChild("ROOT") then
			local v63 = v58:FindFirstChild("ROOT"):Clone();
			v63.Parent = l__SpawnModel__32;
			v63:SetPrimaryPartCFrame(l__SpawnModel__32.HumanoidRootPart.CFrame);
		end;
	end;
	local v64 = v11.applycosmetic(l__SpawnModel__32, u5, p3, nil, u5.CustomColours);
	if p4 == true then
		l__SpawnModel__32.Parent = l__workspace__9;
		local v65 = l__game__15.ReplicatedStorage.animationSets.idleAnims:FindFirstChild(u5.Class);
		if v65 == nil then
			v65 = l__game__15.ReplicatedStorage.animationSets.idleAnims.Fists;
		end;
		l__SpawnModel__32.Humanoid:LoadAnimation(v65):Play(0, 1, 0.2);
	end;
	l__SpawnModel__32.Parent = l__workspace__9;
	return true;
end;
local v66 = UDim2.new(0, 8, 0, -40);
local u18 = nil;
local u19 = nil;
local function u20(p5, p6)
	if p5 == "empty" then
		if u18 ~= nil then
			u18:Destroy();
		end;
		l__loadoutframe__9.previewFrame.prevtext.Text = "Cosmetic Preview";
		l__loadoutframe__9.previewFrame.buybutton.Visible = false;
		return;
	end;
	if l__game__15.ReplicatedStorage.skins.thirdperson:FindFirstChild(p5) then
		local v67 = nil;
		if u18 ~= nil then
			u18:Destroy();
		end;
		u18 = l__game__15.ReplicatedStorage.skins.thirdperson:FindFirstChild(p5):Clone();
		if u18:FindFirstChild("Head") ~= nil then
			v67 = u18:FindFirstChild("Head");
		end;
		if u18:FindFirstChild("Torso") ~= nil then
			v67 = u18:FindFirstChild("Torso");
		end;
		if u18:FindFirstChild("Left Leg") ~= nil then
			v67 = u18:FindFirstChild("Left Leg");
		end;
		if v67 ~= nil then
			u18.Parent = l__loadoutframe__9.previewFrame;
			if u19 == nil then
				u19 = Instance.new("Camera");
				u19.Parent = l__loadoutframe__9.previewFrame;
			end;
			l__loadoutframe__9.previewFrame.CurrentCamera = u19;
			local v68 = CFrame.new(0, 0, 0);
			if v67.Name == "Left Leg" then
				v68 = CFrame.new(0.55, 0, 2);
			end;
			if v67.Name == "Torso" then
				v68 = CFrame.new(0, 0, -2);
			end;
			if v67.Name ~= "Left Leg" and v67.Name ~= "Torso" then
				v68 = CFrame.new(0, 0, 3);
			end;
			u19.CFrame = v67.CFrame * CFrame.new(0, 0, -5) * v68 * CFrame.Angles(0, math.rad(180), 0);
			l__loadoutframe__9.previewFrame.buybutton.Text = "Purchase";
			l__loadoutframe__9.previewFrame.buybutton.Visible = true;
			if p6 == "equipcosmetic" then
				l__loadoutframe__9.previewFrame.buybutton.Text = "Equip";
				return;
			end;
			if p6 == "equipped" then
				if v67.Name ~= "Left Leg" and v67.Name ~= "Torso" then
					l__loadoutframe__9.previewFrame.buybutton.Text = "Un-Equip";
					return;
				end;
				l__loadoutframe__9.previewFrame.buybutton.Visible = false;
			end;
		end;
	end;
end;
local u21 = { "Tops", "Bottom", "Head", "Helmet", "Face", "Lower" };
local function u22(p7)
	l__loadoutframe__9.selectionlist.CanvasPosition = Vector2.new(0, 0);
	u16 = false;
	l__loadoutframe__9.colourchange.Visible = true;
	l__loadoutframe__9.returnbutton.Visible = true;
	for v69, v70 in ipairs(l__loadoutframe__9.selectionlist:GetChildren()) do
		if v70.Name ~= "bg" and v70.Name ~= "ex" then
			v70:Destroy();
		end;
	end;
	for v71, v72 in pairs(v16[1][p7]) do
		if v72.hidden == nil or v72.hidden == true and u5.CosmeticInventory[v71] == true then
			local v73 = false;
			if p7 == "Helmet" then
				if v72.category == "hair" and u13 == "hair" then
					v73 = true;
				elseif v72.category ~= "hair" and u13 ~= "hair" then
					v73 = true;
				end;
			else
				v73 = true;
			end;
			if v73 == true then
				local v74 = l__loadoutframe__9.selectionlist.ex:Clone();
				v74.Name = v71;
				v74.Visible = true;
				v74.Text = v72.name;
				v74.Position = UDim2.new(0.5, 0, 0, -90 + 50 * #l__loadoutframe__9.selectionlist:GetChildren());
				v74.Parent = l__loadoutframe__9.selectionlist;
				v74.MouseButton1Click:connect(function()
					if u16 == true then
						return;
					end;
					if v74.BackgroundColor3 == Color3.new(1, 1, 1) then
						return;
					end;
					u16 = true;
					for v75, v76 in ipairs(l__loadoutframe__9.selectionlist:GetChildren()) do
						if v76.Name ~= "bg" and v76.Name ~= "ex" then
							v76.BackgroundColor3 = Color3.new(0, 0, 0);
							v76.BorderColor3 = Color3.new(1, 1, 1);
						end;
					end;
					local v77 = nil;
					if u5.CosmeticInventory[v71] == true then
						v77 = "equipcosmetic";
					end;
					local v78 = p7;
					if v78 == "Tops" then
						v78 = "Shirt";
					elseif v78 == "Bottom" then
						v78 = "Pants";
					end;
					if u5.EquippedCosmetics[v78] == v71 then
						v77 = "equipped";
					end;
					u14 = v71;
					u20(v71, v77);
					v74.BackgroundColor3 = Color3.new(1, 1, 1);
					v74.BorderColor3 = Color3.new(0, 0, 0);
					u14 = v71;
					u16 = false;
				end);
			end;
		end;
	end;
end;
local function u23()
	u16 = false;
	l__loadoutframe__9.selectionlist.CanvasPosition = Vector2.new(0, 0);
	l__loadoutframe__9.colourchange.Visible = false;
	l__loadoutframe__9.returnbutton.Visible = false;
	u20("empty");
	for v79, v80 in ipairs(l__loadoutframe__9.selectionlist:GetChildren()) do
		if v80.Name ~= "bg" and v80.Name ~= "ex" then
			v80:Destroy();
		end;
	end;
	for v81, v82 in pairs(u21) do
		local v83 = l__loadoutframe__9.selectionlist.ex:Clone();
		v83.Name = v82 .. "selection";
		v83.Visible = true;
		v83.Text = v82;
		v83.Position = UDim2.new(0.5, 0, 0, -90 + 50 * #l__loadoutframe__9.selectionlist:GetChildren());
		v83.Parent = l__loadoutframe__9.selectionlist;
		v83.MouseButton1Click:connect(function()
			if u16 == true then
				return;
			end;
			u16 = true;
			u13 = v82;
			u22(v82);
		end);
	end;
	local v84 = l__loadoutframe__9.selectionlist.ex:Clone();
	v84.Name = "hairselection";
	v84.Visible = true;
	v84.Text = "Hair";
	v84.Position = UDim2.new(0.5, 0, 0, -90 + 50 * #l__loadoutframe__9.selectionlist:GetChildren());
	v84.Parent = l__loadoutframe__9.selectionlist;
	v84.MouseButton1Click:connect(function()
		if u16 == true then
			return;
		end;
		u16 = true;
		u13 = "hair";
		u22("Helmet");
	end);
end;
l__loadoutframe__9.returnbutton.MouseButton1Click:connect(function()
	if u16 == true then
		u16 = false;
	end;
	u23();
end);
u23();
local l__perksframe__24 = l__Parent__8.perksframe;
local u25 = true;
local u26 = nil;
local function u27(p8)
	l__perksframe__24.details.Visible = true;
	local v85 = v18[p8];
	if v85 == nil then
		return;
	end;
	l__perksframe__24.details.top.title.Text = "Trait: " .. v85.name;
	l__perksframe__24.details.bottom.traitdesc.Text = v85.desc;
end;
local function v86(p9)
	if v18[p9] == nil then
		return;
	end;
	local v87 = l__perksframe__24.selectionlist.ex:Clone();
	v87.Name = p9;
	v87.Text = v18[p9].name;
	v87.Visible = true;
	v87.Position = UDim2.new(0.5, 0, 0, -95 + 55 * #l__perksframe__24.selectionlist:GetChildren());
	v87.Parent = l__perksframe__24.selectionlist;
	v87.MouseButton1Click:connect(function()
		if u25 == false then
			return;
		end;
		u25 = false;
		if l__workspace__9.ServerStuff.changeStats:InvokeServer("changeperk", p9) then
			u5 = nil;
			while true do
				u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
				l__RenderStepped__2:wait();
				if u5 ~= nil then
					break;
				end;			
			end;
			u26();
			u25 = true;
		end;
	end);
	v87.MouseEnter:connect(function()
		u27(p9);
	end);
end;
for v88, v89 in pairs(v18) do
	v86(v88);
end;
u26 = function()
	u25 = false;
	l__perksframe__24.description.agenttitle.Text = "Alias: " .. l__LocalPlayer__7.Name;
	for v90, v91 in ipairs(l__perksframe__24.description.desc:GetChildren()) do
		if v91.Name ~= "ex" then
			v91:Destroy();
		end;
	end;
	for v92, v93 in ipairs(l__perksframe__24.selectionlist:GetChildren()) do
		if v93.Name ~= "ex" and v93:FindFirstChild("selected") then
			v93.selected.Visible = false;
		end;
	end;
	for v94, v95 in pairs(u5.Perks) do
		if l__perksframe__24.selectionlist:FindFirstChild(v95) then
			l__perksframe__24.selectionlist:FindFirstChild(v95).selected.Visible = true;
		end;
		local v96 = l__perksframe__24.description.desc.ex:Clone();
		v96.Name = v94;
		v96.Text = v18[v95].name;
		v96.desc.Text = v18[v95].cat;
		v96.Position = UDim2.new(0, 5, 0, -75 + 80 * #l__perksframe__24.description.desc:GetChildren());
		v96.Visible = true;
		v96.Parent = l__perksframe__24.description.desc;
	end;
	u25 = true;
end;
u26();
local l__classframe__28 = l__Parent__8.classframe;
local u29 = {
	balanced = "6135552198", 
	ranged = "7207996092", 
	melee = "6135552683", 
	support = "6135553536"
};
local u30 = true;
local function u31(p10)
	local v97 = v19[p10];
	if v97 ~= nil then
		l__classframe__28.dispperkstats.Visible = true;
		l__classframe__28.description.Text = v97.desc;
		l__classframe__28.perkstitle.Text = v97.name;
		l__classframe__28.dispperkstats.activeability.title.label.Text = v97.activename;
		l__classframe__28.dispperkstats.activeability.desc.label.Text = v97.activedetails;
		for v98, v99 in ipairs(l__classframe__28.dispperkstats.consframe:GetChildren()) do
			if v99.Name ~= "ex" and v99.Name ~= "label" then
				v99:Destroy();
			end;
		end;
		for v100, v101 in ipairs(l__classframe__28.dispperkstats.prosframe:GetChildren()) do
			if v101.Name ~= "ex" and v101.Name ~= "label" then
				v101:Destroy();
			end;
		end;
		for v102, v103 in pairs(v97.pros) do
			local v104 = l__classframe__28.dispperkstats.prosframe.ex:Clone();
			v104.Name = v102;
			v104.label.Text = "(+) " .. v103;
			v104.Position = UDim2.new(0.5, 0, 0, -65 + 35 * #l__classframe__28.dispperkstats.prosframe:GetChildren());
			v104.Visible = true;
			v104.Parent = l__classframe__28.dispperkstats.prosframe;
		end;
		for v105, v106 in pairs(v97.cons) do
			local v107 = l__classframe__28.dispperkstats.consframe.ex:Clone();
			v107.Name = v105;
			v107.label.Text = "(-) " .. v106;
			v107.Position = UDim2.new(0.5, 0, 0, -65 + 35 * #l__classframe__28.dispperkstats.consframe:GetChildren());
			v107.Visible = true;
			v107.Parent = l__classframe__28.dispperkstats.consframe;
		end;
	end;
end;
local function v108(p11, p12)
	local v109 = l__classframe__28.availableperks.ex:Clone();
	v109.Name = p12;
	v109.bg.Image = "rbxassetid://" .. u29[p11.typing];
	v109.icon.Image = "rbxassetid://" .. p11.icon;
	v109.Visible = true;
	if p12 == u5.Class then
		v109.icon.ImageColor3 = Color3.fromRGB(229, 29, 29);
		v109.bg.ImageColor3 = Color3.fromRGB(229, 29, 29);
	end;
	if p12 ~= "survival" and u5.Level < 5 then
		v109.lockedtext.Visible = true;
	end;
	v109.MouseButton1Click:connect(function()
		if v109.lockedtext.Visible == true then
			return;
		end;
		if u30 == false then
			return;
		end;
		if v109.icon.ImageColor3 ~= Color3.fromRGB(229, 29, 29) then
			for v110, v111 in ipairs(l__classframe__28.availableperks:GetChildren()) do
				v111.bg.ImageColor3 = Color3.new(1, 1, 1);
				v111.icon.ImageColor3 = Color3.new(1, 1, 1);
			end;
			v109.icon.ImageColor3 = Color3.fromRGB(229, 29, 29);
			v109.bg.ImageColor3 = Color3.fromRGB(229, 29, 29);
			u30 = false;
			if l__workspace__9.ServerStuff.changeStats:InvokeServer("changeclass", p12) then
				u5 = nil;
				while true do
					u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
					l__RenderStepped__2:wait();
					if u5 ~= nil then
						break;
					end;				
				end;
				local v112 = u12(false, true);
				u31(p12);
				u30 = true;
			end;
		end;
	end);
	v109.Position = UDim2.new(0, -190 + 200 * #l__classframe__28.availableperks:GetChildren(), 0.5, 0);
	v109.Parent = l__classframe__28.availableperks;
end;
v108(v19.survival, "survival");
for v113, v114 in pairs(v19) do
	if v114.name ~= "Survivalist" and v114.name ~= "Damned" and v114.hidden == nil then
		v108(v114, v113);
	end;
end;
v108(v19.damn, "damn");
u31(u5.Class);
local l__challengesframe__32 = l__Parent__8.challengesframe;
local u33 = true;
l__challengesframe__32.challengefluff.pin.MouseButton1Click:connect(function()
	if u33 == false then
		return;
	end;
	local v115 = nil;
	if u5.PinnedChallenge[l__challengesframe__32.challengefluff.pin.challenge.Value] == true then
		v115 = false;
	elseif u5.PinnedChallenge[l__challengesframe__32.challengefluff.pin.challenge.Value] == nil then
		v115 = true;
	end;
	if v115 == true then
		local v116 = 0;
		for v117, v118 in pairs(u5.PinnedChallenge) do
			v116 = v116 + 1;
		end;
		if v116 >= 3 then
			return;
		end;
	end;
	if l__workspace__9.ServerStuff.changeStats:InvokeServer("changepins", { l__challengesframe__32.challengefluff.pin.challenge.Value, v115 }) then
		u33 = false;
		u5 = nil;
		while true do
			u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
			l__RenderStepped__2:wait();
			if u5 ~= nil then
				break;
			end;		
		end;
		u33 = true;
		if v115 ~= true then
			l__challengesframe__32.challengefluff.pin.BackgroundColor3 = Color3.new(0, 0, 0);
			return;
		end;
	else
		return;
	end;
	l__challengesframe__32.challengefluff.pin.BackgroundColor3 = Color3.new(1, 1, 1);
end);
local function u34(p13)
	local v119 = require(p13);
	local v120 = l__challengesframe__32.selectionlist.ex:Clone();
	v120.Name = p13.Name;
	v120.challengename.Text = v119.name;
	l__challengesframe__32.challengefluff.pin.Visible = true;
	v120.challengeprogress.Text = "0 / " .. v119.reqamount;
	local v121 = 0;
	if v119.req == "Level" then
		v120.challengeprogress.Text = u5.Level .. " / " .. v119.reqamount;
		v121 = math.clamp(u5.Level / v119.reqamount, 0, 1);
	elseif u5.Trackers[v119.req] then
		local v122 = u5.Trackers[v119.req];
		v121 = math.clamp(v122 / v119.reqamount, 0, 1);
		v120.challengeprogress.Text = math.floor(v122) .. " / " .. v119.reqamount;
	end;
	v120.progress.bar.Size = UDim2.new(v121, 0, 0, 15);
	if v121 >= 1 then
		v120.BackgroundColor3 = Color3.fromRGB(16, 171, 21);
	end;
	if v119.locked_endgame == true then
		v120.progress.Visible = false;
		v120.linebreak.Visible = false;
		v120.challengename.Visible = false;
		v120.challengeprogress.Visible = false;
		v120.challengelocked.Visible = true;
		v120.BackgroundColor3 = Color3.fromRGB(227, 15, 15);
	end;
	v120.MouseButton1Click:connect(function()
		if v120.challengelocked.Visible == true then
			return;
		end;
		for v123, v124 in ipairs(l__challengesframe__32.selectionlist:GetChildren()) do
			if v124.Name ~= "ex" and v124.Name ~= "bg" then
				v124.BackgroundColor3 = Color3.new(0, 0, 0);
				if v124.challengelocked.Visible == true then
					v124.BackgroundColor3 = Color3.fromRGB(227, 15, 15);
				end;
				if v124.progress.bar.Size == UDim2.new(1, 0, 0, 15) then
					v124.BackgroundColor3 = Color3.fromRGB(16, 171, 21);
				end;
			end;
		end;
		l__challengesframe__32.challengefluff.pin.Visible = true;
		if p13.Name == "start" then
			l__challengesframe__32.challengefluff.pin.Visible = false;
		end;
		v120.BackgroundColor3 = Color3.new(1, 1, 1);
		l__challengesframe__32.challengereqs.Visible = true;
		l__challengesframe__32.challengefluff.Visible = true;
		l__challengesframe__32.challengereward.Visible = true;
		l__challengesframe__32.challengefluff.pin.challenge.Value = p13.Name;
		l__challengesframe__32.challengereqs.req.Text = v119.req_desc;
		if u5.PinnedChallenge[p13.Name] then
			l__challengesframe__32.challengefluff.pin.BackgroundColor3 = Color3.new(1, 1, 1);
		else
			l__challengesframe__32.challengefluff.pin.BackgroundColor3 = Color3.new(0, 0, 0);
		end;
		l__challengesframe__32.challengefluff.challengename.Text = v119.name;
		l__challengesframe__32.challengefluff.challengedesc.Text = v119.desc;
		local function v125(p14)
			local v126 = nil;
			local v127 = "Title";
			if p14[1] == "title" then
				if not v11.title_designation[p14[2]] then
					v126 = v127;
					return v126;
				end;
			else
				v127 = p14[1];
				v126 = v127;
				return v126;
			end;
			return "Title - " .. v11.title_designation[p14[2]];
		end;
		l__challengesframe__32.challengereward.reward1.Visible = true;
		l__challengesframe__32.challengereward.reward2.Visible = false;
		l__challengesframe__32.challengereward.reward3.Visible = false;
		if v119.req_rewards[1] then
			l__challengesframe__32.challengereward.reward1.Visible = true;
			l__challengesframe__32.challengereward.reward1.Text = v125(v119.req_rewards[1]);
		end;
		if v119.req_rewards[2] then
			l__challengesframe__32.challengereward.reward2.Visible = true;
			l__challengesframe__32.challengereward.reward2.Text = v125(v119.req_rewards[2]);
		end;
		if v119.req_rewards[3] then
			l__challengesframe__32.challengereward.reward3.Visible = true;
			l__challengesframe__32.challengereward.reward3.Text = v125(v119.req_rewards[3]);
		end;
	end);
	v120.Position = UDim2.new(0.5, 0, 0, -200 + 110 * #l__challengesframe__32.selectionlist:GetChildren());
	v120.Visible = true;
	v120.Parent = l__challengesframe__32.selectionlist;
end;
local function v128()
	u34(l__game__15.ReplicatedStorage.challenges.start);
	for v129, v130 in ipairs(l__game__15.ReplicatedStorage.challenges:GetChildren()) do
		if v130.Name ~= "start" and string.sub(v130.Name, 1, 6) ~= "master" then
			u34(v130);
		end;
	end;
	for v131, v132 in ipairs(l__game__15.ReplicatedStorage.challenges:GetChildren()) do
		if string.sub(v132.Name, 1, 6) == "master" then
			u34(v132);
		end;
	end;
end;
v128();
local u35 = require(l__workspace__9.ServerStuff.Statistics.AUX_STATISTICS);
local l__auxframe__36 = l__Parent__8.auxframe;
local u37 = true;
local function v133(p15)
	local v134 = u35[p15];
	local v135 = l__auxframe__36.selectionlist.ex:Clone();
	v135.Name = p15;
	v135.auxname.Text = v134.name;
	v135.auxdesc.Text = "'" .. v134.desc .. "'";
	v135.auxuses.Text = "Uses per night: " .. tostring(v134.use_per_night);
	v135.manu.Text = "Designer: " .. v134.manu;
	v135.subtext.Text = v134.subtext;
	local v136 = nil;
	if v134.locked ~= false and l__game__15.ReplicatedStorage.challenges:FindFirstChild(v134.locked) then
		local v137 = require(l__game__15.ReplicatedStorage.challenges:FindFirstChild(v134.locked));
		if u5.Trackers then
			if u5.Trackers[v137.req] == nil then
				v136 = v137.name;
			elseif u5.Trackers[v137.req] < v137.reqamount then
				v136 = v137.name;
			end;
		end;
	end;
	if v136 == nil then
		if l__game__15.ReplicatedStorage.auxlobby:FindFirstChild(p15) then
			local v138 = l__game__15.ReplicatedStorage.auxlobby:FindFirstChild(p15):Clone();
			v138.Parent = v135.preview;
			local v139 = Instance.new("Camera");
			v139.Parent = l__loadoutframe__9.previewFrame;
			v135.preview.CurrentCamera = v139;
			v139.CFrame = v138.campoint.CFrame;
		end;
		v135.MouseButton1Click:connect(function()
			if u37 == false or v135.BackgroundColor3 == Color3.new(1, 1, 1) then
				return;
			end;
			for v140, v141 in ipairs(l__auxframe__36.selectionlist:GetChildren()) do
				if v141.Name ~= "bg" and v141.Name ~= "ex" and v141.locked_image.Visible == false then
					v141.BackgroundColor3 = Color3.new(0, 0, 0);
				end;
			end;
			v135.BackgroundColor3 = Color3.new(1, 1, 1);
			if l__workspace__9.ServerStuff.changeStats:InvokeServer("changeaux", p15) then
				u37 = false;
				u5 = nil;
				while true do
					u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
					l__RenderStepped__2:wait();
					if u5 ~= nil then
						break;
					end;				
				end;
				u37 = true;
				local v142 = l__game__15.ReplicatedStorage.soundLibrary.general_ui.aux_equip:Clone();
				v142.Parent = l__workspace__9.CurrentCamera;
				l__game__15:GetService("Debris"):AddItem(v142, 2);
				v142:Play();
			end;
		end);
		if u5.AuxUsing == p15 then
			v135.BackgroundColor3 = Color3.new(1, 1, 1);
		end;
	else
		v135.auxname.TextColor3 = Color3.fromRGB(170, 19, 19);
		v135.auxname.Text = "[EQUIPMENT LOCKED]";
		v135.locked_image.Visible = true;
		v135.auxuses.Text = "Unlock with Challenge: " .. v136;
		v135.auxdesc.Text = "";
		v135.manu.Text = "";
		v135.subtext.Text = "";
	end;
	v135.Position = UDim2.new(0.5, 0, 0, -430 + 220 * #l__auxframe__36.selectionlist:GetChildren());
	v135.Visible = true;
	v135.Parent = l__auxframe__36.selectionlist;
end;
v133("resp");
for v143, v144 in pairs(u35) do
	if v143 ~= "resp" and v144.locked == false then
		v133(v143);
	end;
end;
for v145, v146 in pairs(u35) do
	if v146.locked ~= false and l__game__15.ReplicatedStorage.challenges:FindFirstChild(v146.locked) then
		local v147 = require(l__game__15.ReplicatedStorage.challenges:FindFirstChild(v146.locked));
		if u5.Trackers and u5.Trackers[v147.req] and v147.reqamount <= u5.Trackers[v147.req] then
			v133(v145);
		end;
	end;
end;
for v148, v149 in pairs(u35) do
	if v149.locked ~= false and l__game__15.ReplicatedStorage.challenges:FindFirstChild(v149.locked) then
		local v150 = require(l__game__15.ReplicatedStorage.challenges:FindFirstChild(v149.locked));
		if u5.Trackers then
			if u5.Trackers[v150.req] == nil then
				v133(v148);
			elseif u5.Trackers[v150.req] < v150.reqamount then
				v133(v148);
			end;
		end;
	end;
end;
for v151, v152 in pairs(l__settingsmenu__10:GetChildren()) do
	if v152.Name ~= "header" then
		if v152:FindFirstChild("numbased") then
			v152.back.MouseButton1Click:connect(function()
				if l__workspace__9.ServerStuff.changeStats:InvokeServer("changesetting", { v152.Name, -0.1 }) then
					v33();
				end;
			end);
			v152.forward.MouseButton1Click:connect(function()
				if l__workspace__9.ServerStuff.changeStats:InvokeServer("changesetting", { v152.Name, 0.1 }) then
					v33();
				end;
			end);
		else
			v152.button.MouseButton1Click:connect(function()
				if l__workspace__9.ServerStuff.changeStats:InvokeServer("changesetting", v152.Name) then
					v33();
				end;
			end);
		end;
	end;
end;
for v153, v154 in ipairs(l__Parent__8:GetChildren()) do
	if v154:IsA("TextButton") then
		local u38 = false;
		local u39 = false;
		local u40 = l__home__30;
		v154.MouseButton1Click:connect(function()
			if u38 == true then
				return;
			end;
			if l__Parent__8:FindFirstChild(v154.Name .. "frame") then
				l__perksframe__24.details.Visible = false;
				for v155, v156 in ipairs(l__Parent__8:GetChildren()) do
					if v156:IsA("Frame") and v156.Name ~= "homeframe" then
						v156.Visible = false;
					end;
				end;
				l__Parent__8:FindFirstChild(v154.Name .. "frame").Visible = true;
				if v154.Name ~= "home" then
					for v157, v158 in ipairs(l__Parent__8:GetChildren()) do
						if v158:IsA("TextButton") then
							if v158.Name == "home" then
								v158.Visible = true;
							else
								v158.Visible = false;
							end;
						end;
					end;
					l__Parent__8.homeframe.scroll.Visible = false;
					l__Parent__8.homeframe.changetitle.Visible = false;
					if u5.Level < 100 then
						l__Parent__8.homeframe.pledgebutton.Visible = false;
					end;
				end;
				local v159 = l__game__15.ReplicatedStorage.soundLibrary.AGENT.menu:Clone();
				v159.Parent = l__workspace__9.CurrentCamera;
				l__game__15:GetService("Debris"):AddItem(v159, 2);
				v159:Play();
				if v154.Name == "home" then
					if u5.Level >= 100 then
						l__Parent__8.homeframe.pledgebutton.Visible = true;
					end;
					l__Parent__8.homeframe.changetitle.Visible = true;
					for v160, v161 in ipairs(l__Parent__8:GetChildren()) do
						if v161:IsA("TextButton") and v161.Name ~= "home" then
							v161.Visible = true;
						end;
					end;
					if u5.Prestige <= 1 then
						l__Parent__8.quarter.Visible = false;
					end;
					v154.Visible = false;
					u17();
					if u39 == true then
						u39 = false;
						l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency = 0;
						spawn(function()
							for v162 = 1, 60 do
								l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency = l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency + 0.01666666666;
								l__RenderStepped__2:Wait();
							end;
							l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency = 1;
						end);
						u40 = v29.home;
						l__workspace__9.CurrentCamera.CFrame = v29.home;
						return;
					end;
				else
					if v154.Name == "settings" then
						v33();
						return;
					end;
					if v154.Name == "perks" then
						u26();
						return;
					end;
					if v154.Name == "quarter" then
						u39 = true;
						l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency = 0;
						spawn(function()
							for v163 = 1, 60 do
								l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency = l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency + 0.01666666666;
								l__RenderStepped__2:Wait();
							end;
							l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency = 1;
						end);
						u40 = v29.quarter;
						l__workspace__9.CurrentCamera.CFrame = v29.quarter;
					end;
				end;
			end;
		end);
	end;
end;
local l__quarterframe__41 = l__Parent__8.quarterframe;
local u42 = false;
local u43 = nil;
local function v164(p16, p17)
	local v165 = l__quarterframe__41.scroll.ex:Clone();
	v165.Name = p16.name;
	v165.itemprice.Text = p16.cost .. " Bonds";
	v165.Visible = true;
	v165.Parent = l__quarterframe__41.scroll;
	v165.Position = p17;
	local v166 = nil;
	if p16.typ == "cos" then
		for v167, v168 in pairs(v16[1]) do
			if v168[p16.param] then
				v166 = v168[p16.param];
			end;
		end;
		if u5.CosmeticInventory[p16.param] then
			v165.doesntown.Visible = false;
		end;
		v165.itemtitle.Text = v166.name;
		if l__game__15.ReplicatedStorage.skins.thirdperson:FindFirstChild(p16.param) then
			local v169 = nil;
			local v170 = l__game__15.ReplicatedStorage.skins.thirdperson:FindFirstChild(p16.param):Clone();
			if v170:FindFirstChild("Head") ~= nil then
				v169 = v170:FindFirstChild("Head");
			end;
			if v170:FindFirstChild("Torso") ~= nil then
				v169 = v170:FindFirstChild("Torso");
			end;
			if v170:FindFirstChild("Left Leg") ~= nil then
				v169 = v170:FindFirstChild("Left Leg");
			end;
			if v169 ~= nil then
				v170.Parent = v165.preview;
				local v171 = Instance.new("Camera");
				v171.Parent = v165.preview;
				v165.preview.CurrentCamera = v171;
				local v172 = CFrame.new(0, 0, 0);
				if v169.Name == "Left Leg" then
					v172 = CFrame.new(0.55, 0, 2);
				end;
				if v169.Name == "Torso" then
					v172 = CFrame.new(0, 0, -2);
				end;
				if v169.Name ~= "Left Leg" and v169.Name ~= "Torso" then
					v172 = CFrame.new(0, 0, 3);
				end;
				v171.CFrame = v169.CFrame * CFrame.new(0, 0, -5) * v172 * CFrame.Angles(0, math.rad(180), 0);
			end;
		end;
	elseif p16.typ == "skin" then
		if u5.WeaponSkins[p16.param[1]] then
			v165.doesntown.Visible = false;
		end;
		v166 = u1[p16.param[2]];
		v165.itemtitle.Text = p16.name;
		if l__game__15.ReplicatedStorage.Weapons:FindFirstChild(p16.param[1]) then
			local v173 = l__game__15.ReplicatedStorage.Weapons:FindFirstChild(p16.param[1]):Clone();
			local l__JointGrip__174 = v173.JointGrip;
			if l__JointGrip__174 ~= nil then
				v173.Parent = v165.preview;
				local v175 = Instance.new("Camera");
				v175.Parent = v165.preview;
				v165.preview.CurrentCamera = v175;
				v175.CFrame = l__JointGrip__174.CFrame * CFrame.new(0, 0, -4) * CFrame.Angles(0, math.rad(180), 0);
			end;
		end;
	elseif p16.typ == "exotic" then
		if u5.OwnedExotics[p16.param[1]] then
			v165.doesntown.Visible = false;
		end;
		v165.itemtitle.Text = p16.name;
		if l__game__15.ReplicatedStorage.Weapons:FindFirstChild(p16.param[1]) then
			local v176 = l__game__15.ReplicatedStorage.Weapons:FindFirstChild(p16.param[1]):Clone();
			local l__JointGrip__177 = v176.JointGrip;
			if l__JointGrip__177 ~= nil then
				v176.Parent = v165.preview;
				local v178 = Instance.new("Camera");
				v178.Parent = v165.preview;
				v165.preview.CurrentCamera = v178;
				v178.CFrame = l__JointGrip__177.CFrame * CFrame.new(0, 0, -3) * CFrame.Angles(0, math.rad(180), 0);
			end;
		end;
	end;
	v165.MouseButton1Click:connect(function()
		if v165.BackgroundColor3 == Color3.new(1, 1, 1) or u42 == true then
			return;
		end;
		for v179, v180 in ipairs(l__quarterframe__41.scroll:GetChildren()) do
			if v180.Name ~= "ex" then
				v180.doesntown.ImageTransparency = 0.1;
				v180.BackgroundColor3 = Color3.new(0, 0, 0);
				v180.itemtitle.BackgroundColor3 = Color3.new(0, 0, 0);
			end;
		end;
		u43 = p16;
		v165.doesntown.ImageTransparency = 0.9;
		v165.BackgroundColor3 = Color3.new(1, 1, 1);
		v165.itemtitle.BackgroundColor3 = Color3.new(1, 1, 1);
		l__quarterframe__41.mainframe.Visible = true;
		l__quarterframe__41.mainframe.desc.Text = p16.desc;
		if p16.typ == "cos" then
			if v166 then
				l__quarterframe__41.mainframe.desc.Text = l__quarterframe__41.mainframe.desc.Text;
				l__quarterframe__41.mainframe.toplabel.Text = v166.name;
				if u5.CosmeticInventory[p16.param] then
					l__quarterframe__41.mainframe.purchase.Visible = false;
					return;
				else
					l__quarterframe__41.mainframe.purchase.Visible = true;
					l__quarterframe__41.mainframe.purchase.Text = "PURCHASE";
					return;
				end;
			end;
		elseif p16.typ == "skin" then
			if v166 then
				l__quarterframe__41.mainframe.desc.Text = l__quarterframe__41.mainframe.desc.Text .. "\n\nReplaces " .. v166.name;
				l__quarterframe__41.mainframe.toplabel.Text = p16.name;
				if u5.WeaponSkins[p16.param[1]] then
					if u5.EquippedSkins[p16.param[2]] then
						l__quarterframe__41.mainframe.purchase.Visible = true;
						l__quarterframe__41.mainframe.purchase.Text = "DISABLE";
						return;
					else
						l__quarterframe__41.mainframe.purchase.Visible = true;
						l__quarterframe__41.mainframe.purchase.Text = "ENABLE";
						return;
					end;
				else
					l__quarterframe__41.mainframe.purchase.Visible = true;
					l__quarterframe__41.mainframe.purchase.Text = "PURCHASE";
					return;
				end;
			end;
		elseif p16.typ == "exotic" then
			l__quarterframe__41.mainframe.desc.Text = l__quarterframe__41.mainframe.desc.Text .. "\n\nExotic - replaces Fists.";
			l__quarterframe__41.mainframe.toplabel.Text = p16.name;
			if u5.OwnedExotics[p16.param[1]] then
				if u5.Exotic == p16.param[1] then
					l__quarterframe__41.mainframe.purchase.Visible = true;
					l__quarterframe__41.mainframe.purchase.Text = "UNEQUIP";
					return;
				else
					l__quarterframe__41.mainframe.purchase.Visible = true;
					l__quarterframe__41.mainframe.purchase.Text = "EQUIP";
					return;
				end;
			else
				l__quarterframe__41.mainframe.purchase.Visible = true;
				l__quarterframe__41.mainframe.purchase.Text = "PURCHASE";
			end;
		end;
	end);
	return v165;
end;
local v181 = 0;
local v182 = 0;
for v183, v184 in pairs(v17) do
	v164(v184, UDim2.new(0.1 + 0.2 * v181, 0, 0 + 0.05 * v182, 10));
	v181 = v181 + 1;
	if v181 >= 5 then
		v181 = 0;
		v182 = v182 + 1;
	end;
end;
l__quarterframe__41.mainframe.purchase.MouseButton1Click:connect(function()
	if l__quarterframe__41.mainframe.purchase.Visible == false or u42 == true or u43 == nil then
		return;
	end;
	if u5.Bonds < u43.cost and l__quarterframe__41.mainframe.purchase.Text == "PURCHASE" then
		return;
	end;
	u42 = true;
	if l__quarterframe__41.mainframe.purchase.Text == "PURCHASE" then
		if l__workspace__9.ServerStuff.changeStats:InvokeServer("purchasebonds", u43) then
			u5 = nil;
			while true do
				u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
				l__RenderStepped__2:wait();
				if u5 ~= nil then
					break;
				end;			
			end;
			u17();
			local v185 = l__game__15.ReplicatedStorage.soundLibrary.general_ui.purchase_bonds:Clone();
			v185.Parent = l__workspace__9.CurrentCamera;
			l__game__15:GetService("Debris"):AddItem(v185, 5);
			v185:Play();
			l__quarterframe__41.mainframe.purchase.Visible = false;
			if l__quarterframe__41.scroll:FindFirstChild(u43.name) then
				l__quarterframe__41.scroll:FindFirstChild(u43.name).doesntown.Visible = false;
			end;
			if u43.typ == "skin" then
				if u5.EquippedSkins[u43.param[2]] then
					l__quarterframe__41.mainframe.purchase.Visible = true;
					l__quarterframe__41.mainframe.purchase.Text = "DISABLE";
				else
					l__quarterframe__41.mainframe.purchase.Visible = true;
					l__quarterframe__41.mainframe.purchase.Text = "ENABLE";
				end;
			elseif u43.typ == "exotic" then
				if u5.Exotic[u43.param[1]] then
					l__quarterframe__41.mainframe.purchase.Visible = true;
					l__quarterframe__41.mainframe.purchase.Text = "UNEQUIP";
				else
					l__quarterframe__41.mainframe.purchase.Visible = true;
					l__quarterframe__41.mainframe.purchase.Text = "EQUIP";
				end;
			end;
		end;
	elseif l__quarterframe__41.mainframe.purchase.Text == "ENABLE" or l__quarterframe__41.mainframe.purchase.Text == "DISABLE" then
		if l__workspace__9.ServerStuff.changeStats:InvokeServer(string.lower(l__quarterframe__41.mainframe.purchase.Text) .. "skin", u43) then
			u5 = nil;
			while true do
				u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
				l__RenderStepped__2:wait();
				if u5 ~= nil then
					break;
				end;			
			end;
			u17();
			local v186 = l__game__15.ReplicatedStorage.soundLibrary.general_ui.skin_equip:Clone();
			v186.Parent = l__workspace__9.CurrentCamera;
			l__game__15:GetService("Debris"):AddItem(v186, 5);
			v186:Play();
			l__quarterframe__41.mainframe.purchase.Visible = false;
		end;
	elseif (l__quarterframe__41.mainframe.purchase.Text == "EQUIP" or l__quarterframe__41.mainframe.purchase.Text == "UNEQUIP") and l__workspace__9.ServerStuff.changeStats:InvokeServer(string.lower(l__quarterframe__41.mainframe.purchase.Text) .. "exotic", u43) then
		u5 = nil;
		while true do
			u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
			l__RenderStepped__2:wait();
			if u5 ~= nil then
				break;
			end;		
		end;
		u17();
		local v187 = l__game__15.ReplicatedStorage.soundLibrary.general_ui.exotic_equip:Clone();
		v187.Parent = l__workspace__9.CurrentCamera;
		l__game__15:GetService("Debris"):AddItem(v187, 5);
		v187:Play();
		l__quarterframe__41.mainframe.purchase.Visible = false;
	end;
	u42 = false;
end);
l__Parent__8.play.MouseButton1Click:connect(function()
	if u3 == true then
		return;
	end;
	pcall(function()
		l__game__15:GetService("RunService"):UnbindFromRenderStep("rsloop");
	end);
	u3 = true;
	spawn(function()
		while true do
			l__clientmusic__11.Volume = l__clientmusic__11.Volume - 0.05;
			l__RenderStepped__2:wait();
			if l__clientmusic__11.Volume <= 0 then
				break;
			end;		
		end;
		l__clientmusic__11:Stop();
	end);
	while true do
		l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency = l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency - 0.04;
		l__RenderStepped__2:wait();
		if l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency <= 0 then
			break;
		end;	
	end;
	l__LocalPlayer__7.PlayerGui.fadetoblack.frame.BackgroundTransparency = 0;
	l__workspace__9.ServerStuff.spawnPlayer:FireServer("hubbing");
end);
local u44 = false;
local function u45(p18, p19)
	if p18 == l__game__15.ReplicatedStorage.soundLibrary.songs.menu.SoundId or p18 == l__game__15.ReplicatedStorage.soundLibrary.songs.prestige_song.SoundId then
		l__clientmusic__11.Looped = true;
	else
		l__clientmusic__11.Looped = false;
	end;
	while true do
		l__clientmusic__11.Volume = l__clientmusic__11.Volume - 0.03;
		l__RenderStepped__2:wait();
		if l__clientmusic__11.Volume <= 0 then
			break;
		end;	
	end;
	l__clientmusic__11:Stop();
	l__clientmusic__11.SoundId = p18;
	l__clientmusic__11:Play();
	while true do
		l__clientmusic__11.Volume = l__clientmusic__11.Volume + 0.03;
		l__RenderStepped__2:wait();
		if l__clientmusic__11.Volume >= 0.5 then
			break;
		end;	
	end;
	l__clientmusic__11.Volume = 0.5;
end;
local l__prestige__46 = l__Parent__8.prestige;
l__homeframe__4.pledgebutton.MouseButton1Click:connect(function()
	if u3 == true then
		return;
	end;
	if u44 == true then
		return;
	end;
	if u5.Level ~= 100 then
		l__homeframe__4.pledgebutton.Visible = false;
		return;
	end;
	u45(l__game__15.ReplicatedStorage.soundLibrary.songs.prestige_song.SoundId);
	u44 = true;
	l__prestige__46.Visible = true;
	while true do
		l__prestige__46.blackoverframe.BackgroundTransparency = l__prestige__46.blackoverframe.BackgroundTransparency - 0.05;
		l__RenderStepped__2:wait();
		if l__prestige__46.blackoverframe.BackgroundTransparency <= 0 then
			break;
		end;	
	end;
	local v188 = { "You have shown loyalty to the cause, Agent.", "Such skills are an invaluable asset to us.", "That is why we are giving you this opportunity to become more than what you are now.", "Your experience will be lost, but you will gain access to what other Agents will not have.", "We will require a pledge of 10000 Odens.", "This action is not reversible." };
	if u5.Prestige ~= 1 then
		v188 = { "Commitment is a strong thing, Agent.", "You've proven you are willing to advance.", "You are given once more an opportunity to move up.", "Will you take it again?", "We will require a pledge of " .. 10000 * u5.Prestige .. " Odens.", "This action is not reversible." };
	end;
	local v189, v190, v191 = pairs(v188);
	while true do
		local v192, v193 = v189(v190, v191);
		if not v192 then
			break;
		end;
		l__prestige__46["text" .. v192].Text = v193;
		for v194 = 1, 100 do
			l__prestige__46["text" .. v192].TextTransparency = l__prestige__46["text" .. v192].TextTransparency - 0.01;
			l__RenderStepped__2:wait();
		end;
		l__prestige__46["text" .. v192].TextTransparency = 0;	
	end;
	for v195 = 1, 100 do
		l__prestige__46.confirmtext.TextTransparency = l__prestige__46.confirmtext.TextTransparency - 0.01;
		l__RenderStepped__2:wait();
	end;
	l__prestige__46.confirmtext.TextTransparency = 0;
	l__prestige__46.yesoption.Visible = true;
	l__prestige__46.nooption.Visible = true;
	for v196 = 1, 100 do
		l__prestige__46.yesoption.TextTransparency = l__prestige__46.yesoption.TextTransparency - 0.01;
		l__prestige__46.nooption.TextTransparency = l__prestige__46.nooption.TextTransparency - 0.01;
		l__RenderStepped__2:wait();
	end;
	l__prestige__46.yesoption.TextTransparency = 0;
	l__prestige__46.nooption.TextTransparency = 0;
end);
local function u47(p20)
	l__prestige__46.yesoption.Visible = false;
	l__prestige__46.nooption.Visible = false;
	l__prestige__46.hud.Visible = false;
	l__prestige__46.piece1.Visible = false;
	l__prestige__46.piece2.Visible = false;
	l__prestige__46.piece3.Visible = false;
	l__prestige__46.piece4.Visible = false;
	l__homeframe__4.pledgebutton.Visible = false;
	for v197, v198 in ipairs(l__prestige__46:GetChildren()) do
		if v198:IsA("TextButton") or v198:IsA("TextLabel") then
			v198.TextTransparency = 1;
		end;
	end;
	local v199 = l__game__15.ReplicatedStorage.soundLibrary.AGENT.menu:Clone();
	v199.Parent = l__workspace__9.CurrentCamera;
	l__game__15:GetService("Debris"):AddItem(v199, 2);
	v199:Play();
	if p20 == true then
		if l__workspace__9.ServerStuff.changeStats:InvokeServer("prestigeplayer") then
			u5 = nil;
			while true do
				u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
				l__RenderStepped__2:wait();
				if u5 ~= nil then
					break;
				end;			
			end;
			local v200 = l__game__15.ReplicatedStorage.soundLibrary.general_ui.echo_open:Clone();
			v200.Parent = l__workspace__9.CurrentCamera;
			l__game__15:GetService("Debris"):AddItem(v200, 2);
			v200:Play();
			local v201 = l__game__15.ReplicatedStorage.soundLibrary.gamemode.teamvictory:Clone();
			v201.Parent = l__workspace__9.CurrentCamera;
			l__game__15:GetService("Debris"):AddItem(v201, 5);
			v201:Play();
			l__prestige__46.blackoverframe.BackgroundTransparency = 1;
			l__prestige__46.hud.ImageTransparency = 0;
			l__prestige__46.piece1.ImageTransparency = 0;
			l__prestige__46.piece2.ImageTransparency = 0;
			l__prestige__46.piece3.ImageTransparency = 0;
			l__prestige__46.piece4.ImageTransparency = 0;
			l__prestige__46.hud.Visible = true;
			l__prestige__46.piece1.Visible = true;
			l__prestige__46.piece2.Visible = true;
			l__prestige__46.piece3.Visible = true;
			l__prestige__46.piece4.Visible = true;
			spawn(function()
				while true do
					l__prestige__46.piece1.ImageTransparency = l__prestige__46.piece1.ImageTransparency + 0.05;
					l__RenderStepped__2:wait();
					if l__prestige__46.piece1.ImageTransparency >= 1 then
						break;
					end;				
				end;
				l__prestige__46.piece1.ImageTransparency = 1;
				while true do
					l__prestige__46.piece2.ImageTransparency = l__prestige__46.piece2.ImageTransparency + 0.05;
					l__RenderStepped__2:wait();
					if l__prestige__46.piece2.ImageTransparency >= 1 then
						break;
					end;				
				end;
				l__prestige__46.piece2.ImageTransparency = 1;
				while true do
					l__prestige__46.piece3.ImageTransparency = l__prestige__46.piece3.ImageTransparency + 0.05;
					l__RenderStepped__2:wait();
					if l__prestige__46.piece3.ImageTransparency >= 1 then
						break;
					end;				
				end;
				l__prestige__46.piece3.ImageTransparency = 1;
				while true do
					l__prestige__46.piece4.ImageTransparency = l__prestige__46.piece4.ImageTransparency + 0.05;
					l__prestige__46.hud.ImageTransparency = l__prestige__46.hud.ImageTransparency + 0.05;
					l__RenderStepped__2:wait();
					if l__prestige__46.piece4.ImageTransparency >= 1 then
						break;
					end;				
				end;
				l__prestige__46.piece4.ImageTransparency = 1;
				l__prestige__46.hud.ImageTransparency = 1;
			end);
			for v202, v203 in ipairs(l__challengesframe__32.selectionlist:GetChildren()) do
				if v203.Name ~= "ex" and v203.Name ~= "bg" then
					v203:Destroy();
				end;
			end;
			l__challengesframe__32.challengereqs.Visible = false;
			l__challengesframe__32.challengefluff.Visible = false;
			l__challengesframe__32.challengereward.Visible = false;
			for v204, v205 in ipairs(l__classframe__28.availableperks:GetChildren()) do
				v205.bg.ImageColor3 = Color3.new(1, 1, 1);
				v205.icon.ImageColor3 = Color3.new(1, 1, 1);
			end;
			l__classframe__28.availableperks.survival.icon.ImageColor3 = Color3.fromRGB(229, 29, 29);
			l__classframe__28.availableperks.survival.bg.ImageColor3 = Color3.fromRGB(229, 29, 29);
			for v206, v207 in ipairs(l__classframe__28.availableperks:GetChildren()) do
				if v207.Name ~= "survival" then
					v207.lockedtext.Visible = true;
				end;
			end;
			v128();
			u31("survival");
			local v208 = u12(false, true);
			u17();
			u44 = false;
			l__homeframe__4.pledgebutton.Visible = false;
		end;
	else
		u44 = false;
		spawn(function()
			while true do
				l__prestige__46.blackoverframe.BackgroundTransparency = l__prestige__46.blackoverframe.BackgroundTransparency + 0.05;
				l__RenderStepped__2:wait();
				if l__prestige__46.blackoverframe.BackgroundTransparency >= 1 then
					break;
				end;			
			end;
			l__prestige__46.blackoverframe.BackgroundTransparency = 1;
			l__homeframe__4.pledgebutton.Visible = false;
		end);
	end;
	l__homeframe__4.pledgebutton.Visible = false;
	u45(l__game__15.ReplicatedStorage.soundLibrary.songs.menu.SoundId);
end;
l__prestige__46.yesoption.MouseButton1Click:Connect(function()
	if l__prestige__46.yesoption.Visible == true and l__prestige__46.yesoption.TextTransparency == 0 then
		if not (10000 * u5.Prestige <= u5.Tokens) then
			u47(false);
			return;
		end;
	else
		return;
	end;
	u47(true);
end);
l__prestige__46.nooption.MouseButton1Click:Connect(function()
	if l__prestige__46.nooption.Visible == true and l__prestige__46.nooption.TextTransparency == 0 then
		u47(false);
	end;
end);
local l__colourchange__209 = l__loadoutframe__9.colourchange;
local v210 = { Color3.new(0.2, 0.2, 0.2), Color3.new(0.8, 0.8, 0.8), Color3.new(0.8, 0.1, 0.1), Color3.new(0.1, 0.7, 0.1), Color3.new(0.1, 0.1, 0.7), Color3.new(0.5, 0.2, 0.5), Color3.new(0.4, 0.4, 0.2), Color3.new(0.2, 0.7, 0.7), Color3.new(0.3, 0.6, 0.3), Color3.new(0.8, 0.4, 0.4), Color3.new(0.85, 0.05, 0.75), Color3.new(0.8, 0.8, 0.2) };
if u5.Level >= 100 then
	table.insert(v210, Color3.new(0.9372549019607843, 0.7215686274509804, 0.2196078431372549));
end;
local function v211(p21, p22, p23)
	p21.MouseButton1Click:Connect(function()
		if u16 == true then
			return;
		end;
		u16 = true;
		local v212 = "original";
		if p22 ~= "original" then
			v212 = { p22.R, p22.G, p22.B };
		end;
		if u13 == "hair" then
			u13 = "Helmet";
		end;
		if u13 == "hair" then
			u13 = "Helmet";
		end;
		if l__workspace__9.ServerStuff.changeStats:InvokeServer(p23, { v212, u13 }) then
			u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
			local v213 = u12(false, true);
			u16 = false;
		end;
	end);
end;
for v214, v215 in ipairs(v210) do
	local v216 = l__colourchange__209.colorA.original:Clone();
	v216.Name = v214;
	v216.BackgroundColor3 = v215;
	v216.Visible = true;
	v216.Text = "";
	v216.Position = UDim2.new(0.5, 0, 0, 50 * #l__colourchange__209.colorA:GetChildren());
	v216.Parent = l__colourchange__209.colorA;
	v211(v216, v215, "changecolorA");
	local v217 = v216:Clone();
	v217.Parent = l__colourchange__209.colorB;
	v211(v217, v215, "changecolorB");
end;
v211(l__colourchange__209.colorA.original, "original", "changecolorA");
v211(l__colourchange__209.colorB.original, "original", "changecolorB");
u17();
u12(false, true);
local function v218(p24, p25)
	if p25 == true then
		p24.SliceScale = 2;
		spawn(function()
			while true do
				p24.ImageTransparency = p24.ImageTransparency - 0.1;
				if p24.Parent:FindFirstChild("gradientB") then
					p24.Parent:FindFirstChild("gradientB").ImageTransparency = p24.ImageTransparency;
				end;
				l__RenderStepped__2:wait();
				if p24.ImageTransparency <= 0 then
					break;
				end;
				if p24.SliceScale ~= 2 then
					break;
				end;			
			end;
		end);
		return;
	end;
	p24.SliceScale = 1;
	spawn(function()
		while true do
			p24.ImageTransparency = p24.ImageTransparency + 0.1;
			if p24.Parent:FindFirstChild("gradientB") then
				p24.Parent:FindFirstChild("gradientB").ImageTransparency = p24.ImageTransparency;
			end;
			l__RenderStepped__2:wait();
			if p24.ImageTransparency >= 1 then
				break;
			end;
			if p24.SliceScale ~= 1 then
				break;
			end;		
		end;
	end);
end;
for v219, v220 in ipairs(l__Parent__8:GetChildren()) do
	if v220:IsA("TextButton") and v220:FindFirstChild("gradient") then
		v220.MouseEnter:connect(function()
			v218(v220.gradient, true);
		end);
		v220.MouseLeave:connect(function()
			v218(v220.gradient, false);
		end);
	end;
end;
local v221 = { "As iron sharpens iron, so one person sharpens another.", "As each has received a gift, use it to serve one another, as good stewards of God's varied grace.", "A Song of Ascents. Of David. Behold, how good and pleasant it is when brothers dwell in unity!", "Bear one another's burdens, and so fulfill the law of Christ.", "Two are better than one, because they have a good reward for their toil.", "And they devoted themselves to the apostles' teaching and the fellowship, to the breaking of bread and the prayers.", "We who are strong have an obligation to bear with the failings of the weak, and not to please ourselves.", "Behold, how good and how pleasant it is for brethren to dwell together in unity!", "Iron sharpeneth iron; so a man sharpeneth the countenance of his friend.", "We then, as workers together with him, beseech you also that ye receive not the grace of God in vain.", "Fulfil ye my joy, that ye be likeminded, having the same love, being of one accord, of one mind.", "And let us not be weary in well doing: for in due season we shall reap, if we faint not.", "Seest thou how faith wrought with his works, and by works was faith made perfect?", "Where no counsel is, the people fall: but in the multitude of counsellors there is safety.", "Then shall two be in the field; the one shall be taken, and the other left." };
l__Parent__8.gamesubtitle.Text = "'" .. v221[math.random(1, #v221)] .. "'";
local u48 = true;
local function u49()
	for v222, v223 in ipairs(l__Parent__8.homeframe.scroll:GetChildren()) do
		if v223.Name ~= "ex" and v223.Name ~= "bg" then
			v223:Destroy();
		end;
	end;
	for v224, v225 in pairs(u5.Titles) do
		local l__title_designation__226 = v11.title_designation;
		if l__title_designation__226[v224] ~= nil then
			local v227 = l__Parent__8.homeframe.scroll.ex:Clone();
			v227.Name = v224;
			v227.Visible = true;
			v227.Text = l__title_designation__226[v224];
			v227.Position = UDim2.new(0, 5, 0, -95 + 50 * #l__Parent__8.homeframe.scroll:GetChildren());
			if u5.TitleUsing == v224 then
				v227.BackgroundColor3 = Color3.new(1, 1, 1);
				v227.TextColor3 = Color3.new(0, 0, 0);
			end;
			v227.MouseButton1Click:connect(function()
				l__Parent__8.homeframe.scroll.Visible = false;
				if u5.TitleUsing ~= v224 and l__workspace__9.ServerStuff.changeStats:InvokeServer("changetitle", v224) then
					u48 = false;
					u5 = nil;
					while true do
						u5 = l__workspace__9.ServerStuff.retrieveStats:InvokeServer();
						l__RenderStepped__2:wait();
						if u5 ~= nil then
							break;
						end;					
					end;
					u48 = true;
				end;
			end);
			v227.Parent = l__Parent__8.homeframe.scroll;
		end;
	end;
end;
l__Parent__8.homeframe.changetitle.MouseButton1Click:connect(function()
	if l__Parent__8.homeframe.scroll.Visible == true then
		l__Parent__8.homeframe.scroll.Visible = false;
		return;
	end;
	if u48 == false then
		return;
	end;
	u49();
	l__Parent__8.homeframe.scroll.Visible = true;
end);
spawn(function()
	u45(l__game__15.ReplicatedStorage.soundLibrary.songs.menu.SoundId);
end);
local v228 = tick();
local function v229()
	local v230 = { l__workspace__9.PlayerA, l__workspace__9.PlayerB, l__workspace__9.PlayerC, l__workspace__9.PlayerD };
	local v231, v232, v233 = ipairs(v230);
	while true do
		local v234, v235 = v231(v232, v233);
		if not v234 then
			break;
		end;
		if v235.Torso.Position.y > -400 then
			v235.HumanoidRootPart.CFrame = v235.HumanoidRootPart.CFrame * CFrame.new(0, -100, 0);
		end;
		if v235:FindFirstChild("taken") then
			v235:FindFirstChild("taken"):Destroy();
		end;
		if v235.Torso:FindFirstChild("perkcos") then
			v235.Torso:FindFirstChild("perkcos"):Destroy();
		end;	
	end;
	local v236, v237, v238 = ipairs(l__game__15.Players:GetPlayers());
	while true do
		local v239, v240 = v236(v237, v238);
		if not v239 then
			break;
		end;
		for v241, v242 in ipairs(v230) do
			if v240 ~= l__LocalPlayer__7 and v242:FindFirstChild("taken") == nil then
				local v243 = Instance.new("StringValue");
				v243.Name = "taken";
				v243.Value = v240.Name;
				v243.Parent = v242;
				local v244 = l__workspace__9.ServerStuff.getCosmetics:InvokeServer(v240.Name);
				while true do
					l__RenderStepped__2:wait();
					if v244 ~= nil then
						break;
					end;				
				end;
				local v245 = v11.applycosmetic(v242, v244, false, "Fists", v244.CustomColours);
				if l__game__15.ReplicatedStorage.perk_cosmetics:FindFirstChild(v244.Class) then
					local v246 = l__game__15.ReplicatedStorage.perk_cosmetics:FindFirstChild(v244.Class):Clone();
					v246.Name = "perkcos";
					v246.CFrame = v242.Torso.CFrame;
					v246.Parent = v242.Torso;
					local v247 = Instance.new("Weld");
					v247.Part0 = v246;
					v247.Part1 = v242.Torso;
					v247.Parent = v246;
				end;
				local v248 = l__game__15.ReplicatedStorage.animationSets.idleAnims:FindFirstChild(v242.Name);
				if v248 == nil then
					v248 = l__game__15.ReplicatedStorage.animationSets.Fists;
				end;
				v242.Humanoid:LoadAnimation(v248):Play(0, 1, 0.1);
				v242.HumanoidRootPart.CFrame = v242.HumanoidRootPart.CFrame * CFrame.new(0, 100, 0);
				v242.Parent = l__workspace__9;
				break;
			end;
		end;	
	end;
end;
v229();
local u50 = tick() - 1;
local u51 = false;
local u52 = v228;
l__game__15:GetService("RunService"):BindToRenderStep("rsloop", 250, function()
	l__Parent__8.playerswaiting.Text = "Agents Ready: " .. tostring(#l__workspace__9.playersWaiting:GetChildren());
	l__Parent__8.playersalive.Text = "Agents Alive: " .. tostring(#l__workspace__9.activePlayers:GetChildren());
	if u3 == false then
		local v249 = CFrame.new(0, 0, 0);
		if math.random(5, 10) <= tick() - u50 then
			u50 = tick();
		end;
		if tick() - u50 <= 0.3 then
			v249 = CFrame.new(math.random(-10, 10) / 10, math.random(-10, 10) / 10, 0);
		end;
		if u51 == true then
			v249 = CFrame.new(0, 0, 0);
		end;
		l__workspace__9.CurrentCamera.CFrame = l__workspace__9.CurrentCamera.CFrame:Lerp(l__home__30 * v249 * CFrame.Angles(math.rad(math.cos(time() * 5) / 5), math.rad(math.sin(time() * 5) / 5), 0), 0.05);
		if tick() - u52 > 10 then
			u52 = tick();
			v229();
		end;
	end;
end);
l__workspace__9.ServerStuff.alertPlay.OnClientEvent:Connect(function()

end);
l__LocalPlayer__7:WaitForChild("PlayerGui"):SetTopbarTransparency(0);
if u5.NewPlayer == true then
	local l__tutorial__250 = l__Parent__8.tutorial;
	l__tutorial__250.Visible = false;
	local v251 = { { "Introduction", "Greetings Contestant!\n\n Welcome to Survival Of the Fittest!\nThis is a gameshow where you and other Contestants battle it out in our custom built arena in (almost) one on one deadly melee combat to the death!\n\nAs you're the new fresh meat around here, Ulacylon has chosen me to provide you with this nifty beginner's guide to get you familiarised with your new home!", UDim2.new(0.5, 0, 0.3, 0), false }, { "The Hub", "This is The Hub, where you and all other waiting Contestants can chill about in the cafeteria!\nYou may participate in fist fights in Duelling Arena for warm up or Spectate an on-going match with the computer terminals!\n\nLovely place, just don't make a mess of it!", UDim2.new(0.3, 0, 0.15, 0), false }, { "Readying Up", "Pressing this button will ready you up for your match!\nRemember that it must be >RED< for you to be marked as Ready!\nMatches are Elimination based so if you are eliminated, you must sit out until the next match!\n\nTry not to die!", UDim2.new(0.5, 0, 0.18, 0), false }, { "The Home", "Selecting this button will bring you to your home screen!\nHere you can view your character in all their glory as well as check your Reputation amongst the crowds, your endearing Fans waiting for your next match and your Tokens which you can use to purchase cosmetics!", UDim2.new(0.675, 0, 0, 90), true }, { "Fancy Loadouts", "Picking this button will bring you to the loadout menu where you may change your preferred weapon to be spawned in Arsenal Lockers!\nUlacylon has provided you with four in your initial stash but there are many primary weapons to collect! As long as you pick them up once, they will be forever added to your stash!\nYou may also change what you receive in Air Drops, special drones that deliver very powerful items!\nLastly you may customise your character with a variety of Cosmetics! Stand out from the crowd or stick with your tried and tested overalls!", UDim2.new(0.775, 0, 0, 90), true }, { "Tweak Settings", "Clicking on this button will bring you to the settings menu where you may tweak your.. well.. settings!\nChange your sensitivity, mute background music or hide your name, configure yourself to what is most comfortable for you!", UDim2.new(0.9, 0, 0, 90), true }, { "The Most Important!", "This is the most important menu so be sure to pay it a visit after you're done here!\n\nThe Help Menu will provide you with detailed information about the intricacies of the melee combat, stats of various items you may find, gameplay information and all sorts of secrets without needing to resort to an external webpage!\n\nRead and understand how the core combat works or face a very slow and painful death amongst better Contestants!", UDim2.new(0.65, 0, 0, 140), true }, { "Your History", "Choosing this button will bring you to your life history as a Contestant!\n\nThere may not be much now, but surely in the future, you will build a great and prosperous career, so keep at it!\n\nAll your statistics will be documented here!", UDim2.new(0.75, 0, 0, 140), true }, { "Being Yourself", "Pushing this button will introduce you to our line up of top of the line Contestant Perks!\nThis is an important part of the games core combat, as you may select up to 3 perks that will change how you play the game!\nEverything is available to you, no need to collect anything or waste your time slaving away unlocking content that is core to the base game!\nExperiment and try to find what you like, whether you want to be heavy tanker, loading up on defensive perks or even a silent rogue, waiting for the perfect time to strike!\nIt's all up to you!", UDim2.new(0.85, 0, 0, 140), true }, { "Parting Words", "You've reached the end of the tour, congratulations!\n\nYou are not braindead!\n\nThis barely covers what else you may learn throughout your time here, the arena is not forgiving and you may die many times before standing amongst other better Contestants.\nBut that is the road you must take to improve! Do your research, read the Help Menu, find what perks or weapons suit you best, but most of all...\nHave fun, and don't die out there, Contestant!", UDim2.new(0.5, 0, 0.3, 0), false } };
	l__tutorial__250.box.skip.MouseButton1Click:connect(function()
		if l__tutorial__250.box.skip.Text == "SKIP" then
			l__tutorial__250:Destroy();
			return;
		end;
		local v252 = l__workspace__9.ServerStuff.changeStats:InvokeServer("tutorialdone");
		l__tutorial__250:Destroy();
	end);
	local u53 = 1;
	local function u54(p26)
		l__tutorial__250.box.skip.Text = "SKIP";
		l__tutorial__250.box.forward.Visible = true;
		l__tutorial__250.box.back.Visible = true;
		if u53 == 1 then
			l__tutorial__250.box.back.Visible = false;
		elseif #v251 <= u53 then
			l__tutorial__250.box.forward.Visible = false;
			l__tutorial__250.box.skip.Text = "END";
		end;
		l__tutorial__250.box.toplabel.Text = v251[p26][1];
		l__tutorial__250.box.main.Text = v251[p26][2];
		l__tutorial__250.box.Position = v251[p26][3];
		if v251[p26][4] then
			l__tutorial__250.highlight.Visible = true;
			return;
		end;
		l__tutorial__250.highlight.Visible = false;
	end;
	l__tutorial__250.box.back.MouseButton1Click:connect(function()
		if u53 ~= 1 then
			u53 = u53 - 1;
			u54(u53);
		end;
	end);
	l__tutorial__250.box.forward.MouseButton1Click:connect(function()
		if u53 ~= #v251 then
			u53 = u53 + 1;
			u54(u53);
		end;
	end);
	u54(1);
end;
l__game__15:GetService("LogService").MessageOut:connect(function(p27, p28)
	if l__game__15:GetService("RunService"):IsStudio() == true then
		return;
	end;
	if p28 == Enum.MessageType.MessageOutput then
		l__game__15.Players.LocalPlayer:Kick(filth[math.random(1, #filth)]);
	end;
end);
]]></ProtectedString></Properties></Item></Item><Item class="Folder" referent="RBX1552"><Properties><string name="Name">fadetoblack</string></Properties><Item class="LocalScript" referent="RBX1555"><Properties><string name="Name">lol</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

script.Parent.Enabled = true;
script:Destroy();
]]></ProtectedString></Properties></Item></Item><Item class="Folder" referent="RBX1564"><Properties><string name="Name">topbarkek</string></Properties><Item class="LocalScript" referent="RBX1567"><Properties><string name="Name">identifier</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[-- Decompiled with the Synapse X Luau decompiler.

local l__serverID__1 = workspace.ServerStuff.serverID;
while true do
	wait();
	if l__serverID__1.Value ~= "empty" then
		break;
	end;
end;
while true do
	if l__serverID__1.outdated.Value == true then
		script.Parent.frame.TextLabel.Text = "SERVER V.1." .. tostring(l__serverID__1.serverVer.Value) .. " | " .. l__serverID__1.Value .. " | CURRENT SERVER IS OUTDATED";
	else
		script.Parent.frame.TextLabel.Text = "SERVER V.1." .. tostring(l__serverID__1.serverVer.Value) .. " | " .. l__serverID__1.Value .. " |";
	end;
	wait();
end;
]]></ProtectedString></Properties></Item></Item></Item><Item class="Folder" referent="RBX1577"><Properties><string name="Name">NIL</string></Properties><Item class="BindableEvent" referent="RBX1580"><Properties><string name="Name">MessagePosted</string></Properties></Item><Item class="BindableEvent" referent="RBX1584"><Properties><string name="Name">Event</string></Properties></Item><Item class="LocalScript" referent="RBX1588"><Properties><string name="Name">luFM4OBUEfLHpjMb</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[--SynapseX Decompiler
--This script could not be decompiled due to it having no bytecode.
--This is usually caused by trying to decompile a Synapse X generated script.]]></ProtectedString></Properties></Item><Item class="BindableEvent" referent="RBX1596"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1600"><Properties><string name="Name">Event</string></Properties></Item><Item class="LocalScript" referent="RBX1604"><Properties><string name="Name">HlKE3EDMsqrxBgQWY1</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[--SynapseX Decompiler
--This script could not be decompiled due to it having no bytecode.
--This is usually caused by trying to decompile a Synapse X generated script.]]></ProtectedString></Properties></Item><Item class="BindableEvent" referent="RBX1612"><Properties><string name="Name">Event</string></Properties></Item><Item class="LocalScript" referent="RBX1616"><Properties><string name="Name">c4qKH6b0Ml</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[--SynapseX Decompiler
--This script could not be decompiled due to it having no bytecode.
--This is usually caused by trying to decompile a Synapse X generated script.]]></ProtectedString></Properties></Item><Item class="BindableEvent" referent="RBX1624"><Properties><string name="Name">Event</string></Properties></Item><Item class="LocalScript" referent="RBX1628"><Properties><string name="Name">wqK70NeotfaB59Yd9kkiLA1</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[--SynapseX Decompiler
--This script could not be decompiled due to it having no bytecode.
--This is usually caused by trying to decompile a Synapse X generated script.]]></ProtectedString></Properties></Item><Item class="BindableEvent" referent="RBX1636"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1640"><Properties><string name="Name">VisibilityStateChanged</string></Properties></Item><Item class="BindableEvent" referent="RBX1644"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1648"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1652"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1656"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1660"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1664"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1668"><Properties><string name="Name">MessagesChanged</string></Properties></Item><Item class="BindableEvent" referent="RBX1672"><Properties><string name="Name">ChatBarFocusChanged</string></Properties></Item><Item class="LocalScript" referent="RBX1676"><Properties><string name="Name">8fLuj3TMWZ6AHjd</string><bool name="Disabled">false</bool><ProtectedString name="Source"><![CDATA[--SynapseX Decompiler
--This script could not be decompiled due to it having no bytecode.
--This is usually caused by trying to decompile a Synapse X generated script.]]></ProtectedString></Properties></Item><Item class="BindableEvent" referent="RBX1684"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1688"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1692"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1696"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1700"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1704"><Properties><string name="Name">Event</string></Properties></Item><Item class="BindableEvent" referent="RBX1708"><Properties><string name="Name">Event</string></Properties></Item></Item></roblox>