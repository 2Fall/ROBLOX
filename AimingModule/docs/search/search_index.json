{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is this? This is a developer resource that helps you build scripts that involve any sort of aiming. This includes things such as: Silent Aim Aimbot and more! Source The source can be found here","title":"Home"},{"location":"#what-is-this","text":"This is a developer resource that helps you build scripts that involve any sort of aiming. This includes things such as: Silent Aim Aimbot and more!","title":"What is this?"},{"location":"#source","text":"The source can be found here","title":"Source"},{"location":"APIReference/Checks/","text":"What? These checks are used to determine whether a target is fits what we are looking for. As goes for every function, you may replace and tweak them to your liking.","title":"Index"},{"location":"APIReference/Checks/#what","text":"These checks are used to determine whether a target is fits what we are looking for. As goes for every function, you may replace and tweak them to your liking.","title":"What?"},{"location":"APIReference/Checks/global/","text":"Global Check < bool > Aiming . Check ( < void > ) This check sees whether the module has a target and if it is enabled. Source","title":"Global"},{"location":"APIReference/Checks/global/#global-check","text":"< bool > Aiming . Check ( < void > ) This check sees whether the module has a target and if it is enabled. Source","title":"Global Check"},{"location":"APIReference/Checks/health/","text":"Health Check < bool > Aiming . CheckHealth ( < Player > Player ) Some games like Phantom Forces may not stick to the traditional characters so there is a separate function specifically for checking a player's health. This returns true if your health is above 0. Source","title":"Health"},{"location":"APIReference/Checks/health/#health-check","text":"< bool > Aiming . CheckHealth ( < Player > Player ) Some games like Phantom Forces may not stick to the traditional characters so there is a separate function specifically for checking a player's health. This returns true if your health is above 0. Source","title":"Health Check"},{"location":"APIReference/Checks/ignored/","text":"Ignored Check This check does a couple things, like returning true if: Player is on the same team - source Player is specifically ignored - source Source Usage Team Check < bool > Aiming . IsIgnoredTeam ( < Player > Player ) Source Team + Player Check < bool > Aiming . IsIgnored ( < Player > Player ) Source","title":"Ignored"},{"location":"APIReference/Checks/ignored/#ignored-check","text":"This check does a couple things, like returning true if: Player is on the same team - source Player is specifically ignored - source Source","title":"Ignored Check"},{"location":"APIReference/Checks/ignored/#usage","text":"","title":"Usage"},{"location":"APIReference/Checks/ignored/#team-check","text":"< bool > Aiming . IsIgnoredTeam ( < Player > Player ) Source","title":"Team Check"},{"location":"APIReference/Checks/ignored/#team-player-check","text":"< bool > Aiming . IsIgnored ( < Player > Player ) Source","title":"Team + Player Check"},{"location":"APIReference/Checks/visible/","text":"Aiming.IsPartVisible < bool > Aiming . IsPartVisible ( < Part > Part , < Instance > PartDescendant ) Returns true whether a part is visible to your camera or not Source Why PartDescendant? Just in case lol idk","title":"Visible"},{"location":"APIReference/Checks/visible/#aimingispartvisible","text":"< bool > Aiming . IsPartVisible ( < Part > Part , < Instance > PartDescendant ) Returns true whether a part is visible to your camera or not Source","title":"Aiming.IsPartVisible"},{"location":"APIReference/Checks/visible/#why-partdescendant","text":"Just in case lol idk","title":"Why PartDescendant?"},{"location":"APIReference/Ignore/","text":"What? This module has an ignoring system and it does what you would think. It ignores certain players from targetting as you wish. Note: <<bool> success> means if a function returns false, it is because they are already being ignored.","title":"Index"},{"location":"APIReference/Ignore/#what","text":"This module has an ignoring system and it does what you would think. It ignores certain players from targetting as you wish.","title":"What?"},{"location":"APIReference/Ignore/#note","text":"<<bool> success> means if a function returns false, it is because they are already being ignored.","title":"Note:"},{"location":"APIReference/Ignore/player/","text":"Ignoring Players << bool > success > Aiming . IgnorePlayer ( < Player > Player ) Sometimes, you do not want to target your friends so you can \"ignore\" them with this simple function: Parameters Player Player The player you want to ignore Returns bool success Returns false if already is being ignored Source Un-ignoring Players << bool > success > Aiming . UnIgnorePlayer ( < Player > Player ) However, if they are getting on your nerves, you can revert that with this function: Parameters Player Player The player you want to un-ignore Returns bool success Returns false if already is being ignored Source","title":"Player"},{"location":"APIReference/Ignore/player/#ignoring-players","text":"<< bool > success > Aiming . IgnorePlayer ( < Player > Player ) Sometimes, you do not want to target your friends so you can \"ignore\" them with this simple function:","title":"Ignoring Players"},{"location":"APIReference/Ignore/player/#parameters","text":"Player Player The player you want to ignore","title":"Parameters"},{"location":"APIReference/Ignore/player/#returns","text":"bool success Returns false if already is being ignored Source","title":"Returns"},{"location":"APIReference/Ignore/player/#un-ignoring-players","text":"<< bool > success > Aiming . UnIgnorePlayer ( < Player > Player ) However, if they are getting on your nerves, you can revert that with this function:","title":"Un-ignoring Players"},{"location":"APIReference/Ignore/player/#parameters_1","text":"Player Player The player you want to un-ignore","title":"Parameters"},{"location":"APIReference/Ignore/player/#returns_1","text":"bool success Returns false if already is being ignored Source","title":"Returns"},{"location":"APIReference/Ignore/team/","text":"Aiming.IgnoreTeam << bool > success > Aiming . IgnoreTeam ( < Team > Team , < Color3 > TeamColor ) Of course, you do not want to shoot against your own teams, so you can use this function to ignore certain teams (including your own) Parameters Team Team The team you want to ignore Color3 TeamColor The team color of the team you want to ignore Returns bool success Returns false if already is being ignored Source Un-ignore Teams << bool > success > Aiming . UnIgnoreTeam ( < Team > Team , < Color3 > TeamColor ) However, if they are being toxic, you can get back at them with this function which un-ignores them Parameters Team Team The team you want to ignore Color3 TeamColor The team color of the team you want to ignore Returns bool success Returns false if already is being ignored Source","title":"Team"},{"location":"APIReference/Ignore/team/#aimingignoreteam","text":"<< bool > success > Aiming . IgnoreTeam ( < Team > Team , < Color3 > TeamColor ) Of course, you do not want to shoot against your own teams, so you can use this function to ignore certain teams (including your own)","title":"Aiming.IgnoreTeam"},{"location":"APIReference/Ignore/team/#parameters","text":"Team Team The team you want to ignore Color3 TeamColor The team color of the team you want to ignore","title":"Parameters"},{"location":"APIReference/Ignore/team/#returns","text":"bool success Returns false if already is being ignored Source","title":"Returns"},{"location":"APIReference/Ignore/team/#un-ignore-teams","text":"<< bool > success > Aiming . UnIgnoreTeam ( < Team > Team , < Color3 > TeamColor ) However, if they are being toxic, you can get back at them with this function which un-ignores them","title":"Un-ignore Teams"},{"location":"APIReference/Ignore/team/#parameters_1","text":"Team Team The team you want to ignore Color3 TeamColor The team color of the team you want to ignore","title":"Parameters"},{"location":"APIReference/Ignore/team/#returns_1","text":"bool success Returns false if already is being ignored Source","title":"Returns"},{"location":"APIReference/Settings/","text":"Settings Well uh, these are the settings...","title":"Index"},{"location":"APIReference/Settings/#settings","text":"Well uh, these are the settings...","title":"Settings"},{"location":"APIReference/Settings/enabled/","text":"Aiming.Enabled Aiming . Enabled = < bool > true Well, this is self explanatory...","title":"Enabled"},{"location":"APIReference/Settings/enabled/#aimingenabled","text":"Aiming . Enabled = < bool > true Well, this is self explanatory...","title":"Aiming.Enabled"},{"location":"APIReference/Settings/fov/","text":"Aiming.FOV Aiming . FOV = < number > 60 This number dictates how big the FOV Circle will be","title":"FOV"},{"location":"APIReference/Settings/fov/#aimingfov","text":"Aiming . FOV = < number > 60 This number dictates how big the FOV Circle will be","title":"Aiming.FOV"},{"location":"APIReference/Settings/fovsides/","text":"Aiming.FOVSides Aiming . FOVSides = < number > 12 This is the amount of sides the FOV Circle will have","title":"FOV Sides"},{"location":"APIReference/Settings/fovsides/#aimingfovsides","text":"Aiming . FOVSides = < number > 12 This is the amount of sides the FOV Circle will have","title":"Aiming.FOVSides"},{"location":"APIReference/Settings/hitchance/","text":"Aiming.HitChance Aiming . HitChance = < number > 100 The percentage amount of times where the module will actually work","title":"Hit Chance"},{"location":"APIReference/Settings/hitchance/#aiminghitchance","text":"Aiming . HitChance = < number > 100 The percentage amount of times where the module will actually work","title":"Aiming.HitChance"},{"location":"APIReference/Settings/showfov/","text":"Aiming.ShowFOV Aiming . ShowFOV = < bool > true Shows the FOV Circle or not","title":"Show FOV"},{"location":"APIReference/Settings/showfov/#aimingshowfov","text":"Aiming . ShowFOV = < bool > true Shows the FOV Circle or not","title":"Aiming.ShowFOV"},{"location":"APIReference/Settings/targetpart/","text":"Aiming.TargetPart Aiming . TargetPart = < array / string > { \"Head\" , \"HumanoidRootPart\" } This one is special, you can either have it as an array of parts you want to target or only one as a string. It does as it says and returns the target part; e.g. a player's head.","title":"Target Part"},{"location":"APIReference/Settings/targetpart/#aimingtargetpart","text":"Aiming . TargetPart = < array / string > { \"Head\" , \"HumanoidRootPart\" } This one is special, you can either have it as an array of parts you want to target or only one as a string. It does as it says and returns the target part; e.g. a player's head.","title":"Aiming.TargetPart"},{"location":"APIReference/Settings/visiblecheck/","text":"Aiming.VisibleCheck Aiming . VisibleCheck = < bool > true This toggles the visibility check","title":"Visible Check"},{"location":"APIReference/Settings/visiblecheck/#aimingvisiblecheck","text":"Aiming . VisibleCheck = < bool > true This toggles the visibility check","title":"Aiming.VisibleCheck"},{"location":"APIReference/Utilities/","text":"What? These are some utilities. They do various things but, like always, are customisable.","title":"Index"},{"location":"APIReference/Utilities/#what","text":"These are some utilities. They do various things but, like always, are customisable.","title":"What?"},{"location":"APIReference/Utilities/chance/","text":"Aiming.CalcChance << bool > success > Aiming . CalcChance ( < number > Percentage ) This function does the maths for a chance. For example, inputting 50 would return true roughly 50% of the time Parameters number Percentage The percentage that it will return true Returns bool success Source","title":"Chance"},{"location":"APIReference/Utilities/chance/#aimingcalcchance","text":"<< bool > success > Aiming . CalcChance ( < number > Percentage ) This function does the maths for a chance. For example, inputting 50 would return true roughly 50% of the time","title":"Aiming.CalcChance"},{"location":"APIReference/Utilities/chance/#parameters","text":"number Percentage The percentage that it will return true","title":"Parameters"},{"location":"APIReference/Utilities/chance/#returns","text":"bool success Source","title":"Returns"},{"location":"APIReference/Utilities/character/","text":"Aiming.Character << Model > Character > Aiming . Character ( < Player > Player ) This simple function returns your character. Useful to overwrite for games that do not use the traditional character system. Parameters Player Player The Player's character you want to get Returns Model Character Source","title":"Character"},{"location":"APIReference/Utilities/character/#aimingcharacter","text":"<< Model > Character > Aiming . Character ( < Player > Player ) This simple function returns your character. Useful to overwrite for games that do not use the traditional character system.","title":"Aiming.Character"},{"location":"APIReference/Utilities/character/#parameters","text":"Player Player The Player's character you want to get","title":"Parameters"},{"location":"APIReference/Utilities/character/#returns","text":"Model Character Source","title":"Returns"},{"location":"APIReference/Utilities/closestplayer/","text":"Aiming.GetClosestPlayerToCursor << Player > Selected , < Part > TargetPart > Aiming . GetClosestPlayerToCursor ( < void > ) This function gets the closest player to your cursor. Parameters none Returns Player Player The closest player to your cursor Part Target Part The closest target part to your cursor Source","title":"Closest Player"},{"location":"APIReference/Utilities/closestplayer/#aiminggetclosestplayertocursor","text":"<< Player > Selected , < Part > TargetPart > Aiming . GetClosestPlayerToCursor ( < void > ) This function gets the closest player to your cursor.","title":"Aiming.GetClosestPlayerToCursor"},{"location":"APIReference/Utilities/closestplayer/#parameters","text":"none","title":"Parameters"},{"location":"APIReference/Utilities/closestplayer/#returns","text":"Player Player The closest player to your cursor Part Target Part The closest target part to your cursor Source","title":"Returns"},{"location":"APIReference/Utilities/fovcircle/","text":"Aiming.UpdateFOV < void > Aiming . UpdateFOV ( < void > ) This function handles the FOV circle, and returns nothing. This function should be executed very often. Parameters none Returns nil Source","title":"FOV Circle"},{"location":"APIReference/Utilities/fovcircle/#aimingupdatefov","text":"< void > Aiming . UpdateFOV ( < void > ) This function handles the FOV circle, and returns nothing. This function should be executed very often.","title":"Aiming.UpdateFOV"},{"location":"APIReference/Utilities/fovcircle/#parameters","text":"none","title":"Parameters"},{"location":"APIReference/Utilities/fovcircle/#returns","text":"nil Source","title":"Returns"},{"location":"APIReference/Utilities/raycast/","text":"Aiming.Raycast << Vector3 > Direction , < Vector3 > Normal , < Material > Material > Aiming . Raycast ( < Vector3 > Origin , < Vector3 > Destination , < number > UnitMultiplier = 1 ) This simple function does the maths for you and fires a ray. You only need to input the origin, the desired destination, and unit multiplier (default to 1). It returns the Direction, Normal, and material if the ray hits something. Parameters Vector3 Direction Vector3 Normal number Unit Multiplier Returns Vector3 Direction Vector3 Normal Material Material Source","title":"Raycast"},{"location":"APIReference/Utilities/raycast/#aimingraycast","text":"<< Vector3 > Direction , < Vector3 > Normal , < Material > Material > Aiming . Raycast ( < Vector3 > Origin , < Vector3 > Destination , < number > UnitMultiplier = 1 ) This simple function does the maths for you and fires a ray. You only need to input the origin, the desired destination, and unit multiplier (default to 1). It returns the Direction, Normal, and material if the ray hits something.","title":"Aiming.Raycast"},{"location":"APIReference/Utilities/raycast/#parameters","text":"Vector3 Direction Vector3 Normal number Unit Multiplier","title":"Parameters"},{"location":"APIReference/Utilities/raycast/#returns","text":"Vector3 Direction Vector3 Normal Material Material Source","title":"Returns"},{"location":"APIReference/Utilities/targetpart/","text":"Aiming.GetClosestTargetPartToCursor << Part > TargetPart > Aiming . GetClosestTargetPartToCursor ( < Model > Character ) This function gets the closest target part (of a specific character) to your cursor Parameters Model Character The character of which you want to get the closest target part of Returns Part Target Part Source","title":"Target Part"},{"location":"APIReference/Utilities/targetpart/#aiminggetclosesttargetparttocursor","text":"<< Part > TargetPart > Aiming . GetClosestTargetPartToCursor ( < Model > Character ) This function gets the closest target part (of a specific character) to your cursor","title":"Aiming.GetClosestTargetPartToCursor"},{"location":"APIReference/Utilities/targetpart/#parameters","text":"Model Character The character of which you want to get the closest target part of","title":"Parameters"},{"location":"APIReference/Utilities/targetpart/#returns","text":"Part Target Part Source","title":"Returns"},{"location":"APIReference/Utilities/teamcheck/","text":"Aiming.Team Check << bool > success > Aiming . TeamCheck ( < bool > Toggle ) Due to the nature of how the ignore system works, I have made a simple function that lets you toggle the same team check on and off by adding or removing your team from the ignored teams Parameters bool Toggle Whether to toggle team check on and off Returns Part The target part Source","title":"Team Check"},{"location":"APIReference/Utilities/teamcheck/#aimingteam-check","text":"<< bool > success > Aiming . TeamCheck ( < bool > Toggle ) Due to the nature of how the ignore system works, I have made a simple function that lets you toggle the same team check on and off by adding or removing your team from the ignored teams","title":"Aiming.Team Check"},{"location":"APIReference/Utilities/teamcheck/#parameters","text":"bool Toggle Whether to toggle team check on and off","title":"Parameters"},{"location":"APIReference/Utilities/teamcheck/#returns","text":"Part The target part Source","title":"Returns"},{"location":"Examples/","text":"Index Example Here is an example silent aim, it will work on some games that purely use the Mouse's Hit and Target properties. -- // Metatable Variables local mt = getrawmetatable ( game ) local __index = mt . __index setreadonly ( mt , false ) -- // Load Silent Aim local Aiming = loadstring ( game : HttpGet ( \"https://raw.githubusercontent.com/Stefanuk12/ROBLOX/master/Universal/Aiming/Module.lua\" ))() -- // Hook mt . __index = newcclosure ( function ( t , k ) -- // Check if it trying to get our mouse's hit or target if ( t : IsA ( \"Mouse\" ) and ( k == \"Hit\" or k == \"Target\" )) then -- // If we have a target and if it is enabled if ( Aiming . Check ()) then -- // Vars local TargetPart = Aiming . SelectedPart -- // Return modded val return ( k == \"Hit\" and TargetPart . CFrame or TargetPart ) end end -- // Return return __index ( t , k ) end )","title":"Index"},{"location":"Examples/#index-example","text":"Here is an example silent aim, it will work on some games that purely use the Mouse's Hit and Target properties. -- // Metatable Variables local mt = getrawmetatable ( game ) local __index = mt . __index setreadonly ( mt , false ) -- // Load Silent Aim local Aiming = loadstring ( game : HttpGet ( \"https://raw.githubusercontent.com/Stefanuk12/ROBLOX/master/Universal/Aiming/Module.lua\" ))() -- // Hook mt . __index = newcclosure ( function ( t , k ) -- // Check if it trying to get our mouse's hit or target if ( t : IsA ( \"Mouse\" ) and ( k == \"Hit\" or k == \"Target\" )) then -- // If we have a target and if it is enabled if ( Aiming . Check ()) then -- // Vars local TargetPart = Aiming . SelectedPart -- // Return modded val return ( k == \"Hit\" and TargetPart . CFrame or TargetPart ) end end -- // Return return __index ( t , k ) end )","title":"Index Example"},{"location":"Examples/namecall/","text":"Namecall Example This is a framework to build your own silent aim. -- // Metatable Variables local mt = getrawmetatable ( game ) local __namecall = mt . __index setreadonly ( mt , false ) -- // Load Silent Aim local Aiming = loadstring ( game : HttpGet ( \"https://raw.githubusercontent.com/Stefanuk12/ROBLOX/master/Universal/Aiming/Module.lua\" ))() -- // Hook mt . __namecall = newcclosure ( function (...) -- // Vars local args = {...} local method = getnamecallmethod () -- // Checks if ( method == \"FireServer\" ) then if ( args [ 1 ]. Name == \"RemoteNameHere\" and Aiming . Check ()) then -- // Vars local SelectedPart = Aiming . SelectedPart -- // Change the arguments here, for example: args [ 2 ]. Target = SelectedPart -- // Return changed arguments return backupnamecall ( unpack ( args )) end end -- // Return return __namecall (...) end )","title":"Namecall"},{"location":"Examples/namecall/#namecall-example","text":"This is a framework to build your own silent aim. -- // Metatable Variables local mt = getrawmetatable ( game ) local __namecall = mt . __index setreadonly ( mt , false ) -- // Load Silent Aim local Aiming = loadstring ( game : HttpGet ( \"https://raw.githubusercontent.com/Stefanuk12/ROBLOX/master/Universal/Aiming/Module.lua\" ))() -- // Hook mt . __namecall = newcclosure ( function (...) -- // Vars local args = {...} local method = getnamecallmethod () -- // Checks if ( method == \"FireServer\" ) then if ( args [ 1 ]. Name == \"RemoteNameHere\" and Aiming . Check ()) then -- // Vars local SelectedPart = Aiming . SelectedPart -- // Change the arguments here, for example: args [ 2 ]. Target = SelectedPart -- // Return changed arguments return backupnamecall ( unpack ( args )) end end -- // Return return __namecall (...) end )","title":"Namecall Example"}]}